'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var helpers = require('./helpers.js');
var config = require('./config.js');
var plugins$1 = require('./plugins-01bd04cc.js');
require('./Icon-2540a413.js');
require('./ssr-39c7e185.js');
var Loading = require('./Loading-36b28296.js');
var InstanceRegistry = require('./InstanceRegistry-70c57269.js');

let localVueInstance;
let instances = new InstanceRegistry.InstanceRegistry();
const LoadingProgrammatic = {
  open(params) {
    let parent;
    const defaultParam = {
      programmatic: {
        instances
      }
    };

    if (params.parent) {
      parent = params.parent;
      delete params.parent;
    }

    const propsData = helpers.merge(defaultParam, params);

    if (window.Promise) {
      propsData.promise = new Promise((p1, p2) => {
        propsData.programmatic.resolve = p1;
        propsData.programmatic.reject = p2;
      });
    }

    const vm = typeof window !== 'undefined' && window.Vue ? window.Vue : localVueInstance || config.VueInstance;
    const LoadingComponent = vm.extend(Loading.__vue_component__);
    return new LoadingComponent({
      parent,
      el: document.createElement('div'),
      propsData
    });
  },

  closeAll() {
    instances.walk(entry => {
      entry.close(...arguments);
    });
  }

};
const Plugin = {
  install(Vue) {
    localVueInstance = Vue;
    plugins$1.registerComponent(Vue, Loading.__vue_component__);
    plugins$1.registerComponentProgrammatic(Vue, 'loading', LoadingProgrammatic);
  }

};
plugins$1.use(Plugin);

exports.OLoading = Loading.__vue_component__;
exports.LoadingProgrammatic = LoadingProgrammatic;
exports.default = Plugin;
