import { LoadingProps } from './props';
type __VLS_Props = LoadingProps;
/** set active to false and emit close event */
declare function close(...args: unknown[]): void;
type __VLS_PublicProps = {
    "fullPage"?: boolean;
    "active"?: boolean;
} & __VLS_Props;
declare function __VLS_template(): {
    attrs: Partial<{}>;
    slots: {
        default?(_: {
            close: typeof close;
        }): any;
    };
    refs: {
        rootElement: HTMLDivElement;
    };
    rootEl: any;
};
type __VLS_TemplateResult = ReturnType<typeof __VLS_template>;
declare const __VLS_component: import('vue').DefineComponent<__VLS_PublicProps, {
    close: typeof close;
}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {
    close: (...args: unknown[]) => any;
    "update:active": (...args: unknown[]) => any;
    "update:fullPage": (...args: unknown[]) => any;
}, string, import('vue').PublicProps, Readonly<__VLS_PublicProps> & Readonly<{
    onClose?: ((...args: unknown[]) => any) | undefined;
    "onUpdate:active"?: ((...args: unknown[]) => any) | undefined;
    "onUpdate:fullPage"?: ((...args: unknown[]) => any) | undefined;
}>, {
    label: string;
    override: boolean;
    icon: string;
    active: boolean;
    animation: string;
    iconSize: string;
    clipScroll: boolean;
    iconSpin: boolean;
    cancelable: boolean;
    fullPage: boolean;
}, {}, {}, {}, string, import('vue').ComponentProvideOptions, false, {
    rootElement: HTMLDivElement;
}, any>;
declare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, __VLS_TemplateResult["slots"]>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
