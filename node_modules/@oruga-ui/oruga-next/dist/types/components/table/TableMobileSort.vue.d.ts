import { TableColumnItem } from './types';
import { ClassBind } from '../../types';
declare const _default: <T>(__VLS_props: NonNullable<Awaited<typeof __VLS_setup>>["props"], __VLS_ctx?: __VLS_PrettifyLocal<Pick<NonNullable<Awaited<typeof __VLS_setup>>, "attrs" | "emit" | "slots">>, __VLS_expose?: NonNullable<Awaited<typeof __VLS_setup>>["expose"], __VLS_setup?: Promise<{
    props: __VLS_PrettifyLocal<Pick<Partial<{
        iconPack: string;
        sortIcon: string;
        sortIconSize: string;
        placeholder: string;
        currentSortColumn: TableColumnItem<T>;
        columns: TableColumnItem<T>[];
        isAsc: boolean;
    }> & Omit<{
        readonly sortIcon: string;
        readonly sortIconSize: string;
        readonly isAsc: boolean;
        readonly mobileSortClasses: ClassBind[];
        readonly iconPack?: string | undefined;
        readonly placeholder?: string | undefined;
        readonly currentSortColumn?: TableColumnItem<T> | undefined;
        readonly columns?: TableColumnItem<T>[] | undefined;
        readonly onSort?: ((column: TableColumnItem<T>, event: Event) => any) | undefined;
    } & import('vue').VNodeProps & import('vue').AllowedComponentProps & import('vue').ComponentCustomProps, "iconPack" | "sortIcon" | "sortIconSize" | "placeholder" | "currentSortColumn" | "columns" | "isAsc">, "mobileSortClasses" | "onSort" | ("iconPack" | "sortIcon" | "sortIconSize" | "placeholder" | "currentSortColumn" | "columns" | "isAsc")> & {} & Partial<{}>> & import('vue').PublicProps;
    expose(exposed: import('vue').ShallowUnwrapRef<{}>): void;
    attrs: any;
    slots: {};
    emit: (evt: "sort", column: TableColumnItem<T>, event: Event) => void;
}>) => import('vue').VNode & {
    __ctx?: Awaited<typeof __VLS_setup>;
};
export default _default;
type __VLS_PrettifyLocal<T> = {
    [K in keyof T]: T[K];
} & {};
