import { NotificationProps } from './props';
type __VLS_Props = NotificationProps;
/** set active to false and emit close event */
declare function close(...args: unknown[]): void;
type __VLS_PublicProps = {
    "active"?: boolean;
} & __VLS_Props;
declare function __VLS_template(): {
    attrs: Partial<{}>;
    slots: {
        inner?(_: {
            close: typeof close;
        }): any;
        default?(_: {
            close: typeof close;
        }): any;
    };
    refs: {};
    rootEl: any;
};
type __VLS_TemplateResult = ReturnType<typeof __VLS_template>;
declare const __VLS_component: import('vue').DefineComponent<__VLS_PublicProps, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {
    close: (...args: unknown[]) => any;
    "update:active": (...args: unknown[]) => any;
}, string, import('vue').PublicProps, Readonly<__VLS_PublicProps> & Readonly<{
    onClose?: ((...args: unknown[]) => any) | undefined;
    "onUpdate:active"?: ((...args: unknown[]) => any) | undefined;
}>, {
    iconPack: string;
    override: boolean;
    icon: string;
    position: "top-right" | "top" | "top-left" | "bottom-right" | "bottom" | "bottom-left";
    variant: string;
    message: string;
    active: boolean;
    type: string;
    animation: string;
    iconSize: string;
    closable: boolean;
    closeIcon: string;
    closeIconSize: string;
    ariaCloseLabel: string;
}, {}, {}, {}, string, import('vue').ComponentProvideOptions, false, {}, any>;
declare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, __VLS_TemplateResult["slots"]>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
