import { PropType } from 'vue';
import { ClassBind, DynamicComponent } from '../../types';
declare function __VLS_template(): {
    attrs: Partial<{}>;
    slots: {
        default?(_: {}): any;
    };
    refs: {};
    rootEl: any;
};
type __VLS_TemplateResult = ReturnType<typeof __VLS_template>;
declare const __VLS_component: import('vue').DefineComponent<import('vue').ExtractPropTypes<{
    number: {
        type: NumberConstructor;
        default: undefined;
    };
    isCurrent: {
        type: BooleanConstructor;
        default: boolean;
    };
    ariaLabel: {
        type: StringConstructor;
        default: undefined;
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    tag: {
        type: PropType<DynamicComponent>;
        default: DynamicComponent;
    };
    rootClass: {
        type: PropType<ClassBind[]>;
        default: () => never[];
    };
    buttonClass: {
        type: PropType<ClassBind[]>;
        required: true;
    };
    buttonCurrentClass: {
        type: PropType<ClassBind[]>;
        required: true;
    };
}>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {
    click: (event: Event) => any;
}, string, import('vue').PublicProps, Readonly<import('vue').ExtractPropTypes<{
    number: {
        type: NumberConstructor;
        default: undefined;
    };
    isCurrent: {
        type: BooleanConstructor;
        default: boolean;
    };
    ariaLabel: {
        type: StringConstructor;
        default: undefined;
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    tag: {
        type: PropType<DynamicComponent>;
        default: DynamicComponent;
    };
    rootClass: {
        type: PropType<ClassBind[]>;
        default: () => never[];
    };
    buttonClass: {
        type: PropType<ClassBind[]>;
        required: true;
    };
    buttonCurrentClass: {
        type: PropType<ClassBind[]>;
        required: true;
    };
}>> & Readonly<{
    onClick?: ((event: Event) => any) | undefined;
}>, {
    number: number;
    rootClass: ClassBind[];
    tag: DynamicComponent;
    ariaLabel: string;
    disabled: boolean;
    isCurrent: boolean;
}, {}, {}, {}, string, import('vue').ComponentProvideOptions, true, {}, any>;
declare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, __VLS_TemplateResult["slots"]>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
