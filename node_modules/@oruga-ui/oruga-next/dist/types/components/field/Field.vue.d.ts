import { FieldProps } from './props';
declare function __VLS_template(): {
    attrs: Partial<{}>;
    slots: {
        label?(_: {
            label: string;
        }): any;
        label?(_: {
            label: string;
        }): any;
        message?(_: {
            message: string | undefined;
        }): any;
        message?(_: {
            message: string | undefined;
        }): any;
        default?(_: {}): any;
        default?(_: {}): any;
    };
    refs: {
        rootElement: HTMLDivElement;
    };
    rootEl: HTMLDivElement;
};
type __VLS_TemplateResult = ReturnType<typeof __VLS_template>;
declare const __VLS_component: import('vue').DefineComponent<FieldProps, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, string, import('vue').PublicProps, Readonly<FieldProps> & Readonly<{}>, {
    label: string;
    mobileBreakpoint: string;
    override: boolean;
    variant: string;
    message: string;
    messageTag: import('../..').DynamicComponent;
    horizontal: boolean;
    labelId: string;
    multiline: boolean;
    labelSize: string;
    labelFor: string;
    messageId: string;
    grouped: boolean;
    addons: boolean;
}, {}, {}, {}, string, import('vue').ComponentProvideOptions, false, {
    rootElement: HTMLDivElement;
}, HTMLDivElement>;
declare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, __VLS_TemplateResult["slots"]>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
