declare const _default: <T>(__VLS_props: NonNullable<Awaited<typeof __VLS_setup>>["props"], __VLS_ctx?: __VLS_PrettifyLocal<Pick<NonNullable<Awaited<typeof __VLS_setup>>, "attrs" | "emit" | "slots">>, __VLS_expose?: NonNullable<Awaited<typeof __VLS_setup>>["expose"], __VLS_setup?: Promise<{
    props: __VLS_PrettifyLocal<Pick<Partial<{}> & Omit<{
        readonly onChange?: ((newValue: T | undefined, oldValue: T | undefined) => any) | undefined;
        readonly "onUpdate:modelValue"?: ((value: T | undefined) => any) | undefined;
        readonly "onUpdate:model-value"?: ((value: T | undefined) => any) | undefined;
    } & import('vue').VNodeProps & import('vue').AllowedComponentProps & import('vue').ComponentCustomProps, never>, "onChange" | "onUpdate:modelValue" | "onUpdate:model-value"> & ({
        modelValue?: T | undefined;
    } & {
        override?: boolean;
        modelValue?: T | undefined;
        options?: import('../../composables').OptionsProp<T> | undefined;
        variant?: string;
        size?: string;
        vertical?: boolean;
        position?: "left" | "centered" | "right";
        iconPack?: string;
        iconPrev?: string;
        iconNext?: string;
        hasNavigation?: boolean;
        activateOnFocus?: boolean;
        animated?: boolean;
        animation?: [string, string] | [string, string, string, string];
        animateInitially?: boolean;
        labelPosition?: "bottom" | "right" | "left";
        rounded?: boolean;
        mobileBreakpoint?: string;
        ariaLabel?: string;
        ariaNextLabel?: string;
        ariaPreviousLabel?: string;
    } & Partial<{
        rootClass: import('../..').ComponentClass;
        mobileClass: import('../..').ComponentClass;
        sizeClass: import('../..').ComponentClass;
        variantClass: import('../..').ComponentClass;
        verticalClass: import('../..').ComponentClass;
        positionClass: import('../..').ComponentClass;
        listClass: import('../..').ComponentClass;
        animatedClass: import('../..').ComponentClass;
        dividerClass: import('../..').ComponentClass;
        markerClass: import('../..').ComponentClass;
        markerRoundedClass: import('../..').ComponentClass;
        contentClass: import('../..').ComponentClass;
        transitioningClass: import('../..').ComponentClass;
        navigationClass: import('../..').ComponentClass;
    }>) & Partial<{}>> & import('vue').PublicProps;
    expose(exposed: import('vue').ShallowUnwrapRef<{}>): void;
    attrs: any;
    slots: {
        default?(_: {}): any;
        navigation?(_: {
            previous: {
                disabled: boolean;
                action: () => void;
            };
            next: {
                disabled: boolean;
                action: () => void;
            };
        }): any;
    };
    emit: (((evt: "change", newValue: T | undefined, oldValue: T | undefined) => void) & ((evt: "update:model-value", value: T | undefined) => void)) & ((evt: "update:modelValue", value: T | undefined) => void);
}>) => import('vue').VNode & {
    __ctx?: Awaited<typeof __VLS_setup>;
};
export default _default;
type __VLS_PrettifyLocal<T> = {
    [K in keyof T]: T[K];
} & {};
