import { PropType } from 'vue';
import { ComponentClass } from '../../types';
declare function __VLS_template(): {
    attrs: Partial<{}>;
    slots: {
        default?(_: {}): any;
    };
    refs: {};
    rootEl: HTMLDivElement;
};
type __VLS_TemplateResult = ReturnType<typeof __VLS_template>;
declare const __VLS_component: import('vue').DefineComponent<import('vue').ExtractPropTypes<{
    /** Override existing theme classes completely */
    override: {
        type: BooleanConstructor;
        default: undefined;
    };
    /** Value of single tick */
    value: {
        type: NumberConstructor;
        required: true;
    };
    /** Tick label */
    label: {
        type: (StringConstructor | NumberConstructor)[];
        default: undefined;
    };
    tickClass: {
        type: PropType<ComponentClass>;
        default: undefined;
    };
    /** Class when slider tick is hidden */
    tickHiddenClass: {
        type: PropType<ComponentClass>;
        default: undefined;
    };
    /** Class of tick label */
    tickLabelClass: {
        type: PropType<ComponentClass>;
        default: undefined;
    };
}>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, string, import('vue').PublicProps, Readonly<import('vue').ExtractPropTypes<{
    /** Override existing theme classes completely */
    override: {
        type: BooleanConstructor;
        default: undefined;
    };
    /** Value of single tick */
    value: {
        type: NumberConstructor;
        required: true;
    };
    /** Tick label */
    label: {
        type: (StringConstructor | NumberConstructor)[];
        default: undefined;
    };
    tickClass: {
        type: PropType<ComponentClass>;
        default: undefined;
    };
    /** Class when slider tick is hidden */
    tickHiddenClass: {
        type: PropType<ComponentClass>;
        default: undefined;
    };
    /** Class of tick label */
    tickLabelClass: {
        type: PropType<ComponentClass>;
        default: undefined;
    };
}>> & Readonly<{}>, {
    label: string | number;
    override: boolean;
    tickClass: ComponentClass;
    tickHiddenClass: ComponentClass;
    tickLabelClass: ComponentClass;
}, {}, {}, {}, string, import('vue').ComponentProvideOptions, true, {}, HTMLDivElement>;
declare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, __VLS_TemplateResult["slots"]>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
