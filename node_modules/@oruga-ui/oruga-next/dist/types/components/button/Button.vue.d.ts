import { ButtonProps } from './props';
declare function __VLS_template(): {
    attrs: Partial<{}>;
    slots: {
        default?(_: {}): any;
    };
    refs: {};
    rootEl: any;
};
type __VLS_TemplateResult = ReturnType<typeof __VLS_template>;
declare const __VLS_component: import('vue').DefineComponent<ButtonProps, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {
    click: (event: Event) => any;
}, string, import('vue').PublicProps, Readonly<ButtonProps> & Readonly<{
    onClick?: ((event: Event) => any) | undefined;
}>, {
    size: string;
    label: string;
    iconPack: string;
    override: boolean;
    loading: boolean;
    variant: string;
    type: "button" | "submit" | "reset";
    iconRight: string;
    tag: import('../..').DynamicComponent;
    rounded: boolean;
    expanded: boolean;
    disabled: boolean;
    iconLeft: string;
    outlined: boolean;
    inverted: boolean;
    iconBoth: boolean;
}, {}, {}, {}, string, import('vue').ComponentProvideOptions, false, {}, any>;
declare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, __VLS_TemplateResult["slots"]>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
