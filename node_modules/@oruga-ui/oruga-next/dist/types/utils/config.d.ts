import { App } from 'vue';
import { DeepType, OrugaOptions } from '../types';
declare module "../index" {
    interface OrugaProgrammatic {
        config: typeof ConfigProgrammatic;
    }
}
export declare const setOptions: (options: OrugaOptions) => void;
export declare const getOptions: () => OrugaOptions;
export declare const getOption: <K extends keyof OrugaOptions | string>(path: K, defaultValue?: DeepType<OrugaOptions, K>) => DeepType<OrugaOptions, K> | undefined;
/** less type strict version of getOption for component props defaults */
export declare const getDefault: <T>(path: string, defaultValue?: T) => T;
export declare const setOption: <T>(path: string, value: T) => void;
export declare const ConfigProgrammatic: {
    getOption: <K extends keyof OrugaOptions | string>(path: K, defaultValue?: DeepType<OrugaOptions, K>) => DeepType<OrugaOptions, K> | undefined;
    getOptions: () => OrugaOptions;
    setOption: <T>(path: string, value: T) => void;
    setOptions(options: OrugaOptions): void;
};
export declare const OrugaConfig: {
    install(app: App, options?: OrugaOptions): void;
};
