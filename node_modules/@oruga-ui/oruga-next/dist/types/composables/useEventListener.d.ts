import { MaybeRefOrGetter, Ref, Component } from 'vue';
export type EventTarget = Element | Document | Window | Component;
export type EventListenerOptions = AddEventListenerOptions & {
    /** Register event listener immediate or on mounted hook. */
    immediate?: boolean;
    /** Trigger when the listener get registered and removed */
    trigger?: Ref<boolean>;
};
/**
 * Register DOM events using addEventListener on mounted, and removeEventListener automatically on unmounted.
 * Adaption of {@link  https://vueuse.org/core/useEventListener}
 *
 * @param element DOM element to add the listener to
 * @param event Event name
 * @param handler Event handler function
 * @param options EventListenerOptions
 * @return stop function
 */
export declare function useEventListener(element: MaybeRefOrGetter<EventTarget>, event: string, handler: (evt?: any) => void, options?: EventListenerOptions): () => void;
