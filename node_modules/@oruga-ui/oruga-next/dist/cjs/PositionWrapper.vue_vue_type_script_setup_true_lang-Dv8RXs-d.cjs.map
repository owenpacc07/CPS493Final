{"version":3,"file":"PositionWrapper.vue_vue_type_script_setup_true_lang-Dv8RXs-d.cjs","sources":["../../src/composables/useScrollingParent.ts","../../src/components/utils/PositionWrapper.vue"],"sourcesContent":["import { isDefined } from \"@/utils/helpers\";\n\n/**\n * Given an element, returns the element who scrolls it.\n */\nexport function getScrollingParent(target: HTMLElement): HTMLElement | null {\n    if (target.style.position === \"fixed\" || !target)\n        return document.documentElement;\n\n    let isScrollingParent = false;\n    let nextParent = target.parentElement;\n\n    while (!isScrollingParent && isDefined(nextParent)) {\n        if (nextParent === document.documentElement) break;\n\n        const { overflow, overflowY } = getComputedStyle(nextParent);\n        const { scrollHeight, clientHeight } = nextParent; // Both rounded by nature\n\n        isScrollingParent =\n            /(auto|scroll)/.test(`${overflow}${overflowY}`) &&\n            scrollHeight > clientHeight;\n\n        /* ...found it, this one is returned */\n        if (isScrollingParent) break;\n\n        /* ...if not check the next one */\n        nextParent = nextParent.parentElement;\n    }\n\n    return nextParent;\n}\n","<script setup lang=\"ts\">\nimport {\n    watch,\n    computed,\n    nextTick,\n    onBeforeUnmount,\n    ref,\n    type Component,\n    type PropType,\n} from \"vue\";\nimport { isClient } from \"@/utils/ssr\";\nimport {\n    useTeleportDefault,\n    getScrollingParent,\n    unrefElement,\n} from \"@/composables\";\n\ntype Position = \"top\" | \"bottom\" | \"left\" | \"right\";\n\nconst opposites: Record<Position, Position> = {\n    top: \"bottom\",\n    bottom: \"top\",\n    right: \"left\",\n    left: \"right\",\n};\n\ntype Point = { x: number; y: number };\n\ndefineOptions({ inheritAttrs: false });\n\nconst props = defineProps({\n    teleport: {\n        type: [Boolean, String, Object],\n        required: true,\n    },\n    trigger: {\n        type: Object as PropType<HTMLElement | Component>,\n        default: undefined,\n    },\n    /**\n     * Position of the component relative to the trigger\n     * @values auto, top, bottom, left, right, top-right, top-left, bottom-left, bottom-right\n     */\n    position: {\n        type: String,\n        validator: (value: string) =>\n            [\n                \"auto\",\n                \"top\",\n                \"bottom\",\n                \"left\",\n                \"right\",\n                \"top-right\",\n                \"top-left\",\n                \"bottom-left\",\n                \"bottom-right\",\n            ].includes(value),\n        required: true,\n    },\n    /** Used for calculation position auto */\n    defaultPosition: {\n        type: String as PropType<Position>,\n        validator: (value: string) =>\n            [\"top\", \"bottom\", \"left\", \"right\"].includes(value),\n        default: \"top\",\n    },\n    /** disable the position calculation */\n    disabled: { type: Boolean, default: false },\n    /** update positioning on teleport */\n    disablePositioning: { type: Boolean, default: true },\n});\n\nconst emits = defineEmits<{\n    \"update:position\": [value: string];\n}>();\n\nconst _teleport = computed(() =>\n    typeof props.teleport === \"boolean\"\n        ? { to: useTeleportDefault(), disabled: !props.teleport }\n        : { to: props.teleport, disabled: false },\n);\n\nconst contentRef = ref<HTMLElement | Component>();\n\nfunction setContent<T extends typeof contentRef.value>(el: T): typeof el {\n    contentRef.value = el;\n\n    nextTick(() => {\n        // update positioning\n        updatePositioning();\n        // add handler\n        addHandler();\n    });\n    return el;\n}\n\n// --- Dynamic Positioning Handling Feature ---\n\nconst initialPosition = props.position;\n\nconst scrollingParent = ref<HTMLElement | null>();\nlet resizeObserver: ResizeObserver | undefined;\n\nif (isClient && window.ResizeObserver) {\n    resizeObserver = new window.ResizeObserver(updatePositioning);\n}\n\n// on disable state change update event listener\nwatch(\n    () => props.disabled,\n    () => {\n        if (!props.disabled) addHandler();\n        else removeHandler();\n    },\n    { immediate: true, flush: \"post\" },\n);\n\n// update positioning if props change\nwatch(\n    [\n        () => !!props.trigger,\n        () => props.disablePositioning,\n        () => props.disabled,\n    ],\n    () => updatePositioning(),\n    { immediate: true, flush: \"post\" },\n);\n\n// remove any event listener on unmount\nonBeforeUnmount(() => removeHandler());\n\n/** add event listener */\nfunction addHandler(): void {\n    if (isClient && !scrollingParent.value && contentRef.value) {\n        // get parent container\n        scrollingParent.value = getScrollingParent(unrefElement(contentRef)!);\n        // set event listener\n        if (\n            scrollingParent.value &&\n            scrollingParent.value !== document.documentElement\n        ) {\n            scrollingParent.value.addEventListener(\n                \"scroll\",\n                updatePositioning,\n                { passive: true },\n            );\n            if (window.ResizeObserver && resizeObserver)\n                resizeObserver.observe(scrollingParent.value);\n        } else {\n            document.addEventListener(\"scroll\", updatePositioning, {\n                passive: true,\n            });\n            window.addEventListener(\"resize\", updatePositioning);\n        }\n    }\n}\n\n/** remove event listener */\nfunction removeHandler(): void {\n    if (isClient) {\n        if (window.ResizeObserver && resizeObserver)\n            resizeObserver.disconnect();\n        window.removeEventListener(\"resize\", updatePositioning);\n        document.removeEventListener(\"scroll\", updatePositioning);\n        scrollingParent.value = undefined;\n    }\n}\n\n/** Update the best position set teleport positioning */\nfunction updatePositioning(): void {\n    if (props.disabled) return;\n    let position = props.position;\n    // update position if auto position is enabled\n    if (initialPosition === \"auto\") {\n        // calculate best position\n        position = getAutoPosition();\n        if (position != props.position)\n            // two-way bind updated position\n            emits(\"update:position\", position);\n    }\n    // do not set content position if not teleport enabled\n    if (!props.teleport) return;\n\n    const content = unrefElement(contentRef);\n    const trigger = unrefElement(props.trigger);\n\n    // set content position\n    if (content && trigger) {\n        const rect = trigger.getBoundingClientRect();\n        let top = rect.top + window.scrollY;\n        let left = rect.left + window.scrollX;\n        // define vertical positioning\n        if (position.includes(\"bottom\")) {\n            top += trigger.clientHeight;\n        } else if (position.includes(\"top\")) {\n            top -= content.clientHeight;\n        }\n        // define horizontal positioning\n        if (position === \"left\") {\n            left -= content.clientWidth;\n        } else if (position === \"right\") {\n            left += trigger.clientWidth;\n        } else if (position.includes(\"-right\")) {\n            left += trigger.clientWidth - content.clientWidth;\n        }\n\n        // adjust exact vertical positioning\n        if (position === \"top\" || position === \"bottom\") {\n            left += trigger.clientWidth / 2; //- content.clientWidth / 2;\n        }\n        // adjust exact horizontal positioning\n        if (position === \"left\" || position === \"right\") {\n            top += trigger.clientHeight / 2; // - content.clientHeight / 2;\n        }\n\n        // set style properties\n        if (props.disablePositioning) {\n            content.style.position = \"relative\";\n            content.style.top = `${top}px`;\n            content.style.left = `${left}px`;\n        } else {\n            content.style.position = \"\";\n            content.style.top = \"\";\n            content.style.left = \"\";\n        }\n    }\n}\n\n/** calculate best position if auto */\nfunction getAutoPosition(): string {\n    let bestPosition = props.defaultPosition;\n    if (!props.trigger || !contentRef.value) return bestPosition;\n    if (!scrollingParent.value) return bestPosition;\n\n    // get viewport from container\n    const viewRect = new DOMRect(\n        scrollingParent.value.offsetLeft,\n        scrollingParent.value.offsetTop,\n        scrollingParent.value.clientWidth,\n        scrollingParent.value.clientHeight,\n    );\n\n    const contentRect = unrefElement(contentRef)!.getBoundingClientRect();\n    const triggerRect = unrefElement(props.trigger).getBoundingClientRect();\n\n    // detect auto position\n    const triggerAnchors = anchors(triggerRect);\n    const contentAnchors = anchors(contentRect);\n    const contentRectAtAnchor = (pos: Position) => {\n        const triggerAnchor = triggerAnchors[pos];\n        const contentAnchor = contentAnchors[opposites[pos]];\n        // Translates contentRect so contentAnchor is on top of triggerAnchor\n        // NOTE: this doesn't account for the extra offset that the tooltip arrow provides.\n        // That offset should be small, and it's tricky to get it from the CSS.\n        return new DOMRect(\n            contentRect.x + (triggerAnchor.x - contentAnchor.x),\n            contentRect.y + (triggerAnchor.y - contentAnchor.y),\n            contentRect.width,\n            contentRect.height,\n        );\n    };\n\n    const defaultOpposite = opposites[props.defaultPosition];\n    const crossPosition =\n        props.defaultPosition === \"top\" || props.defaultPosition === \"bottom\"\n            ? \"left\"\n            : \"top\";\n    const crossOpposite = opposites[crossPosition];\n    // In descending order of priority\n    const positions: Position[] = [\n        props.defaultPosition,\n        defaultOpposite,\n        crossPosition,\n        crossOpposite,\n    ];\n    let maxOverlap = 0;\n    for (const position of positions) {\n        const overlap = intersectionArea(\n            viewRect,\n            contentRectAtAnchor(position),\n        );\n        if (overlap > maxOverlap) {\n            maxOverlap = overlap;\n            bestPosition = position;\n        }\n    }\n    return bestPosition;\n}\n\n// --- Helper Functions ---\n\nfunction intersectionArea(a: DOMRect, b: DOMRect): number {\n    const left = Math.max(a.left, b.left);\n    const right = Math.min(a.right, b.right);\n    const top = Math.max(a.top, b.top);\n    const bottom = Math.min(a.bottom, b.bottom);\n    return Math.max(right - left, 0) * Math.max(bottom - top, 0);\n}\n\n/**\n * @param rect the bounding rectangle of the trigger element\n * @return the \"anchor points\" (points where the arrow attaches) for each side of the tooltip\n */\nconst anchors = (rect: DOMRect): Record<Position, Point> => ({\n    top: { x: (rect.left + rect.right) * 0.5, y: rect.top },\n    bottom: { x: (rect.left + rect.right) * 0.5, y: rect.bottom },\n    left: { x: rect.left, y: (rect.top + rect.bottom) * 0.5 },\n    right: { x: rect.right, y: (rect.top + rect.bottom) * 0.5 },\n});\n</script>\n\n<template>\n    <Teleport :to=\"_teleport.to\" :disabled=\"_teleport.disabled\">\n        <template v-if=\"_teleport.disabled\">\n            <slot :set-content=\"setContent\" />\n        </template>\n        <template v-else>\n            <div\n                v-bind=\"$attrs\"\n                :style=\"{ position: 'absolute', left: '0px', top: '0px' }\">\n                <slot :set-content=\"setContent\" />\n            </div>\n        </template>\n    </Teleport>\n</template>\n"],"names":["isDefined","computed","useTeleportDefault","ref","nextTick","isClient","watch","onBeforeUnmount","unrefElement"],"mappings":"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"}