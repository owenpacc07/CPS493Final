"use strict";
/*! Oruga v0.10.5 | MIT License | github.com/oruga-ui/oruga */
const vue = require("vue");
const config = require("./config-DQse3iF9.cjs");
const $FieldKey = Symbol("FielData");
function provideField(data) {
  vue.provide($FieldKey, data);
}
function injectField() {
  const parentField = vue.inject(
    $FieldKey,
    vue.computed(() => void 0)
  );
  const statusMessage = vue.computed(() => {
    var _a;
    if (!((_a = parentField == null ? void 0 : parentField.value) == null ? void 0 : _a.message)) return void 0;
    return parentField == null ? void 0 : parentField.value.message;
  });
  const statusVariant = vue.computed(() => {
    var _a;
    if (!((_a = parentField == null ? void 0 : parentField.value) == null ? void 0 : _a.variant)) return void 0;
    if (typeof parentField.value.variant === "string")
      return parentField.value.variant;
    if (Array.isArray(parentField.value.variant)) {
      for (const key in parentField.value.variant) {
        if (parentField.value.variant[key]) return key;
      }
    }
    return void 0;
  });
  const statusVariantIconConfig = config.getOption("statusVariantIcon", {
    success: "check",
    danger: "alert-circle",
    info: "information",
    warning: "alert"
  });
  const statusVariantIcon = vue.computed(() => {
    if (!statusVariant.value || !statusVariantIconConfig) return "";
    return statusVariantIconConfig[statusVariant.value] || "";
  });
  return {
    parentField,
    statusVariant,
    statusVariantIcon,
    statusMessage
  };
}
exports.injectField = injectField;
exports.provideField = provideField;
//# sourceMappingURL=fieldInjection-CvE2Bm-L.cjs.map
