{"version":3,"file":"Datepicker.vue_vue_type_script_setup_true_lang-oE703Z4s.cjs","sources":["../../src/components/datepicker/useDatepickerMixins.ts","../../src/components/datepicker/DatepickerTableRow.vue","../../src/components/datepicker/DatepickerTable.vue","../../src/components/datepicker/DatepickerMonth.vue","../../src/components/datepicker/Datepicker.vue"],"sourcesContent":["import { computed } from \"vue\";\nimport { matchWithGroups } from \"./utils\";\nimport { isTrueish } from \"@/utils/helpers\";\nimport type { DatepickerProps } from \"./props\";\n\n/** Time Format Feature */\nexport function useDatepickerMixins<R extends boolean, M extends boolean>(\n    props: DatepickerProps<R, M>,\n) {\n    /**\n     * Check that selected date is within earliest/latest params and\n     * is within a given month\n     */\n    function isDateSelectable(date: Date, month: number): boolean {\n        const validity: boolean[] = [];\n\n        if (props.minDate) validity.push(date >= props.minDate);\n        if (props.maxDate) validity.push(date <= props.maxDate);\n\n        if (props.nearbyMonthDays && !props.nearbySelectableMonthDays)\n            validity.push(date.getMonth() === month);\n\n        if (props.selectableDates) {\n            if (typeof props.selectableDates === \"function\") {\n                if (props.selectableDates(date)) return true;\n                else validity.push(false);\n            } else {\n                for (let i = 0; i < props.selectableDates.length; i++) {\n                    const enabledDate = props.selectableDates[i];\n                    if (\n                        date.getDate() === enabledDate.getDate() &&\n                        date.getFullYear() === enabledDate.getFullYear() &&\n                        date.getMonth() === enabledDate.getMonth()\n                    )\n                        return true;\n                    else validity.push(false);\n                }\n            }\n        }\n\n        if (props.unselectableDates) {\n            if (typeof props.unselectableDates === \"function\") {\n                validity.push(!props.unselectableDates(date));\n            } else {\n                for (let i = 0; i < props.unselectableDates.length; i++) {\n                    const disabledDate = props.unselectableDates[i];\n                    validity.push(\n                        date.getDate() !== disabledDate.getDate() ||\n                            date.getFullYear() !== disabledDate.getFullYear() ||\n                            date.getMonth() !== disabledDate.getMonth(),\n                    );\n                }\n            }\n        }\n\n        if (props.unselectableDaysOfWeek) {\n            for (let i = 0; i < props.unselectableDaysOfWeek.length; i++) {\n                const dayOfWeek = props.unselectableDaysOfWeek[i];\n                validity.push(date.getDay() !== dayOfWeek);\n            }\n        }\n\n        return validity.indexOf(false) < 0;\n    }\n\n    const isTypeMonth = computed(() => props.type === \"month\");\n\n    const localeOptions = computed(\n        () =>\n            new Intl.DateTimeFormat(props.locale, {\n                year: \"numeric\",\n                month: \"numeric\",\n            }).resolvedOptions() as Intl.DateTimeFormatOptions,\n    );\n\n    /** DateTime Format */\n    const dtf = computed(\n        () => new Intl.DateTimeFormat(props.locale /*, { timeZone: 'UTC' }*/),\n    );\n\n    /** DateTime Month Format */\n    const dtfMonth = computed(\n        () =>\n            new Intl.DateTimeFormat(props.locale, {\n                year: localeOptions.value.year || \"numeric\",\n                month: localeOptions.value.month || \"2-digit\",\n                // timeZone: 'UTC'\n            }),\n    );\n\n    const sampleTime = computed(() => {\n        const d = dateCreator();\n        d.setHours(10);\n        d.setSeconds(0);\n        d.setMinutes(0);\n        d.setMilliseconds(0);\n        return d;\n    });\n\n    function dateCreator(): Date {\n        return typeof props.creator === \"function\"\n            ? props.creator()\n            : new Date();\n    }\n\n    /** Format date into string */\n    function dateFormatter(date: typeof props.modelValue): string {\n        if (typeof props.formatter === \"function\") return props.formatter(date);\n\n        if (!date) return \"\";\n        const targetDates: Date[] = Array.isArray(date) ? date : [date];\n        if (!targetDates.length) return \"\";\n        const dates = targetDates.map((date) => {\n            const d = new Date(\n                date.getFullYear(),\n                date.getMonth(),\n                date.getDate(),\n                12,\n            );\n            return !isTypeMonth.value\n                ? dtf.value.format(d)\n                : dtfMonth.value.format(d);\n        });\n\n        return !isTrueish(props.multiple) && !isTrueish(props.range)\n            ? dates.join(\" - \")\n            : dates.join(\", \");\n    }\n\n    /** Parse a string into a date */\n    function dateParser(date: string): typeof props.modelValue {\n        if (typeof props.parser === \"function\") return props.parser(date);\n\n        if (!date) return undefined;\n        const isArray = isTrueish(props.multiple) || isTrueish(props.range);\n        const targetDates = !isArray ? [date] : date.split(\", \");\n        const dates = targetDates.map((date) => {\n            if (\n                dtf.value.formatToParts &&\n                typeof dtf.value.formatToParts === \"function\"\n            ) {\n                const formatRegex = (\n                    isTypeMonth.value ? dtfMonth.value : dtf.value\n                )\n                    .formatToParts(sampleTime.value)\n                    .map((part) => {\n                        if (part.type === \"literal\") return part.value;\n                        return `((?!=<${part.type}>)\\\\d+)`;\n                    })\n                    .join(\"\");\n                const dateGroups = matchWithGroups(formatRegex, date);\n\n                // We do a simple validation for the group.\n                // If it is not valid, it will fallback to Date.parse below\n                if (\n                    dateGroups.year &&\n                    dateGroups.year.length === 4 &&\n                    dateGroups.month &&\n                    dateGroups.month <= 12\n                ) {\n                    if (isTypeMonth.value)\n                        return new Date(dateGroups.year, dateGroups.month - 1);\n                    else if (dateGroups.day && dateGroups.day <= 31) {\n                        return new Date(\n                            dateGroups.year,\n                            dateGroups.month - 1,\n                            dateGroups.day,\n                            12,\n                        );\n                    }\n                }\n            }\n            // Fallback if formatToParts is not supported or if we were not able to parse a valid date\n            if (!isTypeMonth.value) return new Date(Date.parse(date));\n            const s = date.split(\"/\");\n            const year = s[0].length === 4 ? s[0] : s[1];\n            const month = s[0].length === 2 ? s[0] : s[1];\n            if (year && month) {\n                return new Date(\n                    parseInt(year, 10),\n                    parseInt(month, 10) - 1,\n                    1,\n                    0,\n                    0,\n                    0,\n                    0,\n                );\n            }\n        });\n        return (isArray ? dates : dates[0]) as typeof props.modelValue;\n    }\n\n    return {\n        dtf,\n        isDateSelectable,\n        dateCreator,\n        dateParser,\n        dateFormatter,\n    };\n}\n","<script\n    setup\n    lang=\"ts\"\n    generic=\"IsRange extends boolean, IsMultiple extends boolean\">\nimport {\n    computed,\n    watch,\n    nextTick,\n    ref,\n    effectScope,\n    onUnmounted,\n    type PropType,\n    type ComponentPublicInstance,\n} from \"vue\";\n\nimport { defineClasses } from \"@/composables\";\nimport { isTrueish } from \"@/utils/helpers\";\n\nimport { useDatepickerMixins } from \"./useDatepickerMixins\";\nimport { weeksInYear, firstWeekOffset } from \"./utils\";\n\nimport type { DatepickerEvent } from \"./types\";\nimport type { DatepickerProps } from \"./props\";\nimport type { ClassBind } from \"@/types\";\n\ndefineOptions({\n    name: \"ODatepickerTableRow\",\n    configField: \"datepicker\",\n});\n\nconst props = defineProps({\n    day: { type: Number, required: true },\n    week: { type: Array as PropType<Date[]>, required: true },\n    month: { type: Number, required: true },\n    selectedDate: {\n        type: [Date, Array] as PropType<Date | Date[]>,\n        default: undefined,\n    },\n    events: { type: Array as PropType<DatepickerEvent[]>, default: undefined },\n    hoveredDateRange: { type: Array as PropType<Date[]>, required: true },\n    pickerProps: {\n        type: Object as PropType<DatepickerProps<IsRange, IsMultiple>>,\n        required: true,\n    },\n});\n\nconst emits = defineEmits<{\n    select: [value: Date];\n    \"hover-enddate\": [value: Date];\n    \"change-focus\": [value: Date];\n    \"week-number-click\": [value: number];\n}>();\n\nconst { isDateSelectable, dateCreator } = useDatepickerMixins(\n    props.pickerProps,\n);\n\nconst hasEvents = computed(() => !!props.events?.length);\n\nconst dayRefs = ref(new Map());\n\nfunction setDayRef(\n    date: Date,\n    el: Element | ComponentPublicInstance | null,\n): void {\n    const refKey = `day-${date.getMonth()}-${date.getDate()}`;\n    if (el) dayRefs.value.set(refKey, el);\n}\n\nwatch(\n    () => props.day,\n    (day) => {\n        // if day is in week\n        if (props.week.map((d) => d.getDate()).includes(day))\n            nextTick(() => {\n                // $nextTick is needed when month is changed\n                const refKey = `day-${props.month}-${day}`;\n                const ref = dayRefs.value.get(refKey);\n                if (ref) ref.focus();\n            });\n    },\n);\n\nwatch(\n    () => props.month,\n    // clear day refs on month change\n    () => (dayRefs.value = new Map()),\n);\n\nfunction clickWeekNumber(week: number): void {\n    if (props.pickerProps.weekNumberClickable) emits(\"week-number-click\", week);\n}\n\nfunction getDayOfYear(input): number {\n    return (\n        Math.round(\n            (input.getTime() - new Date(input.getFullYear(), 0, 1).getTime()) /\n                864e5,\n        ) + 1\n    );\n}\n\nfunction getWeekNumber(mom): number {\n    const dow = props.pickerProps.firstDayOfWeek; // first day of week\n    // Rules for the first week : 1 for the 1st January, 4 for the 4th January\n    const doy = props.pickerProps.rulesForFirstWeek;\n    const weekOffset = firstWeekOffset(mom.getFullYear(), dow, doy);\n    const week = Math.floor((getDayOfYear(mom) - weekOffset - 1) / 7) + 1;\n    let resWeek;\n    let resYear;\n    if (week < 1) {\n        resYear = mom.getFullYear() - 1;\n        resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.getFullYear(), dow, doy)) {\n        resWeek = week - weeksInYear(mom.getFullYear(), dow, doy);\n        resYear = mom.getFullYear() + 1;\n    } else {\n        resYear = mom.getFullYear();\n        resWeek = week;\n    }\n    return resWeek;\n}\n\nfunction eventsDateMatch(day: Date): DatepickerEvent[] {\n    if (!props.events?.length) return [];\n    return props.events.filter((event) => event.date.getDay() === day.getDay());\n}\n\n// --- Event Handlers ---\n\nfunction onKeydown(event: KeyboardEvent, weekDay: Date): void {\n    let preventDefault = true;\n    switch (event.key) {\n        case \"Tab\": {\n            preventDefault = false;\n            break;\n        }\n        case \" \":\n        case \"Space\":\n        case \"Spacebar\":\n        case \"Enter\": {\n            selectDate(weekDay);\n            break;\n        }\n\n        case \"ArrowLeft\":\n        case \"Left\": {\n            changeFocus(weekDay, -1);\n            break;\n        }\n        case \"ArrowRight\":\n        case \"Right\": {\n            changeFocus(weekDay, 1);\n            break;\n        }\n        case \"ArrowUp\":\n        case \"Up\": {\n            changeFocus(weekDay, -7);\n            break;\n        }\n        case \"ArrowDown\":\n        case \"Down\": {\n            changeFocus(weekDay, 7);\n            break;\n        }\n    }\n    if (preventDefault) event.preventDefault();\n}\n\n/** Emit select event with chosen date as payload */\nfunction selectDate(date: Date): void {\n    if (props.pickerProps.disabled || props.pickerProps.readonly) return;\n    if (isDateSelectable(date, props.month)) emits(\"select\", date);\n}\n\nfunction changeFocus(day, inc): void {\n    const nextDay = new Date(day.getTime());\n    nextDay.setDate(day.getDate() + inc);\n    // if next day is out of range or not selectable, move to next selectable date\n    while (\n        (props.pickerProps.minDate && nextDay < props.pickerProps.minDate) ||\n        (props.pickerProps.maxDate && nextDay > props.pickerProps.maxDate) ||\n        !isDateSelectable(nextDay, nextDay.getMonth())\n    ) {\n        // revert day selection until selectable day is reached\n        nextDay.setDate(nextDay.getDate() - Math.sign(inc));\n    }\n    setRangeHoverEndDate(nextDay);\n    emits(\"change-focus\", nextDay);\n}\n\nfunction setRangeHoverEndDate(day): void {\n    if (isTrueish(props.pickerProps.range)) emits(\"hover-enddate\", day);\n}\n\n// --- Computed Component Classes ---\n\nfunction dateMatch(\n    dateOne: Date,\n    dateTwo?: Date | Date[],\n    multiple = false,\n): boolean {\n    // if either date is null or undefined, return false\n    // if using multiple flag, return false\n    if (!dateOne || !dateTwo || multiple) return false;\n\n    if (Array.isArray(dateTwo))\n        return dateTwo.some(\n            (date) =>\n                dateOne.getDate() === date.getDate() &&\n                dateOne.getFullYear() === date.getFullYear() &&\n                dateOne.getMonth() === date.getMonth(),\n        );\n\n    return (\n        dateOne.getDate() === dateTwo.getDate() &&\n        dateOne.getFullYear() === dateTwo.getFullYear() &&\n        dateOne.getMonth() === dateTwo.getMonth()\n    );\n}\n\nfunction dateWithin(\n    dateOne: Date,\n    dates?: Date | Date[],\n    multiple = false,\n): boolean {\n    if (!Array.isArray(dates) || multiple) return false;\n    return dateOne > dates[0] && dateOne < dates[1];\n}\n\nconst scope = effectScope();\n\n// stop all scope effects\nonUnmounted(() => scope.stop());\n\n/** Build cellClasses for cell using validations */\nfunction cellClasses(day: Date): ClassBind[] {\n    const classes = defineClasses(\n        [\n            \"tableCellSelectedClass\",\n            \"o-datepicker__table__cell--selected\",\n            null,\n            dateMatch(day, props.selectedDate) ||\n                dateWithin(\n                    day,\n                    props.selectedDate,\n                    isTrueish(props.pickerProps.multiple),\n                ),\n        ],\n        [\n            \"tableCellFirstSelectedClass\",\n            \"o-datepicker__table__cell--first-selected\",\n            null,\n            dateMatch(\n                day,\n                Array.isArray(props.selectedDate)\n                    ? props.selectedDate[0]\n                    : undefined,\n                isTrueish(props.pickerProps.multiple),\n            ),\n        ],\n        [\n            \"tableCellWithinSelectedClass\",\n            \"o-datepicker__table__cell--within-selected\",\n            null,\n            dateWithin(\n                day,\n                props.selectedDate,\n                isTrueish(props.pickerProps.multiple),\n            ),\n        ],\n        [\n            \"tableCellLastSelectedClass\",\n            \"o-datepicker__table__cell--last-selected\",\n            null,\n            dateMatch(\n                day,\n                Array.isArray(props.selectedDate)\n                    ? props.selectedDate[1]\n                    : undefined,\n                isTrueish(props.pickerProps.multiple),\n            ),\n        ],\n        [\n            \"tableCellFirstHoveredClass\",\n            \"o-datepicker__table__cell--first-hovered\",\n            null,\n            dateMatch(\n                day,\n                Array.isArray(props.hoveredDateRange)\n                    ? props.hoveredDateRange[0]\n                    : undefined,\n            ),\n        ],\n        [\n            \"tableCellWithinHoveredClass\",\n            \"o-datepicker__table__cell--within-hovered\",\n            null,\n            dateWithin(day, props.hoveredDateRange),\n        ],\n        [\n            \"tableCellLastHoveredClass\",\n            \"o-datepicker__table__cell--last-hovered\",\n            null,\n            dateMatch(\n                day,\n                Array.isArray(props.hoveredDateRange)\n                    ? props.hoveredDateRange[1]\n                    : undefined,\n            ),\n        ],\n        [\n            \"tableCellTodayClass\",\n            \"o-datepicker__table__cell--today\",\n            null,\n            dateMatch(day, dateCreator()),\n        ],\n        [\n            \"tableCellSelectableClass\",\n            \"o-datepicker__table__cell--selectable\",\n            null,\n            isDateSelectable(day, props.month) &&\n                !props.pickerProps.disabled &&\n                !props.pickerProps.readonly,\n        ],\n        [\n            \"tableCellUnselectableClass\",\n            \"o-datepicker__table__cell--unselectable\",\n            null,\n            !isDateSelectable(day, props.month) || props.pickerProps.disabled,\n        ],\n        [\n            \"tableCellInvisibleClass\",\n            \"o-datepicker__table__cell--invisible\",\n            null,\n            !props.pickerProps.nearbyMonthDays &&\n                day.getMonth() !== props.month,\n        ],\n        [\n            \"tableCellNearbyClass\",\n            \"o-datepicker__table__cell--nearby\",\n            null,\n            props.pickerProps.nearbySelectableMonthDays &&\n                day.getMonth() !== props.month,\n        ],\n        // pass effect scope for rectivity binding\n        { scope },\n    );\n\n    return [\n        ...tableCellClasses.value,\n        ...cellEventsClass.value,\n        ...classes.value,\n    ];\n}\n\nfunction eventClasses(event: DatepickerEvent): ClassBind[] {\n    const classes = defineClasses(\n        [\"tableEventClass\", \"o-datepicker__table__event\"],\n        [\n            \"tableEventVariantClass\",\n            \"o-datepicker__table__event--\",\n            event.type,\n            !!event.type,\n        ],\n        [\n            \"tableEventIndicatorClass\",\n            \"o-datepicker__table__event--\",\n            props.pickerProps.indicators,\n            !!props.pickerProps.indicators,\n        ],\n        // pass effect scope for rectivity binding\n        { scope },\n    );\n    return classes.value;\n}\n\nconst tableRowClasses = defineClasses(\n    [\"tableRowClass\", \"o-datepicker__table__row\"],\n    // passing the picker props will add reactivity to property changes\n    { props: props.pickerProps },\n);\n\nconst tableCellClasses = defineClasses(\n    [\"tableCellClass\", \"o-datepicker__table__cell\"],\n    // passing the picker props will add reactivity to property changes\n    { props: props.pickerProps },\n);\n\nconst tableEventsClasses = defineClasses(\n    [\"tableEventsClass\", \"o-datepicker__table__events\"],\n    // passing the picker props will add reactivity to property changes\n    { props: props.pickerProps },\n);\n\nconst cellEventsClass = defineClasses(\n    [\n        \"tableCellEventsClass\",\n        \"o-datepicker__table__cell--events\",\n        null,\n        hasEvents,\n    ],\n    // passing the picker props will add reactivity to property changes\n    { props: props.pickerProps },\n);\n</script>\n\n<template>\n    <div :class=\"tableRowClasses\">\n        <div\n            v-if=\"pickerProps.showWeekNumber\"\n            :class=\"tableCellClasses\"\n            :style=\"{\n                cursor: pickerProps.weekNumberClickable ? 'pointer' : 'auto',\n            }\"\n            :tabindex=\"pickerProps.weekNumberClickable ? 0 : undefined\"\n            role=\"button\"\n            @click.prevent=\"clickWeekNumber(getWeekNumber(week[6]))\"\n            @keydown.enter.prevent=\"clickWeekNumber(getWeekNumber(week[6]))\">\n            <span>{{ getWeekNumber(week[6]) }}</span>\n        </div>\n\n        <template v-for=\"(weekDay, idx) in week\" :key=\"idx\">\n            <div\n                v-if=\"\n                    !pickerProps.disabled &&\n                    !pickerProps.readonly &&\n                    isDateSelectable(weekDay, month)\n                \"\n                :ref=\"(el) => setDayRef(weekDay, el)\"\n                :class=\"cellClasses(weekDay)\"\n                role=\"button\"\n                :tabindex=\"\n                    day === weekDay.getDate() && month === weekDay.getMonth()\n                        ? undefined\n                        : 0\n                \"\n                @click.prevent=\"selectDate(weekDay)\"\n                @mouseenter=\"setRangeHoverEndDate(weekDay)\"\n                @focus=\"setRangeHoverEndDate(weekDay)\"\n                @keydown.enter.prevent=\"onKeydown($event, weekDay)\">\n                <span>{{ weekDay.getDate() }}</span>\n                <div\n                    v-if=\"eventsDateMatch(weekDay).length\"\n                    :class=\"tableEventsClasses\">\n                    <div\n                        v-for=\"(event, index) in eventsDateMatch(weekDay)\"\n                        :key=\"index\"\n                        :class=\"eventClasses(event)\" />\n                </div>\n            </div>\n\n            <div v-else :class=\"cellClasses(weekDay)\">\n                <span>{{ weekDay.getDate() }}</span>\n            </div>\n        </template>\n    </div>\n</template>\n","<script\n    setup\n    lang=\"ts\"\n    generic=\"IsRange extends boolean, IsMultiple extends boolean\">\nimport { computed, ref, type PropType } from \"vue\";\n\nimport ODatepickerTableRow from \"./DatepickerTableRow.vue\";\n\nimport { isTrueish, isDefined } from \"@/utils/helpers\";\nimport { defineClasses } from \"@/composables\";\n\nimport { useDatepickerMixins } from \"./useDatepickerMixins\";\nimport { weekBuilder } from \"./utils\";\n\nimport type { DatepickerEvent, FocusedDate } from \"./types\";\nimport type { DatepickerProps } from \"./props\";\n\ndefineOptions({\n    name: \"ODatepickerTable\",\n    configField: \"datepicker\",\n});\n\nconst props = defineProps({\n    modelValue: {\n        type: [Date, Array] as PropType<Date | Date[]>,\n        default: undefined,\n    },\n    focusedDate: { type: Object as PropType<FocusedDate>, required: true },\n    dayNames: { type: Array as PropType<string[]>, required: true },\n    monthNames: { type: Array as PropType<string[]>, required: true },\n    pickerProps: {\n        type: Object as PropType<DatepickerProps<IsRange, IsMultiple>>,\n        required: true,\n    },\n});\n\nconst emits = defineEmits<{\n    /** modelValue prop two-way binding */\n    \"update:model-value\": [value: Date | Date[]];\n    /** focusedDate prop two-way binding */\n    \"update:focusedDate\": [value: FocusedDate];\n    \"range-start\": [value: Date];\n    \"range-end\": [value: Date];\n    \"week-number-click\": [value: number];\n}>();\n\nconst { isDateSelectable } = useDatepickerMixins(props.pickerProps);\n\nconst focusedDateModel = defineModel<FocusedDate>(\"focusedDate\", {\n    required: true,\n});\n\nconst selectedBeginDate = ref<Date>();\nconst selectedEndDate = ref<Date>();\nconst hoveredEndDate = ref<Date>();\n\nconst visibleDayNames = computed(() => {\n    const visibleDayNames: string[] = [];\n    let index = props.pickerProps.firstDayOfWeek || 0;\n    while (visibleDayNames.length < props.dayNames.length) {\n        const currentDayName = props.dayNames[index % props.dayNames.length];\n        visibleDayNames.push(currentDayName);\n        index++;\n    }\n    if (props.pickerProps.showWeekNumber) visibleDayNames.unshift(\"\");\n    return visibleDayNames;\n});\n\n/** Return array of all events in the specified month */\nconst eventsInThisMonth = computed(() => {\n    if (!props.pickerProps.events) return [];\n    return props.pickerProps.events\n        .map((event) =>\n            !event.date && event instanceof Date ? { date: event } : event,\n        )\n        .filter(\n            (event) =>\n                event.date.getMonth() === focusedDateModel.value.month &&\n                event.date.getFullYear() === focusedDateModel.value.year,\n        );\n});\n\n/** Return array of all weeks in the specified month */\nconst weeksInThisMonth = computed<Date[][]>(() => {\n    validateFocusedDay();\n    const month = focusedDateModel.value.month;\n    const year = focusedDateModel.value.year;\n    const weeksInThisMonth: Date[][] = [];\n\n    let startingDay = 1;\n\n    while (weeksInThisMonth.length < 6) {\n        const newWeek = weekBuilder(\n            startingDay,\n            month,\n            year,\n            props.pickerProps.firstDayOfWeek || 0,\n        );\n        weeksInThisMonth.push(newWeek);\n        startingDay += 7;\n    }\n\n    return weeksInThisMonth;\n});\n\nfunction eventsInThisWeek(week: Date[]): DatepickerEvent[] {\n    if (!props.pickerProps.events) return [];\n    return eventsInThisMonth.value.filter((event) => {\n        const stripped = new Date(event.date);\n        stripped.setHours(0, 0, 0, 0);\n        const timed = stripped.getTime();\n        return week.some((weekDate) => weekDate.getTime() === timed);\n    });\n}\n\nconst hoveredDateRange = computed<Date[]>(() => {\n    if (!isTrueish(props.pickerProps.range) || selectedEndDate.value) return [];\n\n    return (\n        (hoveredEndDate.value || 0) < (selectedBeginDate.value || 0)\n            ? [hoveredEndDate.value, selectedBeginDate.value]\n            : [selectedBeginDate.value, hoveredEndDate.value]\n    ).filter(isDefined);\n});\n\nfunction validateFocusedDay(): void {\n    const currentDate = new Date(\n        focusedDateModel.value.year,\n        focusedDateModel.value.month,\n        focusedDateModel.value.day,\n    );\n    if (isDateSelectable(currentDate, focusedDateModel.value.month)) return;\n\n    let day = 0;\n    // Number of days in the current month\n    const monthDays = new Date(\n        focusedDateModel.value.year,\n        focusedDateModel.value.month + 1,\n        0,\n    ).getDate();\n    let firstFocusable: Date | undefined;\n    while (!firstFocusable && ++day < monthDays) {\n        const date = new Date(\n            focusedDateModel.value.year,\n            focusedDateModel.value.month,\n            day,\n        );\n        if (isDateSelectable(date, focusedDateModel.value.month)) {\n            firstFocusable = currentDate;\n            focusedDateModel.value = {\n                day: date.getDate(),\n                month: date.getMonth(),\n                year: date.getFullYear(),\n            };\n        }\n    }\n}\n\n// --- Event Handlers ---\n\n/** Emit input event with selected date as payload for v-model in parent */\nfunction onSelectedDate(date: Date): void {\n    if (props.pickerProps.disabled) return;\n    else if (isTrueish(props.pickerProps.range)) handleSelectRangeDate(date);\n    else if (isTrueish(props.pickerProps.multiple))\n        handleSelectMultipleDates(date);\n    else emits(\"update:model-value\", date);\n}\n\n/*\n * If both begin and end dates are set, reset the end date and set the begin date.\n * If only begin date is selected, emit an array of the begin date and the new date.\n * If not set, only set the begin date.\n */\nfunction handleSelectRangeDate(date: Date): void {\n    if (selectedBeginDate.value && selectedEndDate.value) {\n        selectedBeginDate.value = date;\n        selectedEndDate.value = undefined;\n        emits(\"range-start\", date);\n    } else if (selectedBeginDate.value && !selectedEndDate.value) {\n        if (selectedBeginDate.value > date) {\n            selectedEndDate.value = selectedBeginDate.value;\n            selectedBeginDate.value = date;\n        } else {\n            selectedEndDate.value = date;\n        }\n        emits(\"range-end\", date);\n        emits(\"update:model-value\", [\n            selectedBeginDate.value,\n            selectedEndDate.value,\n        ]);\n    } else {\n        selectedBeginDate.value = date;\n        emits(\"range-start\", date);\n    }\n}\n\n/*\n * If selected date already exists list of selected dates, remove it from the list\n * Otherwise, add date to list of selected dates\n */\nfunction handleSelectMultipleDates(date: Date): void {\n    let multipleSelectedDates = Array.isArray(props.modelValue)\n        ? props.modelValue\n        : [];\n    const multipleSelect = multipleSelectedDates.filter(\n        (selectedDate) =>\n            selectedDate.getDate() === date.getDate() &&\n            selectedDate.getFullYear() === date.getFullYear() &&\n            selectedDate.getMonth() === date.getMonth(),\n    );\n    if (multipleSelect.length) {\n        multipleSelectedDates = multipleSelectedDates.filter(\n            (selectedDate) =>\n                selectedDate.getDate() !== date.getDate() ||\n                selectedDate.getFullYear() !== date.getFullYear() ||\n                selectedDate.getMonth() !== date.getMonth(),\n        );\n    } else {\n        multipleSelectedDates = [...multipleSelectedDates, date];\n    }\n    emits(\"update:model-value\", multipleSelectedDates);\n}\n\nfunction onRangeHoverEndDate(date: Date): void {\n    hoveredEndDate.value = date;\n}\n\nfunction onChangeFocus(date: Date): void {\n    focusedDateModel.value = {\n        day: date.getDate(),\n        month: date.getMonth(),\n        year: date.getFullYear(),\n    };\n}\n\n// --- Computed Component Classes ---\n\nconst tableClasses = defineClasses(\n    [\"tableClass\", \"o-datepicker__table\"],\n    // passing the picker props will add reactivity to property changes\n    { props: props.pickerProps },\n);\n\nconst tableHeadClasses = defineClasses(\n    [\"tableHeadClass\", \"o-datepicker__table__head\"],\n    // passing the picker props will add reactivity to property changes\n    { props: props.pickerProps },\n);\n\nconst tableCellClasses = defineClasses(\n    [\"tableCellClass\", \"o-datepicker__table__cell\"],\n    // passing the picker props will add reactivity to property changes\n    { props: props.pickerProps },\n);\n\nconst tableHeadCellClasses = defineClasses(\n    [\"tableHeadCellClass\", \"o-datepicker__table__head-cell\"],\n    // passing the picker props will add reactivity to property changes\n    { props: props.pickerProps },\n);\n\nconst tableBodyClasses = defineClasses(\n    [\"tableBodyClass\", \"o-datepicker__table__body\"],\n    // passing the picker props will add reactivity to property changes\n    { props: props.pickerProps },\n);\n</script>\n\n<template>\n    <section :class=\"tableClasses\">\n        <header :class=\"tableHeadClasses\">\n            <div\n                v-for=\"(day, index) in visibleDayNames\"\n                :key=\"index\"\n                :class=\"[...tableCellClasses, ...tableHeadCellClasses]\">\n                <span>{{ day }}</span>\n            </div>\n        </header>\n        <div :class=\"tableBodyClasses\">\n            <o-datepicker-table-row\n                v-for=\"(week, index) in weeksInThisMonth\"\n                :key=\"index\"\n                :selected-date=\"modelValue\"\n                :day=\"focusedDateModel.day\"\n                :week=\"week\"\n                :month=\"focusedDateModel.month\"\n                :events=\"eventsInThisWeek(week)\"\n                :hovered-date-range=\"hoveredDateRange\"\n                :picker-props=\"props.pickerProps\"\n                @select=\"onSelectedDate\"\n                @hover-enddate=\"onRangeHoverEndDate\"\n                @change-focus=\"onChangeFocus\"\n                @week-number-click=\"$emit('week-number-click', $event)\" />\n        </div>\n    </section>\n</template>\n","<script\n    setup\n    lang=\"ts\"\n    generic=\"IsRange extends boolean, IsMultiple extends boolean\">\nimport {\n    computed,\n    ref,\n    nextTick,\n    watch,\n    effectScope,\n    onUnmounted,\n    type PropType,\n    type ComponentPublicInstance,\n} from \"vue\";\n\nimport { isDefined, isTrueish } from \"@/utils/helpers\";\nimport { defineClasses } from \"@/composables\";\n\nimport { useDatepickerMixins } from \"./useDatepickerMixins\";\n\nimport type { DatepickerEvent, FocusedDate } from \"./types\";\nimport type { DatepickerProps } from \"./props\";\nimport type { ClassBind } from \"@/types\";\n\ndefineOptions({\n    name: \"ODatepickerMonth\",\n    configField: \"datepicker\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    modelValue: {\n        type: [Date, Array] as PropType<Date | Date[]>,\n        default: undefined,\n    },\n    monthNames: { type: Array as PropType<string[]>, required: true },\n    focusedDate: { type: Object as PropType<FocusedDate>, required: true },\n    pickerProps: {\n        type: Object as PropType<DatepickerProps<IsRange, IsMultiple>>,\n        required: true,\n    },\n});\n\nconst emits = defineEmits<{\n    /** modelValue prop two-way binding */\n    \"update:model-value\": [value: Date | Date[]];\n    /** focusedDate prop two-way binding */\n    \"update:focusedDate\": [value: FocusedDate];\n    \"range-start\": [value: Date];\n    \"range-end\": [value: Date];\n}>();\n\nconst { dateCreator } = useDatepickerMixins(props.pickerProps);\n\nconst selectedBeginDate = ref<Date>();\nconst selectedEndDate = ref<Date>();\nconst hoveredEndDate = ref<Date>();\n\nconst hasEvents = computed(() => !!props.pickerProps.events?.length);\n\nconst monthRefs = ref(new Map());\n\nfunction setMonthRef(\n    date: Date,\n    el: Element | ComponentPublicInstance | null,\n): void {\n    const refKey = `month-${date.getMonth()}`;\n    if (el) monthRefs.value.set(refKey, el);\n}\n\nwatch(\n    () => props.focusedDate.month,\n    (month) => {\n        const refKey = `month-${month}`;\n        nextTick(() => {\n            // $nextTick is needed when month is changed\n            const ref = monthRefs.value.get(refKey);\n            if (ref?.length > 0 && ref[0]) {\n                ref[0].focus();\n            }\n        });\n    },\n);\n\n/** Return array of all events in the specified month */\nconst eventsInThisYear = computed(() => {\n    if (!props.pickerProps.events) return [];\n\n    return props.pickerProps.events\n        .map((event) => {\n            if (!event.date && event instanceof Date) event = { date: event };\n            if (!event.type) event.type = \"is-primary\";\n            return event;\n        })\n        .filter((event) => event.date.getFullYear() === props.focusedDate.year);\n});\n\nconst monthDates = computed(() => {\n    const year = props.focusedDate.year;\n    const months: Date[] = [];\n    for (let i = 0; i < 12; i++) {\n        const d = new Date(year, i, 1);\n        d.setHours(0, 0, 0, 0);\n        months.push(d);\n    }\n    return months;\n});\n\nconst hoveredDateRange = computed(() => {\n    if (!isTrueish(props.pickerProps.range) || !selectedEndDate.value)\n        return [];\n\n    return (\n        hoveredEndDate.value &&\n        selectedBeginDate.value &&\n        hoveredEndDate.value < selectedBeginDate.value\n            ? [hoveredEndDate.value, selectedBeginDate.value]\n            : [selectedBeginDate.value, hoveredEndDate.value]\n    ).filter(isDefined);\n});\n\nfunction eventsDateMatch(day): DatepickerEvent[] {\n    if (!eventsInThisYear.value.length) return [];\n    return eventsInThisYear.value.filter(\n        (event) => event.date.getMonth() === day.getMonth(),\n    );\n}\n\nfunction isDateSelectable(date: Date): boolean {\n    const validity: boolean[] = [];\n\n    if (props.pickerProps.minDate)\n        validity.push(date >= props.pickerProps.minDate);\n    if (props.pickerProps.maxDate)\n        validity.push(date <= props.pickerProps.maxDate);\n\n    validity.push(date.getFullYear() === props.focusedDate.year);\n\n    if (props.pickerProps.selectableDates) {\n        if (typeof props.pickerProps.selectableDates === \"function\") {\n            if (props.pickerProps.selectableDates(date)) return true;\n            else validity.push(false);\n        } else {\n            for (let i = 0; i < props.pickerProps.selectableDates.length; i++) {\n                const enabledDate = props.pickerProps.selectableDates[i];\n                if (\n                    date.getFullYear() === enabledDate.getFullYear() &&\n                    date.getMonth() === enabledDate.getMonth()\n                )\n                    return true;\n                else validity.push(false);\n            }\n        }\n    }\n\n    if (props.pickerProps.unselectableDates) {\n        if (typeof props.pickerProps.unselectableDates === \"function\") {\n            validity.push(!props.pickerProps.unselectableDates(date));\n        } else {\n            for (\n                let i = 0;\n                i < props.pickerProps.unselectableDates.length;\n                i++\n            ) {\n                const disabledDate = props.pickerProps.unselectableDates[i];\n                validity.push(\n                    date.getFullYear() !== disabledDate.getFullYear() ||\n                        date.getMonth() !== disabledDate.getMonth(),\n                );\n            }\n        }\n    }\n\n    if (props.pickerProps.unselectableDaysOfWeek) {\n        for (\n            let i = 0;\n            i < props.pickerProps.unselectableDaysOfWeek.length;\n            i++\n        ) {\n            const dayOfWeek = props.pickerProps.unselectableDaysOfWeek[i];\n            validity.push(date.getDay() !== dayOfWeek);\n        }\n    }\n\n    return validity.indexOf(false) < 0;\n}\n\n// --- Event Handlers ---\n\nfunction onKeydown(event: KeyboardEvent, weekDay: Date): void {\n    let preventDefault = true;\n    switch (event.key) {\n        case \"Tab\": {\n            preventDefault = false;\n            break;\n        }\n        case \" \":\n        case \"Space\":\n        case \"Spacebar\":\n        case \"Enter\": {\n            selectDate(weekDay);\n            break;\n        }\n\n        case \"ArrowLeft\":\n        case \"Left\": {\n            changeFocus(weekDay, -1);\n            break;\n        }\n        case \"ArrowRight\":\n        case \"Right\": {\n            changeFocus(weekDay, 1);\n            break;\n        }\n        case \"ArrowUp\":\n        case \"Up\": {\n            changeFocus(weekDay, -7);\n            break;\n        }\n        case \"ArrowDown\":\n        case \"Down\": {\n            changeFocus(weekDay, 7);\n            break;\n        }\n    }\n    if (preventDefault) event.preventDefault();\n}\n\n/*\n * Emit update:modelValue event with selected date as payload for v-model in parent\n */\nfunction selectDate(date: Date): void {\n    if (props.pickerProps.disabled || props.pickerProps.readonly) return;\n    if (!isDateSelectable(date)) return;\n\n    if (isTrueish(props.pickerProps.range)) handleSelectRangeDate(date);\n    else if (isTrueish(props.pickerProps.multiple))\n        handleSelectMultipleDates(date);\n    else emits(\"update:model-value\", date);\n}\n\n/*\n * If both begin and end dates are set, reset the end date and set the begin date.\n * If only begin date is selected, emit an array of the begin date and the new date.\n * If not set, only set the begin date.\n */\nfunction handleSelectRangeDate(date: Date): void {\n    if (selectedBeginDate.value && selectedEndDate.value) {\n        selectedBeginDate.value = date;\n        selectedEndDate.value = undefined;\n        emits(\"range-start\", date);\n    } else if (selectedBeginDate.value && !selectedEndDate.value) {\n        if (selectedBeginDate.value > date) {\n            selectedEndDate.value = selectedBeginDate.value;\n            selectedBeginDate.value = date;\n        } else {\n            selectedEndDate.value = date;\n        }\n        emits(\"range-end\", date);\n        emits(\"update:model-value\", [\n            selectedBeginDate.value,\n            selectedEndDate.value,\n        ]);\n    } else {\n        selectedBeginDate.value = date;\n        emits(\"range-start\", date);\n    }\n}\n\nconst multipleSelectedDates = computed(() =>\n    isTrueish(props.pickerProps.multiple) && props.modelValue\n        ? props.modelValue\n        : [],\n);\n\nfunction handleSelectMultipleDates(date: Date): void {\n    if (!Array.isArray(props.modelValue)) return;\n    let multipleSelectedDates = props.modelValue;\n\n    const multipleSelect = multipleSelectedDates.filter(\n        (selectedDate) =>\n            selectedDate.getDate() === date.getDate() &&\n            selectedDate.getFullYear() === date.getFullYear() &&\n            selectedDate.getMonth() === date.getMonth(),\n    );\n    if (multipleSelect.length) {\n        multipleSelectedDates = multipleSelectedDates.filter(\n            (selectedDate) =>\n                selectedDate.getDate() !== date.getDate() ||\n                selectedDate.getFullYear() !== date.getFullYear() ||\n                selectedDate.getMonth() !== date.getMonth(),\n        );\n    } else {\n        multipleSelectedDates.push(date);\n    }\n    emits(\"update:model-value\", multipleSelectedDates);\n}\n\nfunction changeFocus(month: Date, inc: number): void {\n    month.setMonth(month.getMonth() + inc);\n    const focused = {\n        day: month.getDate(),\n        month: month.getMonth(),\n        year: month.getFullYear(),\n    };\n    emits(\"update:focusedDate\", focused);\n}\n\nfunction onRangeHoverEndDate(day: Date): void {\n    if (isTrueish(props.pickerProps.range)) hoveredEndDate.value = day;\n}\n\n// --- Computed Component Classes ---\n\nfunction dateMatch(dateOne, dateTwo, multiple = false): boolean {\n    // if either date is null or undefined, return false\n    if (!dateOne || !dateTwo || multiple) return false;\n    if (Array.isArray(dateTwo))\n        return dateTwo.some(\n            (date) =>\n                dateOne.getFullYear() === date.getFullYear() &&\n                dateOne.getMonth() === date.getMonth(),\n        );\n    return (\n        dateOne.getFullYear() === dateTwo.getFullYear() &&\n        dateOne.getMonth() === dateTwo.getMonth()\n    );\n}\n\nfunction dateWithin(dateOne, dates, multiple = false): boolean {\n    if (!Array.isArray(dates) || multiple) return false;\n    return dateOne > dates[0] && dateOne < dates[1];\n}\n\nfunction dateMultipleSelected(dateOne, dates, multiple = false): boolean {\n    if (!Array.isArray(dates) || !multiple) return false;\n    return dates.some(\n        (date) =>\n            dateOne.getDate() === date.getDate() &&\n            dateOne.getFullYear() === date.getFullYear() &&\n            dateOne.getMonth() === date.getMonth(),\n    );\n}\n\nconst monthClasses = defineClasses(\n    [\"monthClass\", \"o-datepicker__month\"],\n    // passing the picker props will add reactivity to property changes\n    { props: props.pickerProps },\n);\n\nconst monthTableClasses = defineClasses(\n    [\"monthTableClass\", \"o-datepicker__month__table\"],\n    // passing the picker props will add reactivity to property changes\n    { props: props.pickerProps },\n);\n\nconst monthCellClasses = defineClasses(\n    [\"monthCellClass\", \"o-datepicker__month__cell\"],\n    [\n        \"monthCellEventsClass\",\n        \"o-datepicker__month__cell--events\",\n        null,\n        hasEvents,\n    ],\n    // passing the picker props will add reactivity to property changes\n    { props: props.pickerProps },\n);\n\n// Registers a dispose callback on the current active effect scope.\nconst scope = effectScope();\n\n// stop all scope effects\nonUnmounted(() => scope.stop());\n\n/**\n * Build classes for cell using validations\n */\nfunction cellClasses(day: Date): ClassBind[] {\n    const classes = defineClasses(\n        [\n            \"monthCellSelectedClass\",\n            \"o-datepicker__month__cell--selected\",\n            null,\n            dateMatch(\n                day,\n                props.modelValue,\n                isTrueish(props.pickerProps.multiple),\n            ) ||\n                dateWithin(\n                    day,\n                    props.modelValue,\n                    isTrueish(props.pickerProps.multiple),\n                ) ||\n                dateMultipleSelected(\n                    day,\n                    multipleSelectedDates.value,\n                    isTrueish(props.pickerProps.multiple),\n                ),\n        ],\n        [\n            \"monthCellFirstSelectedClass\",\n            \"o-datepicker__month__cell--first-selected\",\n            null,\n            dateMatch(\n                day,\n                Array.isArray(props.modelValue) && props.modelValue[0],\n                isTrueish(props.pickerProps.multiple),\n            ),\n        ],\n        [\n            \"monthCellWithinSelectedClass\",\n            \"o-datepicker__month__cell--within-selected\",\n            null,\n            dateWithin(\n                day,\n                props.modelValue,\n                isTrueish(props.pickerProps.multiple),\n            ),\n        ],\n        [\n            \"monthCellLastSelectedClass\",\n            \"o-datepicker__month__cell--last-selected\",\n            null,\n            dateMatch(\n                day,\n                Array.isArray(props.modelValue) && props.modelValue[1],\n                isTrueish(props.pickerProps.multiple),\n            ),\n        ],\n        [\n            \"monthCellWithinHoveredRangeClass\",\n            \"o-datepicker__month__cell--within-hovered-range\",\n            null,\n            hoveredDateRange.value &&\n                hoveredDateRange.value.length === 2 &&\n                (dateMatch(day, hoveredDateRange.value) ||\n                    dateWithin(day, hoveredDateRange.value)),\n        ],\n        [\n            \"monthCellFirstHoveredClass\",\n            \"o-datepicker__month__cell--first-hovered\",\n            null,\n            dateMatch(\n                day,\n                Array.isArray(hoveredDateRange.value) &&\n                    hoveredDateRange.value[0],\n            ),\n        ],\n        [\n            \"monthCellWithinHoveredClass\",\n            \"o-datepicker__month__cell--within-hovered\",\n            null,\n            dateWithin(day, hoveredDateRange.value),\n        ],\n        [\n            \"monthCellLastHoveredClass\",\n            \"o-datepicker__month__cell--last-hovered\",\n            null,\n            dateMatch(\n                day,\n                Array.isArray(hoveredDateRange.value) &&\n                    hoveredDateRange.value[1],\n            ),\n        ],\n        [\n            \"monthCellTodayClass\",\n            \"o-datepicker__month__cell--today\",\n            null,\n            dateMatch(day, dateCreator()),\n        ],\n        [\n            \"monthCellSelectableclass\",\n            \"o-datepicker__month__cell--selectable\",\n            null,\n            isDateSelectable(day) &&\n                !props.pickerProps.disabled &&\n                !props.pickerProps.readonly,\n        ],\n        [\n            \"monthCellUnselectableClass\",\n            \"o-datepicker__month__cell--unselectable\",\n            null,\n            !isDateSelectable(day) || props.pickerProps.disabled,\n        ],\n        // pass effect scope for rectivity binding\n        { scope },\n    );\n    return [...monthCellClasses.value, ...classes.value];\n}\n\nconst monthEventsClasses = defineClasses(\n    [\"monthEventsClass\", \"o-datepicker__month__events\"],\n    // passing the picker props will add reactivity to property changes\n    { props: props.pickerProps },\n);\n\n/**\n * Build classes for event\n */\nfunction eventClasses(event: DatepickerEvent): ClassBind[] {\n    const classes = defineClasses(\n        [\"monthEventClass\", \"o-datepicker__month__event\"],\n        [\n            \"monthEventTypeClass\",\n            \"o-datepicker__month__event--\",\n            event.type,\n            !!event.type,\n        ],\n        [\n            \"monthEventIndicatorClass\",\n            \"o-datepicker__month__event--\",\n            props.pickerProps.indicators,\n            !!props.pickerProps.indicators,\n        ],\n        // pass effect scope for rectivity binding\n        { scope },\n    );\n    return classes.value;\n}\n</script>\n\n<template>\n    <section :class=\"monthClasses\">\n        <div :class=\"monthTableClasses\">\n            <template v-for=\"(date, idx) in monthDates\" :key=\"idx\">\n                <div\n                    v-if=\"\n                        !pickerProps.disabled &&\n                        !pickerProps.readonly &&\n                        isDateSelectable(date)\n                    \"\n                    :ref=\"(el) => setMonthRef(date, el)\"\n                    :class=\"cellClasses(date)\"\n                    role=\"button\"\n                    :tabindex=\"\n                        focusedDate.month === date.getMonth() ? undefined : 0\n                    \"\n                    @click.prevent=\"selectDate(date)\"\n                    @mouseenter=\"onRangeHoverEndDate(date)\"\n                    @focus=\"onRangeHoverEndDate(date)\"\n                    @keydown.prevent=\"onKeydown($event, date)\">\n                    {{ monthNames[date.getMonth()] }}\n                    <div\n                        v-if=\"eventsDateMatch(date).length\"\n                        :class=\"monthEventsClasses\">\n                        <div\n                            v-for=\"(event, index) in eventsDateMatch(date)\"\n                            :key=\"index\"\n                            :class=\"eventClasses(event)\" />\n                    </div>\n                </div>\n\n                <div v-else :class=\"cellClasses(date)\">\n                    {{ monthNames[date.getMonth()] }}\n                    <div\n                        v-if=\"eventsDateMatch(date).length\"\n                        :class=\"monthEventsClasses\">\n                        <div\n                            v-for=\"(event, index) in eventsDateMatch(date)\"\n                            :key=\"index\"\n                            :class=\"eventClasses(event)\" />\n                    </div>\n                </div>\n            </template>\n        </div>\n    </section>\n</template>\n","<script\n    setup\n    lang=\"ts\"\n    generic=\"\n        IsRange extends boolean = false,\n        IsMultiple extends boolean = false\n    \">\nimport { computed, ref, watch, useTemplateRef } from \"vue\";\n\nimport OButton from \"../button/Button.vue\";\nimport OSelect from \"../select/Select.vue\";\nimport OPickerWrapper from \"../utils/PickerWrapper.vue\";\nimport ODatepickerTable from \"./DatepickerTable.vue\";\nimport ODatepickerMonth from \"./DatepickerMonth.vue\";\n\nimport { getDefault } from \"@/utils/config\";\nimport { isDate, pad } from \"@/utils/helpers\";\nimport { defineClasses, getActiveClasses, useMatchMedia } from \"@/composables\";\n\nimport { useDatepickerMixins } from \"./useDatepickerMixins\";\nimport { getMonthNames, getWeekdayNames } from \"./utils\";\n\nimport type { OptionsPropItem } from \"@/types\";\nimport type { FocusedDate } from \"./types\";\nimport type { DatepickerProps } from \"./props\";\n\n/**\n * An input with a simple dropdown/modal for selecting a date, uses native datepicker for mobile.\n * @displayName Datepicker\n * @style _datepicker.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"ODatepicker\",\n    configField: \"datepicker\",\n});\n\ntype ModelValue = DatepickerProps<IsRange, IsMultiple>[\"modelValue\"];\n\nconst props = withDefaults(\n    defineProps<DatepickerProps<IsRange, IsMultiple>>(),\n    {\n        override: undefined,\n        modelValue: undefined,\n        // range: false,\n        // multiple: false,\n        active: false,\n        type: \"date\",\n        dayNames: () => getDefault(\"datepicker.dayNames\"),\n        monthNames: () => getDefault(\"datepicker.monthNames\"),\n        size: () => getDefault(\"datepicker.size\"),\n        focusedDate: undefined,\n        events: undefined,\n        indicators: \"dots\",\n        minDate: undefined,\n        maxDate: undefined,\n        expanded: false,\n        rounded: false,\n        inline: false,\n        placeholder: undefined,\n        readonly: false,\n        disabled: false,\n        openOnFocus: () => getDefault(\"datepicker.openOnFocus\", true),\n        closeOnClick: () => getDefault(\"datepicker.closeOnClick\", true),\n        locale: () => getDefault(\"locale\"),\n        formatter: getDefault(\"datepicker.formatter\"),\n        parser: getDefault(\"datepicker.parser\"),\n        creator: getDefault(\"datepicker.creator\"),\n        selectableDates: undefined,\n        unselectableDates: undefined,\n        unselectableDaysOfWeek: () =>\n            getDefault(\"datepicker.unselectableDaysOfWeek\"),\n        nearbyMonthDays: () => getDefault(\"datepicker.nearbyMonthDays\", true),\n        nearbySelectableMonthDays: () =>\n            getDefault(\"datepicker.nearbySelectableMonthDays\", false),\n        showWeekNumber: () => getDefault(\"datepicker.showWeekNumber\", false),\n        weekNumberClickable: () =>\n            getDefault(\"datepicker.weekNumberClickable\", false),\n        firstDayOfWeek: () => getDefault(\"datepicker.firstDayOfWeek\", 0),\n        rulesForFirstWeek: 4,\n        yearsRange: () => getDefault(\"datepicker.yearsRange\", [-100, 10]),\n        position: undefined,\n        iconPack: () => getDefault(\"datepicker.iconPack\"),\n        icon: () => getDefault(\"datepicker.icon\"),\n        iconRight: () => getDefault(\"datepicker.iconRight\"),\n        iconRightClickable: false,\n        iconPrev: () => getDefault(\"datepicker.iconPrev\", \"chevron-left\"),\n        iconNext: () => getDefault(\"datepicker.iconNext\", \"chevron-right\"),\n        desktopModal: () => getDefault(\"datepicker.desktopModal\", false),\n        mobileModal: () => getDefault(\"datepicker.mobileModal\", true),\n        mobileNative: () => getDefault(\"datepicker.mobileNative\", false),\n        mobileBreakpoint: () => getDefault(\"datepicker.mobileBreakpoint\"),\n        teleport: () => getDefault(\"datepicker.teleport\", false),\n        useHtml5Validation: () => getDefault(\"useHtml5Validation\", true),\n        customValidity: \"\",\n        ariaNextLabel: () =>\n            getDefault(\"datepicker.ariaNextLabel\", \"Next Page\"),\n        ariaPreviousLabel: () =>\n            getDefault(\"datepicker.ariaNextLabel\", \"Previous Page\"),\n        ariaSelectMonthLabel: () =>\n            getDefault(\"datepicker.ariaSelectMonthLabel\", \"Select Month\"),\n        ariaSelectYearLabel: () =>\n            getDefault(\"datepicker.ariaSelectYearLabel\", \"Select Year\"),\n        inputClasses: () => getDefault(\"datepicker.inputClasses\"),\n        dropdownClasses: () => getDefault(\"datepicker.dropdownClasses\"),\n        selectClasses: () => getDefault(\"datepicker.selectClasses\"),\n    },\n);\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {Date | Date[]} updated modelValue prop\n     */\n    \"update:model-value\": [value: ModelValue];\n    /**\n     * active prop two-way binding\n     * @param value {boolean} updated active prop\n     */\n    \"update:active\": [value: boolean];\n    /**\n     * on range start is selected event\n     * @param value {Date} range start date\n     */\n    \"range-start\": [value: Date];\n    /**\n     * on range end is selected event\n     * @param value {Date} range end date\n     */\n    \"range-end\": [value: Date];\n    /**\n     * on month change event\n     * @param value {number} month number\n     */\n    \"change-month\": [value: number];\n    /**\n     * on year change event\n     * @param value {number} year number\n     */\n    \"change-year\": [value: number];\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    focus: [event: Event];\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    blur: [event: Event];\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    invalid: [event: Event];\n    /**\n     * on icon click event\n     * @param event {Event} native event\n     */\n    \"icon-click\": [event: Event];\n    /**\n     * on icon right click event\n     * @param event {Event} native event\n     */\n    \"icon-right-click\": [event: Event];\n}>();\n\nconst { dtf, dateCreator, dateFormatter, dateParser } =\n    useDatepickerMixins(props);\n\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\n\nconst pickerRef = useTemplateRef(\"pickerComponent\");\n\n// the modelvalue of selected date, use v-model to make it two-way binding\nconst vmodel = defineModel<ModelValue>({ default: undefined });\n\n// the active state of the dropdown, use v-model:active to make it two-way binding\nconst isActive = defineModel<boolean>(\"active\", { default: false });\n\nconst isTypeMonth = computed(() => props.type === \"month\");\n\n/**\n * When v-model is changed:\n *   1. Update internal value.\n */\nwatch(\n    () => props.modelValue,\n    (value: ModelValue) => {\n        const isArray = Array.isArray(value);\n        const currentDate: Date = isArray\n            ? value.length\n                ? value[value.length - 1]\n                : dateCreator()\n            : value\n              ? value\n              : dateCreator();\n        if (\n            !isArray ||\n            (isArray &&\n                Array.isArray(vmodel.value) &&\n                value.length > vmodel.value.length)\n        )\n            // update internal state\n            focusedDateData.value = {\n                day: currentDate.getDate(),\n                month: currentDate.getMonth(),\n                year: currentDate.getFullYear(),\n            };\n    },\n);\n\nwatch(\n    () => props.focusedDate,\n    (value) => {\n        if (value) {\n            focusedDateData.value = {\n                day: value.getDate(),\n                month: value.getMonth(),\n                year: value.getFullYear(),\n            };\n        }\n    },\n);\n\nconst _initialDate: Date =\n    (Array.isArray(props.modelValue)\n        ? props.modelValue[0]\n        : props.modelValue) ||\n    props.focusedDate ||\n    dateCreator();\n\nif (\n    !props.modelValue &&\n    props.maxDate &&\n    props.maxDate.getFullYear() < _initialDate.getFullYear()\n) {\n    _initialDate.setFullYear(props.maxDate.getFullYear());\n}\n\nconst focusedDateData = ref<FocusedDate>({\n    day: _initialDate.getDate(),\n    month: _initialDate.getMonth(),\n    year: _initialDate.getFullYear(),\n});\n\n/*\n * Emit input event on month and/or year change\n */\nwatch(\n    () => focusedDateData.value.month,\n    (value) => emits(\"change-month\", value),\n);\nwatch(\n    () => focusedDateData.value.year,\n    (value) => emits(\"change-year\", value),\n);\n\nconst computedMonthNames = computed(() =>\n    Array.isArray(props.monthNames)\n        ? props.monthNames\n        : getMonthNames(props.locale),\n);\n\nconst listOfMonths = computed<OptionsPropItem<number>[]>(() => {\n    let minMonth = 0;\n    let maxMonth = 12;\n    if (\n        props.minDate &&\n        focusedDateData.value.year === props.minDate.getFullYear()\n    ) {\n        minMonth = props.minDate.getMonth();\n    }\n    if (\n        props.maxDate &&\n        focusedDateData.value.year === props.maxDate.getFullYear()\n    ) {\n        maxMonth = props.maxDate.getMonth();\n    }\n    return computedMonthNames.value.map((name, index) => ({\n        label: name,\n        value: index,\n        attrs: { disabled: index < minMonth || index > maxMonth },\n    }));\n});\n\nconst computedDayNames = computed(() =>\n    Array.isArray(props.dayNames)\n        ? props.dayNames\n        : getWeekdayNames(props.locale),\n);\n\n/*\n * Returns an array of years for the year dropdown. If earliest/latest\n * dates are set by props, range of years will fall within those dates.\n */\nconst listOfYears = computed<OptionsPropItem<number>[]>(() => {\n    let latestYear = _initialDate.getFullYear() + props.yearsRange[1];\n    if (props.maxDate && props.maxDate.getFullYear() < latestYear) {\n        latestYear = Math.max(\n            props.maxDate.getFullYear(),\n            focusedDateData.value.year,\n        );\n    }\n\n    let earliestYear = _initialDate.getFullYear() + props.yearsRange[0];\n    if (props.minDate && props.minDate.getFullYear() > earliestYear) {\n        earliestYear = Math.min(\n            props.minDate.getFullYear(),\n            focusedDateData.value.year,\n        );\n    }\n\n    return Array.from(\n        { length: latestYear - earliestYear + 1 || 1 },\n        (value, index) => earliestYear + index,\n    )\n        .reverse()\n        .map((year) => ({\n            label: String(year),\n            value: year,\n        }));\n});\n\nconst showPrev = computed<boolean>(() => {\n    if (!props.minDate) return true;\n    if (isTypeMonth.value)\n        return focusedDateData.value.year > props.minDate.getFullYear();\n\n    const dateToCheck = new Date(\n        focusedDateData.value.year,\n        focusedDateData.value.month,\n    );\n    const date = new Date(\n        props.minDate.getFullYear(),\n        props.minDate.getMonth(),\n    );\n    return dateToCheck > date;\n});\n\n/**\n * Either decrement month by 1 if not January or decrement year by 1\n * and set month to 11 (December) or decrement year when 'month'\n */\nfunction prev(): void {\n    if (props.disabled) return;\n\n    if (isTypeMonth.value) {\n        focusedDateData.value.year -= 1;\n    } else {\n        if (focusedDateData.value.month > 0) {\n            focusedDateData.value.month -= 1;\n        } else {\n            focusedDateData.value.month = 11;\n            focusedDateData.value.year -= 1;\n        }\n    }\n}\n\nconst showNext = computed<boolean>(() => {\n    if (!props.maxDate) return true;\n    if (isTypeMonth.value)\n        return focusedDateData.value.year < props.maxDate.getFullYear();\n\n    const dateToCheck = new Date(\n        focusedDateData.value.year,\n        focusedDateData.value.month,\n    );\n    const date = new Date(\n        props.maxDate.getFullYear(),\n        props.maxDate.getMonth(),\n    );\n    return dateToCheck < date;\n});\n\n/**\n * Either increment month by 1 if not December or increment year by 1\n * and set month to 0 (January) or increment year when 'month'\n */\nfunction next(): void {\n    if (props.disabled) return;\n    if (isTypeMonth.value) {\n        focusedDateData.value.year += 1;\n    } else {\n        if (focusedDateData.value.month < 11) {\n            focusedDateData.value.month += 1;\n        } else {\n            focusedDateData.value.month = 0;\n            focusedDateData.value.year += 1;\n        }\n    }\n}\n\n// --- Formatter / Parser ---\n\n/** Format date into string */\nfunction format(value: Date | Date[] | undefined, isNative: boolean): string {\n    if (isNative) return formatNative(value);\n\n    // define function prop\n    const date = (Array.isArray(value) ? [...value] : value) as ModelValue;\n\n    return dateFormatter(date);\n}\n\nfunction formatNative(value: Date | Date[] | undefined): string {\n    if (Array.isArray(value)) value = value[0];\n\n    // return empty string if no value is given or value can't parse to proper date\n    if (!value) return \"\";\n    const date = new Date(value);\n    if (!isDate(date)) return \"\";\n\n    if (isTypeMonth.value) {\n        // Format date into string 'YYYY-MM'\n        const year = date.getFullYear();\n        const month = date.getMonth() + 1;\n        return year + \"-\" + pad(month);\n    } else {\n        // Format date into string 'YYYY-MM-DD'\n        const year = date.getFullYear();\n        const month = date.getMonth() + 1;\n        const day = date.getDate();\n        return year + \"-\" + pad(month) + \"-\" + pad(day);\n    }\n}\n\n/** Parse string into date */\nfunction parse(value: string, isNative: boolean): Date | Date[] | undefined {\n    if (isNative) return parseNative(value);\n\n    const date = dateParser(value);\n\n    const isValid =\n        isDate(date) ||\n        (Array.isArray(date) &&\n            date.length === 2 &&\n            isDate(date[0]) &&\n            isDate(date[1]));\n\n    return isValid ? date : undefined;\n}\n\n/** Parse date from string */\nfunction parseNative(value: string): Date | undefined {\n    const s = value ? value.split(\"-\") : [];\n    if (s.length !== 3) return undefined;\n    const year = parseInt(s[0], 10);\n    const month = parseInt(s[1]) - 1;\n    const day = parseInt(s[2]);\n    return new Date(year, month, day);\n}\n\n// --- Event Handler ---\n\n/** move to the previous focused date */\nfunction prevDate(): void {\n    if (props.disabled) return;\n\n    if (isTypeMonth.value) {\n        focusedDateData.value.year -= 1;\n    } else {\n        const date = new Date(\n            focusedDateData.value.year,\n            focusedDateData.value.month,\n            focusedDateData.value.day,\n        );\n        date.setDate(date.getDate() - 1);\n        focusedDateData.value.day = date.getDate();\n        focusedDateData.value.month = date.getMonth();\n        focusedDateData.value.year = date.getFullYear();\n\n        // todo: show selected hovered date\n        // vmodel.value = date as ModelValue;\n    }\n}\n\n/** move to the next focused date */\nfunction nextDate(): void {\n    if (props.disabled) return;\n\n    if (isTypeMonth.value) {\n        focusedDateData.value.year += 1;\n    } else {\n        const date = new Date(\n            focusedDateData.value.year,\n            focusedDateData.value.month,\n            focusedDateData.value.day,\n        );\n        date.setDate(date.getDate() + 1);\n        focusedDateData.value.day = date.getDate();\n        focusedDateData.value.month = date.getMonth();\n        focusedDateData.value.year = date.getFullYear();\n\n        // todo: show selected hovered date\n        // vmodel.value = date as ModelValue;\n    }\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-datepicker\"],\n    [\n        \"sizeClass\",\n        \"o-datepicker--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\"mobileClass\", \"o-datepicker--mobile\", null, isMobile],\n    [\n        \"expandedClass\",\n        \"o-datepicker--expanded\",\n        null,\n        computed(() => props.expanded),\n    ],\n);\n\nconst boxClasses = defineClasses([\"boxClass\", \"o-datepicker__box\"]);\nconst boxClassBind = computed(() => getActiveClasses(boxClasses));\n\nconst headerClasses = defineClasses([\"headerClass\", \"o-datepicker__header\"]);\n\nconst prevButtonClasses = defineClasses([\n    \"prevButtonClass\",\n    \"o-datepicker__header__previous\",\n]);\n\nconst nextButtonClasses = defineClasses([\n    \"nextButtonClass\",\n    \"o-datepicker__header__next\",\n]);\n\nconst listsClasses = defineClasses([\n    \"listsClass\",\n    \"o-datepicker__header__list\",\n]);\n\nconst footerClasses = defineClasses([\"footerClass\", \"o-datepicker__footer\"]);\n\nconst pickerDropdownClasses = defineClasses([\n    \"dropdownClass\",\n    \"o-datepicker__dropdown\",\n]);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: () => pickerRef.value?.focus(), value: vmodel });\n</script>\n\n<template>\n    <OPickerWrapper\n        ref=\"pickerComponent\"\n        v-model:active=\"isActive\"\n        v-model:value=\"vmodel\"\n        data-oruga=\"datepicker\"\n        :picker-props=\"props\"\n        :formatter=\"format\"\n        :parser=\"parse\"\n        :type=\"!isTypeMonth ? 'date' : 'month'\"\n        :max=\"maxDate\"\n        :min=\"minDate\"\n        :stay-open=\"props.multiple\"\n        :root-classes=\"rootClasses\"\n        :dropdown-classes=\"pickerDropdownClasses\"\n        :box-class=\"boxClassBind\"\n        :dtf=\"dtf\"\n        @focus=\"$emit('focus', $event)\"\n        @blur=\"$emit('blur', $event)\"\n        @invalid=\"$emit('invalid', $event)\"\n        @left=\"prevDate\"\n        @right=\"nextDate\"\n        @icon-click=\"$emit('icon-click', $event)\"\n        @icon-right-click=\"$emit('icon-right-click', $event)\">\n        <template v-if=\"$slots.trigger\" #trigger>\n            <!--\n                @slot Override the trigger\n            -->\n            <slot name=\"trigger\" />\n        </template>\n\n        <header :class=\"headerClasses\">\n            <!--\n                @slot Override the header\n            -->\n            <slot name=\"header\">\n                <OButton\n                    v-if=\"!disabled\"\n                    :class=\"prevButtonClasses\"\n                    :disabled=\"!showPrev\"\n                    :icon-pack=\"iconPack\"\n                    :icon-left=\"iconPrev\"\n                    :size=\"size\"\n                    :aria-label=\"ariaPreviousLabel\"\n                    @click.prevent=\"prev\"\n                    @keydown.enter.prevent=\"prev\"\n                    @keydown.space.prevent=\"prev\" />\n\n                <OButton\n                    v-if=\"!disabled\"\n                    :class=\"nextButtonClasses\"\n                    :disabled=\"!showNext\"\n                    :icon-pack=\"iconPack\"\n                    :icon-left=\"iconNext\"\n                    :size=\"size\"\n                    :aria-label=\"ariaNextLabel\"\n                    @click.prevent=\"next\"\n                    @keydown.enter.prevent=\"next\"\n                    @keydown.space.prevent=\"next\" />\n\n                <div :class=\"listsClasses\">\n                    <o-select\n                        v-if=\"!isTypeMonth\"\n                        v-bind=\"selectClasses\"\n                        v-model=\"focusedDateData.month\"\n                        :disabled=\"disabled\"\n                        :size=\"size\"\n                        :options=\"listOfMonths\"\n                        :aria-label=\"ariaSelectMonthLabel\"\n                        :use-html5-validation=\"false\"\n                        @keydown.left.stop.prevent=\"prev\"\n                        @keydown.right.stop.prevent=\"next\" />\n\n                    <o-select\n                        v-bind=\"selectClasses\"\n                        v-model=\"focusedDateData.year\"\n                        :disabled=\"disabled\"\n                        :size=\"size\"\n                        :options=\"listOfYears\"\n                        :aria-label=\"ariaSelectYearLabel\"\n                        :use-html5-validation=\"false\"\n                        @keydown.left.stop.prevent=\"prev\"\n                        @keydown.right.stop.prevent=\"next\"\n                        @keydown.up.stop.prevent=\"focusedDateData.year += 1\"\n                        @keydown.down.stop.prevent=\"\n                            focusedDateData.year -= 1\n                        \" />\n                </div>\n            </slot>\n        </header>\n\n        <!--\n            @slot Override the body\n        -->\n        <slot name=\"body\">\n            <o-datepicker-month\n                v-if=\"isTypeMonth\"\n                v-model=\"vmodel\"\n                v-model:focused-date=\"focusedDateData\"\n                :month-names=\"computedMonthNames\"\n                :picker-props=\"props\"\n                @range-start=\"(date) => $emit('range-start', date)\"\n                @range-end=\"(date) => $emit('range-end', date)\" />\n\n            <o-datepicker-table\n                v-else\n                v-model=\"vmodel\"\n                v-model:focused-date=\"focusedDateData\"\n                :day-names=\"computedDayNames\"\n                :month-names=\"computedMonthNames\"\n                :picker-props=\"props\"\n                @range-start=\"(date) => $emit('range-start', date)\"\n                @range-end=\"(date) => $emit('range-end', date)\" />\n        </slot>\n\n        <footer v-if=\"$slots.footer\" :class=\"footerClasses\">\n            <!--\n                @slot Define an additional footer\n            -->\n            <slot name=\"footer\" />\n        </footer>\n    </OPickerWrapper>\n</template>\n"],"names":["computed","date","isTrueish","matchWithGroups","ref","watch","nextTick","firstWeekOffset","weeksInYear","effectScope","onUnmounted","defineClasses","_useModel","visibleDayNames","weeksInThisMonth","weekBuilder","isDefined","multipleSelectedDates","useMatchMedia","useTemplateRef","getMonthNames","getWeekdayNames","isDate","pad","getActiveClasses"],"mappings":"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"}