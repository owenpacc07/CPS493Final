/*! Oruga v0.10.5 | MIT License | github.com/oruga-ui/oruga */
function findFocusable(element) {
  if (!element) return null;
  return element.querySelectorAll(`a[href]:not([tabindex="-1"]),
                                 area[href],
                                 input:not([disabled]):not([type="hidden"]),
                                 select:not([disabled]),
                                 textarea:not([disabled]),
                                 button:not([disabled]),
                                 iframe,
                                 object,
                                 embed,
                                 *[tabindex]:not([tabindex="-1"]):not([disabled]),
                                 *[contenteditable]`);
}
function useTrapFocus() {
  let onKeyDown = null;
  function applyHandler(el, value) {
    if (value) {
      el.focus({ preventScroll: true });
      if (typeof onKeyDown === "function")
        el.addEventListener("keydown", onKeyDown);
    } else {
      if (typeof onKeyDown === "function")
        el.removeEventListener("keydown", onKeyDown);
    }
  }
  const bind = (el, { value }) => {
    onKeyDown = (event) => {
      const target = event.target;
      if (!target) return;
      const focusable = findFocusable(el);
      if (!(focusable == null ? void 0 : focusable.length)) return;
      const firstFocusable = focusable[0];
      const lastFocusable = focusable[focusable.length - 1];
      if (target === firstFocusable && event.shiftKey && event.key === "Tab") {
        event.preventDefault();
        lastFocusable.focus();
      } else if (target === lastFocusable && !event.shiftKey && event.key === "Tab") {
        event.preventDefault();
        firstFocusable.focus();
      }
    };
    applyHandler(el, value);
  };
  const unbind = (el) => {
    applyHandler(el, false);
    onKeyDown = null;
  };
  const update = (el, { value }) => {
    applyHandler(el, value);
  };
  return {
    vTrapFocus: {
      mounted: bind,
      beforeUnmount: unbind,
      updated: update
    }
  };
}
export {
  useTrapFocus as u
};
//# sourceMappingURL=useTrapFocus-B6yzMeG-.mjs.map
