{"version":3,"file":"Input.vue_vue_type_script_setup_true_lang-kX88K1OJ.mjs","sources":["../../src/components/input/Input.vue"],"sourcesContent":["<script setup lang=\"ts\" generic=\"IsNumber extends boolean = false\">\nimport {\n    ref,\n    computed,\n    nextTick,\n    watch,\n    onMounted,\n    useAttrs,\n    useId,\n    useTemplateRef,\n    type StyleValue,\n} from \"vue\";\n\nimport OIcon from \"../icon/Icon.vue\";\n\nimport { getDefault } from \"@/utils/config\";\nimport { isDefined, isTrueish } from \"@/utils/helpers\";\nimport { defineClasses, useDebounce, useInputHandler } from \"@/composables\";\n\nimport { injectField } from \"../field/fieldInjection\";\n\nimport type { InputProps } from \"./props\";\n\n/**\n * Get user Input. Use with Field to access all functionalities.\n * @displayName Input\n * @style _input.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OInput\",\n    configField: \"input\",\n    inheritAttrs: false,\n});\n\ntype ModelValue = InputProps<IsNumber>[\"modelValue\"];\n\nconst props = withDefaults(defineProps<InputProps<IsNumber>>(), {\n    override: undefined,\n    modelValue: undefined,\n    // number: false,\n    type: \"text\",\n    size: () => getDefault(\"input.size\"),\n    variant: () => getDefault(\"input.variant\"),\n    placeholder: undefined,\n    expanded: false,\n    rounded: false,\n    disabled: false,\n    passwordReveal: false,\n    maxlength: undefined,\n    counter: () => getDefault(\"input.counter\", false),\n    autosize: false,\n    iconPack: () => getDefault(\"input.iconPack\"),\n    icon: () => getDefault(\"input.icon\"),\n    iconClickable: false,\n    iconRight: () => getDefault(\"input.iconRight\"),\n    iconRightClickable: false,\n    iconRightVariant: undefined,\n    clearable: () => getDefault(\"input.clearable\", false),\n    clearIcon: () => getDefault(\"input.clearIcon\", \"close-circle\"),\n    statusIcon: () => getDefault(\"statusIcon\", true),\n    debounce: () => getDefault(\"autocomplete.debounce\", 400),\n    autocomplete: () => getDefault(\"input.autocomplete\", \"off\"),\n    id: () => useId(),\n    useHtml5Validation: () => getDefault(\"useHtml5Validation\", true),\n    customValidity: \"\",\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {string | number} updated modelValue prop\n     */\n    \"update:model-value\": [value: ModelValue];\n    /**\n     * on input change event\n     * @param value {string} input value\n     * @param event {Event} native event\n     */\n    input: [value: string, event: Event];\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    focus: [event: Event];\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    blur: [event: Event];\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    invalid: [event: Event];\n    /**\n     * on icon click event\n     * @param event {Event} native event\n     */\n    \"icon-click\": [event: Event];\n    /**\n     * on icon right click event\n     * @param event {Event} native event\n     */\n    \"icon-right-click\": [event: Event];\n}>();\n\n// --- Validation Feature ---\n\nconst inputRef = useTemplateRef<HTMLInputElement>(\"inputElement\");\n\n// use form input functionalities\nconst {\n    checkHtml5Validity,\n    onBlur,\n    onFocus,\n    onInvalid,\n    setFocus,\n    isValid,\n    isFocused,\n} = useInputHandler(inputRef, emits, props);\n\n// inject parent field component if used inside one\nconst { parentField, statusVariant, statusVariantIcon } = injectField();\n\nconst vmodel = defineModel<ModelValue, string, string, ModelValue>({\n    // cast incomming value to string\n    get: (value) => (isDefined(value) ? String(value) : \"\"),\n    // cast outgoing value to number if prop number is true\n    set: (value) =>\n        !isDefined(value)\n            ? value\n            : isTrueish(props.number)\n              ? Number(value)\n              : String(value),\n    default: undefined,\n});\n\n// if `id` is given set as `for` property on o-field wrapper\nif (props.id) parentField?.value?.setInputId(props.id);\n\n/** Get value length */\nconst valueLength = computed(() =>\n    typeof vmodel.value === \"string\" || typeof vmodel.value === \"number\"\n        ? String(vmodel.value).length\n        : 0,\n);\n\nonMounted(() => {\n    /**\n     * When v-model is changed:\n     *  1. Set parent field filled state.\n     *  2. Resize textarea input\n     *  3. Check html5 valdiation\n     */\n    watch(\n        () => vmodel.value,\n        (value) => {\n            if (parentField?.value) parentField.value.setFilled(!!value);\n            if (props.autosize) resize();\n            if (!isValid.value) checkHtml5Validity();\n        },\n        { immediate: true, flush: \"post\" },\n    );\n});\n\nconst height = ref(\"auto\");\n\nfunction resize(): void {\n    height.value = \"auto\";\n    nextTick(() => {\n        if (props.type !== \"textarea\" || !inputRef.value) return;\n        const scrollHeight = inputRef.value.scrollHeight;\n        height.value = scrollHeight + \"px\";\n    });\n}\n\n/** Computed inline styles for autoresize */\nconst computedStyles = computed<StyleValue>(() =>\n    props.type === \"textarea\" && props.autosize\n        ? {\n              resize: \"none\",\n              height: height.value,\n              overflow: \"hidden\",\n          }\n        : {},\n);\n\nlet debouncedInput: ReturnType<typeof useDebounce<Parameters<typeof onInput>>>;\n\nwatch(\n    () => props.debounce,\n    (debounce) => (debouncedInput = useDebounce(onInput, debounce || 0)),\n    { immediate: true },\n);\n\nfunction onInput(event: Event): void {\n    emits(\"input\", vmodel.value, event);\n}\n\nconst placeholderVisible = computed(\n    () => !isDefined(vmodel.value) || vmodel.value === \"\",\n);\n\n// --- Icon Feature ---\n\nconst hasIconRight = computed(() => {\n    return !!(\n        props.passwordReveal ||\n        (props.statusIcon && statusVariantIcon.value) ||\n        (props.clearable && vmodel.value && props.clearIcon) ||\n        props.iconRight\n    );\n});\n\nconst computedIconRight = computed(() => {\n    if (props.passwordReveal) return passwordVisibleIcon.value;\n    else if (props.clearable && vmodel.value && props.clearIcon)\n        return props.clearIcon;\n    else if (props.iconRight) return props.iconRight;\n    return statusVariantIcon.value;\n});\n\nconst computedIconRightVariant = computed(() =>\n    props.passwordReveal || props.iconRight\n        ? props.iconRightVariant || props.variant\n        : statusVariant.value,\n);\n\nfunction iconClick(event: Event): void {\n    emits(\"icon-click\", event);\n    nextTick(() => setFocus());\n}\n\nfunction rightIconClick(event: Event): void {\n    if (props.passwordReveal) togglePasswordVisibility();\n    else if (props.clearable)\n        vmodel.value = (isTrueish(props.number) ? 0 : \"\") as ModelValue;\n    if (props.iconRightClickable) {\n        emits(\"icon-right-click\", event);\n        nextTick(() => setFocus());\n    }\n}\n\n// --- Password Visability Feature ---\n\nconst isPasswordVisible = ref(false);\n\nconst inputType = computed(() => {\n    if (props.passwordReveal)\n        return isPasswordVisible.value ? \"text\" : \"password\";\n    else return props.type;\n});\n\n/** Current password-reveal icon name. */\nconst passwordVisibleIcon = computed(() =>\n    !isPasswordVisible.value ? \"eye\" : \"eye-off\",\n);\n\n/**\n * Toggle the visibility of a password-reveal input\n * by changing the type and focus the input right away.\n */\nfunction togglePasswordVisibility(): void {\n    isPasswordVisible.value = !isPasswordVisible.value;\n    nextTick(() => setFocus());\n}\n\n// --- Computed Component Classes ---\n\nconst attrs = useAttrs();\n\nconst inputBind = computed(() => ({\n    ...parentField?.value?.inputAttrs,\n    ...attrs,\n}));\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-input\"],\n    [\n        \"sizeClass\",\n        \"o-input--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\n        \"variantClass\",\n        \"o-input--\",\n        computed(() => statusVariant.value || props.variant),\n        computed(() => !!statusVariant.value || !!props.variant),\n    ],\n    [\n        \"expandedClass\",\n        \"o-input--expanded\",\n        null,\n        computed(() => props.expanded),\n    ],\n    [\n        \"disabledClass\",\n        \"o-input--disabled\",\n        null,\n        computed(() => props.disabled),\n    ],\n    [\"roundedClass\", \"o-input--rounded\", null, computed(() => props.rounded)],\n    [\"hasIconRightClass\", \"o-input--icon-right\", null, hasIconRight],\n    [\n        \"textareaClass\",\n        \"o-input--textarea\",\n        null,\n        computed(() => props.type === \"textarea\"),\n    ],\n);\n\nconst inputClasses = defineClasses(\n    [\"inputClass\", \"o-input__input\"],\n    [\n        \"iconLeftSpaceClass\",\n        \"o-input__input--iconspace-left\",\n        null,\n        computed(() => !!props.icon),\n    ],\n    [\n        \"iconRightSpaceClass\",\n        \"o-input__input--iconspace-right\",\n        null,\n        hasIconRight,\n    ],\n    [\n        \"placeholderClass\",\n        \"o-input__input--placeholder\",\n        null,\n        placeholderVisible,\n    ],\n);\n\nconst iconLeftClasses = defineClasses([\"iconLeftClass\", \"o-input__icon-left\"]);\n\nconst iconRightClasses = defineClasses([\n    \"iconRightClass\",\n    \"o-input__icon-right\",\n]);\n\nconst counterClasses = defineClasses([\"counterClass\", \"o-input__counter\"]);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: setFocus, value: vmodel });\n</script>\n\n<template>\n    <div data-oruga=\"input\" :class=\"rootClasses\">\n        <o-icon\n            v-if=\"icon\"\n            :class=\"iconLeftClasses\"\n            :clickable=\"iconClickable\"\n            :icon=\"icon\"\n            :pack=\"iconPack\"\n            :size=\"size\"\n            @click=\"iconClick\" />\n\n        <input\n            v-if=\"type !== 'textarea'\"\n            v-bind=\"inputBind\"\n            :id=\"id\"\n            ref=\"inputElement\"\n            v-model=\"vmodel\"\n            :type=\"inputType\"\n            :data-oruga-input=\"inputType\"\n            :class=\"inputClasses\"\n            :maxlength=\"maxlength\"\n            :autocomplete=\"autocomplete\"\n            :placeholder=\"placeholder\"\n            :disabled=\"disabled\"\n            @blur=\"onBlur\"\n            @focus=\"onFocus\"\n            @invalid=\"onInvalid\"\n            @input=\"debouncedInput\" />\n\n        <textarea\n            v-else\n            v-bind=\"inputBind\"\n            :id=\"id\"\n            ref=\"inputElement\"\n            v-model=\"vmodel\"\n            data-oruga-input=\"textarea\"\n            :class=\"inputClasses\"\n            :maxlength=\"maxlength\"\n            :style=\"computedStyles\"\n            :placeholder=\"placeholder\"\n            :disabled=\"disabled\"\n            @blur=\"onBlur\"\n            @focus=\"onFocus\"\n            @invalid=\"onInvalid\"\n            @input=\"debouncedInput\" />\n\n        <o-icon\n            v-if=\"hasIconRight\"\n            :class=\"iconRightClasses\"\n            :clickable=\"passwordReveal || clearable || iconRightClickable\"\n            :icon=\"computedIconRight\"\n            :pack=\"iconPack\"\n            :size=\"size\"\n            :variant=\"computedIconRightVariant\"\n            both\n            @click=\"rightIconClick\" />\n\n        <small\n            v-if=\"maxlength && counter && isFocused && type !== 'number'\"\n            :class=\"counterClasses\">\n            {{ valueLength }} / {{ maxlength }}\n        </small>\n    </div>\n</template>\n"],"names":["_useModel","_a"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA,UAAM,QAAQ;AA+Bd,UAAM,QAAQ;AAyCR,UAAA,WAAW,eAAiC,cAAc;AAG1D,UAAA;AAAA,MACF;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACA,IAAA,gBAAgB,UAAU,OAAO,KAAK;AAG1C,UAAM,EAAE,aAAa,eAAe,kBAAA,IAAsB,YAAY;AAEhE,UAAA,SAASA,SAAoD,SAAA,cAAA;AAAA;AAAA,MAE/D,KAAK,CAAC,UAAW,UAAU,KAAK,IAAI,OAAO,KAAK,IAAI;AAAA;AAAA,MAEpD,KAAK,CAAC,UACF,CAAC,UAAU,KAAK,IACV,QACA,UAAU,MAAM,MAAM,IACpB,OAAO,KAAK,IACZ,OAAO,KAAK;AAAA,IAAA,CAE3B;AAGD,QAAI,MAAM,GAAI,kDAAa,UAAb,mBAAoB,WAAW,MAAM;AAGnD,UAAM,cAAc;AAAA,MAAS,MACzB,OAAO,OAAO,UAAU,YAAY,OAAO,OAAO,UAAU,WACtD,OAAO,OAAO,KAAK,EAAE,SACrB;AAAA,IACV;AAEA,cAAU,MAAM;AAOZ;AAAA,QACI,MAAM,OAAO;AAAA,QACb,CAAC,UAAU;AACP,cAAI,2CAAa,MAAO,aAAY,MAAM,UAAU,CAAC,CAAC,KAAK;AACvD,cAAA,MAAM,SAAiB,QAAA;AACvB,cAAA,CAAC,QAAQ,MAA0B,oBAAA;AAAA,QAC3C;AAAA,QACA,EAAE,WAAW,MAAM,OAAO,OAAO;AAAA,MACrC;AAAA,IAAA,CACH;AAEK,UAAA,SAAS,IAAI,MAAM;AAEzB,aAAS,SAAe;AACpB,aAAO,QAAQ;AACf,eAAS,MAAM;AACX,YAAI,MAAM,SAAS,cAAc,CAAC,SAAS,MAAO;AAC5C,cAAA,eAAe,SAAS,MAAM;AACpC,eAAO,QAAQ,eAAe;AAAA,MAAA,CACjC;AAAA,IAAA;AAIL,UAAM,iBAAiB;AAAA,MAAqB,MACxC,MAAM,SAAS,cAAc,MAAM,WAC7B;AAAA,QACI,QAAQ;AAAA,QACR,QAAQ,OAAO;AAAA,QACf,UAAU;AAAA,MAAA,IAEd,CAAA;AAAA,IACV;AAEI,QAAA;AAEJ;AAAA,MACI,MAAM,MAAM;AAAA,MACZ,CAAC,aAAc,iBAAiB,YAAY,SAAS,YAAY,CAAC;AAAA,MAClE,EAAE,WAAW,KAAK;AAAA,IACtB;AAEA,aAAS,QAAQ,OAAoB;AAC3B,YAAA,SAAS,OAAO,OAAO,KAAK;AAAA,IAAA;AAGtC,UAAM,qBAAqB;AAAA,MACvB,MAAM,CAAC,UAAU,OAAO,KAAK,KAAK,OAAO,UAAU;AAAA,IACvD;AAIM,UAAA,eAAe,SAAS,MAAM;AAChC,aAAO,CAAC,EACJ,MAAM,kBACL,MAAM,cAAc,kBAAkB,SACtC,MAAM,aAAa,OAAO,SAAS,MAAM,aAC1C,MAAM;AAAA,IAAA,CAEb;AAEK,UAAA,oBAAoB,SAAS,MAAM;AACjC,UAAA,MAAM,eAAgB,QAAO,oBAAoB;AAAA,eAC5C,MAAM,aAAa,OAAO,SAAS,MAAM;AAC9C,eAAO,MAAM;AAAA,eACR,MAAM,UAAW,QAAO,MAAM;AACvC,aAAO,kBAAkB;AAAA,IAAA,CAC5B;AAED,UAAM,2BAA2B;AAAA,MAAS,MACtC,MAAM,kBAAkB,MAAM,YACxB,MAAM,oBAAoB,MAAM,UAChC,cAAc;AAAA,IACxB;AAEA,aAAS,UAAU,OAAoB;AACnC,YAAM,cAAc,KAAK;AAChB,eAAA,MAAM,UAAU;AAAA,IAAA;AAG7B,aAAS,eAAe,OAAoB;AACpC,UAAA,MAAM,eAAyC,0BAAA;AAAA,eAC1C,MAAM;AACX,eAAO,QAAS,UAAU,MAAM,MAAM,IAAI,IAAI;AAClD,UAAI,MAAM,oBAAoB;AAC1B,cAAM,oBAAoB,KAAK;AACtB,iBAAA,MAAM,UAAU;AAAA,MAAA;AAAA,IAC7B;AAKE,UAAA,oBAAoB,IAAI,KAAK;AAE7B,UAAA,YAAY,SAAS,MAAM;AAC7B,UAAI,MAAM;AACC,eAAA,kBAAkB,QAAQ,SAAS;AAAA,kBAClC,MAAM;AAAA,IAAA,CACrB;AAGD,UAAM,sBAAsB;AAAA,MAAS,MACjC,CAAC,kBAAkB,QAAQ,QAAQ;AAAA,IACvC;AAMA,aAAS,2BAAiC;AACpB,wBAAA,QAAQ,CAAC,kBAAkB;AACpC,eAAA,MAAM,UAAU;AAAA,IAAA;AAK7B,UAAM,QAAQ,SAAS;AAEjB,UAAA,YAAY,SAAS,MAAO;;AAAA;AAAA,QAC9B,IAAGC,MAAA,2CAAa,UAAb,gBAAAA,IAAoB;AAAA,QACvB,GAAG;AAAA,MAAA;AAAA,KACL;AAEF,UAAM,cAAc;AAAA,MAChB,CAAC,aAAa,SAAS;AAAA,MACvB;AAAA,QACI;AAAA,QACA;AAAA,QACA,SAAS,MAAM,MAAM,IAAI;AAAA,QACzB,SAAS,MAAM,CAAC,CAAC,MAAM,IAAI;AAAA,MAC/B;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,QACA,SAAS,MAAM,cAAc,SAAS,MAAM,OAAO;AAAA,QACnD,SAAS,MAAM,CAAC,CAAC,cAAc,SAAS,CAAC,CAAC,MAAM,OAAO;AAAA,MAC3D;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,QACA;AAAA,QACA,SAAS,MAAM,MAAM,QAAQ;AAAA,MACjC;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,QACA;AAAA,QACA,SAAS,MAAM,MAAM,QAAQ;AAAA,MACjC;AAAA,MACA,CAAC,gBAAgB,oBAAoB,MAAM,SAAS,MAAM,MAAM,OAAO,CAAC;AAAA,MACxE,CAAC,qBAAqB,uBAAuB,MAAM,YAAY;AAAA,MAC/D;AAAA,QACI;AAAA,QACA;AAAA,QACA;AAAA,QACA,SAAS,MAAM,MAAM,SAAS,UAAU;AAAA,MAAA;AAAA,IAEhD;AAEA,UAAM,eAAe;AAAA,MACjB,CAAC,cAAc,gBAAgB;AAAA,MAC/B;AAAA,QACI;AAAA,QACA;AAAA,QACA;AAAA,QACA,SAAS,MAAM,CAAC,CAAC,MAAM,IAAI;AAAA,MAC/B;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MAAA;AAAA,IAER;AAEA,UAAM,kBAAkB,cAAc,CAAC,iBAAiB,oBAAoB,CAAC;AAE7E,UAAM,mBAAmB,cAAc;AAAA,MACnC;AAAA,MACA;AAAA,IAAA,CACH;AAED,UAAM,iBAAiB,cAAc,CAAC,gBAAgB,kBAAkB,CAAC;AAKzE,aAAa,EAAE,OAAO,UAAU,OAAO,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}