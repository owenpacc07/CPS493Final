{"version":3,"file":"Field.vue_vue_type_script_setup_true_lang-OMkZjnpI.mjs","sources":["../../src/components/field/Field.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport {\n    computed,\n    ref,\n    useSlots,\n    watch,\n    useId,\n    useTemplateRef,\n    type VNodeArrayChildren,\n} from \"vue\";\n\nimport { getDefault } from \"@/utils/config\";\nimport { isVNodeEmpty } from \"@/utils/helpers\";\nimport { defineClasses, useMatchMedia } from \"@/composables\";\n\nimport { injectField, provideField, type FieldData } from \"./fieldInjection\";\n\nimport type { FieldProps } from \"./props\";\n\n/**\n * Fields are used to add functionality to controls and to attach/group components and elements together.\n * @displayName Field\n * @style _field.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OField\",\n    configField: \"field\",\n});\n\nconst props = withDefaults(defineProps<FieldProps>(), {\n    override: undefined,\n    variant: undefined,\n    label: undefined,\n    labelSize: () => getDefault(\"field.labelsize\"),\n    labelFor: undefined,\n    labelId: () => useId(),\n    message: undefined,\n    messageTag: () => getDefault(\"field.messageTag\", \"p\"),\n    messageId: () => useId(),\n    grouped: false,\n    addons: false,\n    multiline: false,\n    horizontal: false,\n    mobileBreakpoint: () => getDefault(\"field.mobileBreakpoint\"),\n});\n\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\n\n/** the unique id for the input to associate the label with */\nconst inputId = ref(props.labelFor);\nwatch(\n    () => props.labelFor,\n    (v) => (inputId.value = v),\n);\n\n/** set internal variant when prop change */\nconst fieldVariant = ref(props.variant);\nwatch(\n    () => props.variant,\n    (v) => (fieldVariant.value = v),\n);\n\n/** set internal message when prop change */\nconst fieldMessage = ref(props.message);\nwatch(\n    () => props.message,\n    (v) => (fieldMessage.value = v),\n);\n\n/** set parent message if we use Field in Field */\nwatch(fieldMessage, (value) => {\n    if (parentField.value && parentField.value.hasInnerField) {\n        if (!parentField.value.variant)\n            parentField.value.setVariant(fieldVariant.value);\n        if (!parentField.value.message) parentField.value.setMessage(value);\n    }\n});\n\n/** this can be set from inputs to update the focus state */\nconst isFocused = ref(false);\n/** this can be set from inputs to update the filled state */\nconst isFilled = ref(false);\n/** this can be set from sub fields to update the has inner field state */\nconst hasInnerField = ref(false);\n\n// inject parent field component if used inside one\nconst { parentField } = injectField();\n// tell parent field it has an inner field\nif (parentField.value) parentField.value.addInnerField();\n\nconst slots = useSlots();\n\nconst hasLabel = computed(() => props.label || !!slots.label);\n\nconst hasMessage = computed(() => !!fieldMessage.value || !!slots.message);\n\nconst hasBody = computed(\n    () =>\n        props.grouped ||\n        props.multiline ||\n        hasInnerField.value ||\n        hasAddons.value,\n);\n\nconst hasAddons = computed(\n    () => props.addons && !props.horizontal && !!slots.default,\n);\n\nfunction getInnerContent(vnode): VNodeArrayChildren {\n    const slot = vnode();\n    return slot.length === 1 && Array.isArray(slot[0].children)\n        ? slot[0].children\n        : slot;\n}\n\n// --- Field Dependency Injection Feature ---\n\nconst rootRef = useTemplateRef(\"rootElement\");\n\nfunction addInnerField(): void {\n    hasInnerField.value = true;\n}\nfunction setFocus(value: boolean): void {\n    isFocused.value = value;\n}\nfunction setFilled(value: boolean): void {\n    isFilled.value = value;\n}\nfunction setVariant(value?: string): void {\n    fieldVariant.value = value;\n}\nfunction setMessage(value?: string): void {\n    fieldMessage.value = value;\n}\nfunction setInputId(value: string): void {\n    inputId.value = value;\n}\n\nconst inputAttrs = computed(() => ({\n    \"aria-labelledby\": props.labelId,\n    ...(fieldVariant.value === \"error\"\n        ? { \"aria-errormessage\": props.messageId }\n        : { \"aria-describedby\": props.messageId }),\n}));\n\n// Provided data is a computed ref to ensure reactivity.\nconst provideData = computed<FieldData>(() => ({\n    $el: rootRef.value,\n    props,\n    hasInnerField: hasInnerField.value,\n    variant: fieldVariant.value,\n    message: fieldMessage.value,\n    labelId: props.labelId,\n    inputAttrs: inputAttrs.value,\n    addInnerField,\n    setInputId,\n    setFocus,\n    setFilled,\n    setVariant,\n    setMessage,\n}));\n\n// Provide field component data via dependency injection.\nprovideField(provideData);\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-field\"],\n    [\n        \"horizontalClass\",\n        \"o-field--horizontal\",\n        null,\n        computed(() => !!props.horizontal),\n    ],\n    [\"mobileClass\", \"o-field--mobile\", null, isMobile],\n    [\"focusedClass\", \"o-field--focused\", null, isFocused],\n    [\"filledClass\", \"o-field--filled\", null, isFilled],\n);\n\nconst labelClasses = defineClasses(\n    [\"labelClass\", \"o-field__label\"],\n    [\n        \"labelSizeClass\",\n        \"o-field__label-\",\n        computed(() => props.labelSize),\n        computed(() => !!props.labelSize),\n    ],\n    [\n        \"labelVariantClass\",\n        \"o-field__label-\",\n        fieldVariant,\n        computed(() => !!fieldVariant.value),\n    ],\n);\n\nconst horizontalLabelClasses = defineClasses([\n    \"horizontalLabelClass\",\n    \"o-field__horizontal-label\",\n]);\n\nconst horizontalBodyClasses = defineClasses([\n    \"horizontalBodyClass\",\n    \"o-field__horizontal-body\",\n]);\n\nconst bodyClasses = defineClasses([\"bodyClass\", \"o-field__body\"]);\n\nconst innerBodyClasses = defineClasses(\n    [\"rootClass\", \"o-field\"],\n    [\"groupedClass\", \"o-field--grouped\", null, computed(() => props.grouped)],\n    [\n        \"addonsClass\",\n        \"o-field--addons\",\n        null,\n        computed(() => !props.grouped && hasAddons.value),\n    ],\n    [\n        \"multilineClass\",\n        \"o-field--multiline\",\n        null,\n        computed(() => props.multiline),\n    ],\n);\n\nconst messageClasses = defineClasses(\n    [\"messageClass\", \"o-field__message\"],\n    [\n        \"messageVariantClass\",\n        \"o-field__message-\",\n        fieldVariant,\n        computed(() => !!fieldVariant.value),\n    ],\n);\n</script>\n\n<template>\n    <div ref=\"rootElement\" data-oruga=\"field\" :class=\"rootClasses\">\n        <div v-if=\"horizontal\" :class=\"horizontalLabelClasses\">\n            <label\n                v-if=\"hasLabel\"\n                :id=\"labelId\"\n                :for=\"inputId\"\n                :class=\"labelClasses\">\n                <!--\n                    @slot Override the label\n                    @binding {string} label - label property \n                -->\n                <slot name=\"label\" :label=\"label\">{{ label }}</slot>\n            </label>\n        </div>\n\n        <template v-else>\n            <label\n                v-if=\"hasLabel\"\n                :id=\"labelId\"\n                :for=\"inputId\"\n                :class=\"labelClasses\">\n                <!--\n                    @slot Override the label\n                    @binding {string} label - label property \n                -->\n                <slot name=\"label\" :label=\"label\">{{ label }}</slot>\n            </label>\n        </template>\n\n        <div v-if=\"horizontal\" :class=\"horizontalBodyClasses\">\n            <template\n                v-for=\"(element, index) in getInnerContent($slots.default)\"\n                :key=\"index\">\n                <component :is=\"element\" v-if=\"isVNodeEmpty(element)\" />\n\n                <OField\n                    v-else\n                    :variant=\"fieldVariant\"\n                    :addons=\"false\"\n                    :label-id=\"labelId\"\n                    :message-id=\"messageId\"\n                    :message-tag=\"messageTag\"\n                    :message-class=\"messageClass\">\n                    <!-- render inner default slot element -->\n                    <component :is=\"element\" />\n                    <!-- show field message here -->\n                    <template v-if=\"index === 0\" #message>\n                        <slot name=\"message\" :message=\"fieldMessage\">\n                            {{ fieldMessage }}\n                        </slot>\n                    </template>\n                </OField>\n            </template>\n        </div>\n\n        <div v-else-if=\"hasBody\" :class=\"bodyClasses\">\n            <div :class=\"innerBodyClasses\">\n                <!--\n                   @slot Default content\n                -->\n                <slot />\n            </div>\n        </div>\n\n        <template v-else>\n            <!--\n                @slot Default content\n            -->\n            <slot />\n        </template>\n\n        <component\n            :is=\"messageTag\"\n            v-if=\"hasMessage && !horizontal\"\n            :id=\"messageId\"\n            :class=\"messageClasses\">\n            <!--\n                @slot Override the message\n                @binding {string} message - field message \n            -->\n            <slot name=\"message\" :message=\"fieldMessage\">\n                {{ fieldMessage }}\n            </slot>\n        </component>\n    </div>\n</template>\n"],"names":[],"mappings":"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"}