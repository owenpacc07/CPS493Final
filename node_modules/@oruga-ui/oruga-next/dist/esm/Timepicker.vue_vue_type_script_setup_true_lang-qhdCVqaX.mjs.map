{"version":3,"file":"Timepicker.vue_vue_type_script_setup_true_lang-qhdCVqaX.mjs","sources":["../../src/components/timepicker/useTimepickerMixins.ts","../../src/components/timepicker/Timepicker.vue"],"sourcesContent":["import { computed } from \"vue\";\nimport { matchWithGroups } from \"../datepicker/utils\";\nimport type { TimepickerProps } from \"./props\";\n\nconst AM = \"AM\" as const;\nconst PM = \"PM\" as const;\nconst HOUR_FORMAT_24 = \"24\" as const;\nconst HOUR_FORMAT_12 = \"12\" as const;\n\n/** Time Format Feature */\nexport function useTimepickerMixins(props: TimepickerProps) {\n    const localeOptions = computed(\n        () =>\n            new Intl.DateTimeFormat(props.locale, {\n                hour: \"numeric\",\n                minute: \"numeric\",\n                second: props.enableSeconds ? \"numeric\" : undefined,\n            }).resolvedOptions() as Intl.DateTimeFormatOptions,\n    );\n\n    const isHourFormat24 = computed(\n        () =>\n            (props.hourFormat && props.hourFormat === HOUR_FORMAT_24) ||\n            (!props.hourFormat && !localeOptions.value.hour12),\n    );\n\n    const dtf = computed(\n        () =>\n            new Intl.DateTimeFormat(props.locale, {\n                hour: localeOptions.value.hour || \"numeric\",\n                minute: localeOptions.value.minute || \"numeric\",\n                second: props.enableSeconds\n                    ? localeOptions.value.second || \"numeric\"\n                    : undefined,\n                hourCycle: !isHourFormat24.value ? \"h12\" : \"h23\",\n            }),\n    );\n\n    const sampleTime = computed(() => {\n        const d = timeCreator();\n        d.setHours(10);\n        d.setSeconds(0);\n        d.setMinutes(0);\n        d.setMilliseconds(0);\n        return d;\n    });\n\n    const amString = computed(() => {\n        if (\n            dtf.value.formatToParts &&\n            typeof dtf.value.formatToParts === \"function\"\n        ) {\n            const d = new Date(sampleTime.value);\n            d.setHours(10);\n            const dayPeriod = dtf.value\n                .formatToParts(d)\n                .find((part) => part.type === \"dayPeriod\");\n            if (dayPeriod) return dayPeriod.value;\n        }\n        return AM;\n    });\n\n    const pmString = computed(() => {\n        if (\n            dtf.value.formatToParts &&\n            typeof dtf.value.formatToParts === \"function\"\n        ) {\n            const d = new Date(sampleTime.value);\n            d.setHours(20);\n            const dayPeriod = dtf.value\n                .formatToParts(d)\n                .find((part) => part.type === \"dayPeriod\");\n            if (dayPeriod) {\n                return dayPeriod.value;\n            }\n        }\n        return PM;\n    });\n\n    const meridiens = computed(() => [amString.value, pmString.value]);\n\n    const hourLiteral = computed(() => {\n        if (\n            dtf.value.formatToParts &&\n            typeof dtf.value.formatToParts === \"function\"\n        ) {\n            const d = new Date(sampleTime.value);\n            const parts = dtf.value.formatToParts(d);\n            const literal = parts.find(\n                (part, idx) => idx > 0 && parts[idx - 1].type === \"hour\",\n            );\n            if (literal) return literal.value;\n        }\n        return \":\";\n    });\n\n    const minuteLiteral = computed(() => {\n        if (\n            dtf.value.formatToParts &&\n            typeof dtf.value.formatToParts === \"function\"\n        ) {\n            const d = new Date(sampleTime.value);\n            const parts = dtf.value.formatToParts(d);\n            const literal = parts.find(\n                (part, idx) => idx > 0 && parts[idx - 1].type === \"minute\",\n            );\n            if (literal) return literal.value;\n        }\n        return \":\";\n    });\n\n    const secondLiteral = computed(() => {\n        if (\n            dtf.value.formatToParts &&\n            typeof dtf.value.formatToParts === \"function\"\n        ) {\n            const d = new Date(sampleTime.value);\n            const parts = dtf.value.formatToParts(d);\n            const literal = parts.find(\n                (part, idx) => idx > 0 && parts[idx - 1].type === \"second\",\n            );\n            if (literal) return literal.value;\n        }\n        return undefined;\n    });\n\n    function timeCreator(): Date {\n        return typeof props.creator === \"function\"\n            ? props.creator()\n            : new Date();\n    }\n\n    function timeFormatter(time: typeof props.modelValue): string {\n        if (typeof props.formatter === \"function\") return props.formatter(time);\n\n        if (!time) return \"00:00\";\n        return dtf.value.format(time);\n    }\n\n    function timeParser(time: string): typeof props.modelValue {\n        if (typeof props.parser === \"function\") return props.parser(time);\n\n        if (!time) return undefined;\n\n        if (\n            dtf.value.formatToParts &&\n            typeof dtf.value.formatToParts === \"function\"\n        ) {\n            const formatRegex = dtf.value\n                .formatToParts(sampleTime.value)\n                .map((part) => {\n                    if (part.type === \"literal\") {\n                        return part.value.replace(/ /g, \"\\\\s?\");\n                    } else if (part.type === \"dayPeriod\") {\n                        return `((?!=<${part.type}>)(${amString.value}|${\n                            pmString.value\n                        }|${AM}|${PM}|${AM.toLowerCase()}|${PM.toLowerCase()})?)`;\n                    }\n                    return `((?!=<${part.type}>)\\\\d+)`;\n                })\n                .join(\"\");\n            const timeGroups = matchWithGroups(formatRegex, time);\n\n            // We do a simple validation for the group.\n            // If it is not valid, it will fallback to Date.parse below\n            timeGroups.hour = timeGroups.hour\n                ? parseInt(timeGroups.hour, 10)\n                : null;\n            timeGroups.minute = timeGroups.minute\n                ? parseInt(timeGroups.minute, 10)\n                : null;\n            timeGroups.second = timeGroups.second\n                ? parseInt(timeGroups.second, 10)\n                : null;\n            if (\n                timeGroups.hour &&\n                timeGroups.hour >= 0 &&\n                timeGroups.hour < 24 &&\n                timeGroups.minute &&\n                timeGroups.minute >= 0 &&\n                timeGroups.minute < 59\n            ) {\n                if (\n                    timeGroups.dayPeriod &&\n                    (timeGroups.dayPeriod.toLowerCase() ===\n                        pmString.value.toLowerCase() ||\n                        timeGroups.dayPeriod.toLowerCase() ===\n                            PM.toLowerCase()) &&\n                    timeGroups.hour < 12\n                ) {\n                    timeGroups.hour += 12;\n                }\n                const date = new Date(sampleTime.value);\n                date.setHours(timeGroups.hour);\n                date.setMinutes(timeGroups.minute);\n                date.setSeconds(timeGroups.second || 0);\n                return date;\n            }\n        }\n\n        // Fallback if formatToParts is not supported or if we were not able to parse a valid date\n        let am = false;\n        if (props.hourFormat === HOUR_FORMAT_12) {\n            const dateString12 = time.split(\" \");\n            time = dateString12[0];\n            am = dateString12[1] === amString.value || dateString12[1] === AM;\n        }\n        const timeSplit = time.split(\":\");\n        let hours = parseInt(timeSplit[0], 10);\n        const minutes = parseInt(timeSplit[1], 10);\n        const seconds =\n            props.enableSeconds && timeSplit.length >= 3\n                ? parseInt(timeSplit[2], 10)\n                : 0;\n        if (\n            isNaN(hours) ||\n            hours < 0 ||\n            hours > 23 ||\n            (props.hourFormat === HOUR_FORMAT_12 &&\n                (hours < 1 || hours > 12)) ||\n            isNaN(minutes) ||\n            minutes < 0 ||\n            minutes > 59\n        ) {\n            return undefined;\n        }\n        const date = new Date(sampleTime.value);\n        date.setSeconds(seconds);\n        date.setMinutes(minutes);\n        if (props.hourFormat === HOUR_FORMAT_12) {\n            if (am && hours === 12) {\n                hours = 0;\n            } else if (!am && hours !== 12) {\n                hours += 12;\n            }\n        }\n        date.setHours(hours);\n        return new Date(date.getTime());\n    }\n\n    return {\n        dtf,\n        timeCreator,\n        timeFormatter,\n        timeParser,\n        pmString,\n        amString,\n        meridiens,\n        isHourFormat24,\n        hourLiteral,\n        minuteLiteral,\n        secondLiteral,\n    };\n}\n","<script setup lang=\"ts\">\nimport { computed, ref, useTemplateRef, watch } from \"vue\";\n\nimport OSelect from \"../select/Select.vue\";\nimport OPickerWrapper from \"../utils/PickerWrapper.vue\";\n\nimport { getDefault } from \"@/utils/config\";\nimport { isDate, isDefined, pad } from \"@/utils/helpers\";\nimport { defineClasses, useMatchMedia, getActiveClasses } from \"@/composables\";\n\nimport { useTimepickerMixins } from \"./useTimepickerMixins\";\n\nimport type { OptionsItem } from \"@/types\";\nimport type { TimepickerProps } from \"./props\";\n\n/**\n * An input with a simple dropdown/modal for selecting a time, uses native timepicker for mobile.\n * @displayName Timepicker\n * @style _timepicker.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OTimepicker\",\n    configField: \"timepicker\",\n});\n\ntype ModelValue = TimepickerProps[\"modelValue\"];\n\nconst props = withDefaults(defineProps<TimepickerProps>(), {\n    override: undefined,\n    modelValue: undefined,\n    active: false,\n    minTime: undefined,\n    maxTime: undefined,\n    inline: false,\n    placeholder: undefined,\n    expanded: false,\n    rounded: false,\n    readonly: false,\n    disabled: false,\n    size: () => getDefault(\"timepicker.size\"),\n    hourFormat: undefined,\n    incrementHours: 1,\n    incrementMinutes: 1,\n    incrementSeconds: 1,\n    openOnFocus: () => getDefault(\"timepicker.openOnFocus\", true),\n    closeOnClick: () => getDefault(\"timepicker.closeOnClick\", true),\n    enableSeconds: false,\n    defaultMinutes: undefined,\n    defaultSeconds: undefined,\n    locale: () => getDefault(\"locale\"),\n    formatter: getDefault(\"timepicker.formatter\"),\n    parser: getDefault(\"timepicker.parser\"),\n    creator: getDefault(\"timepicker.creator\"),\n    unselectableTimes: undefined,\n    resetOnMeridianChange: false,\n    position: undefined,\n    iconPack: () => getDefault(\"timepicker.iconPack\"),\n    icon: () => getDefault(\"timepicker.icon\"),\n    iconRight: () => getDefault(\"timepicker.iconRight\"),\n    iconRightClickable: false,\n    desktopModal: () => getDefault(\"timepicker.desktopModal\", false),\n    mobileModal: () => getDefault(\"timepicker.mobileModal\", true),\n    mobileNative: () => getDefault(\"timepicker.mobileNative\", true),\n    mobileBreakpoint: () => getDefault(\"timepicker.mobileBreakpoint\"),\n    teleport: () => getDefault(\"timepicker.teleport\", false),\n    useHtml5Validation: () => getDefault(\"useHtml5Validation\", true),\n    customValidity: \"\",\n    inputClasses: () => getDefault(\"timepicker.inputClasses\"),\n    dropdownClasses: () => getDefault(\"timepicker.dropdownClasses\"),\n    ariaSelectSecondsLabel: () =>\n        getDefault(\"timepicker.ariaSelectSecondLabel\", \"Select Second\"),\n    ariaSelectMinutesLabel: () =>\n        getDefault(\"timepicker.ariaSelectMinuteLabel\", \"Select Minute\"),\n    ariaSelectHoursLabel: () =>\n        getDefault(\"timepicker.ariaSelectHourLabel\", \"Select Hour\"),\n    selectClasses: () => getDefault(\"timepicker.selectClasses\"),\n});\n\ndefineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {Date} updated modelValue prop\n     */\n    \"update:model-value\": [value: Date];\n    /**\n     * active prop two-way binding\n     * @param value {boolean} updated active prop\n     */\n    \"update:active\": [value: boolean];\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    focus: [event: Event];\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    blur: [event: Event];\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    invalid: [event: Event];\n    /**\n     * on icon click event\n     * @param event {Event} native event\n     */\n    \"icon-click\": [event: Event];\n    /**\n     * on icon right click event\n     * @param event {Event} native event\n     */\n    \"icon-right-click\": [event: Event];\n}>();\n\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\n\nconst {\n    dtf,\n    timeCreator,\n    timeFormatter,\n    timeParser,\n    pmString,\n    amString,\n    meridiens,\n    isHourFormat24,\n    hourLiteral,\n    minuteLiteral,\n    secondLiteral,\n} = useTimepickerMixins(props);\n\nconst pickerRef = useTemplateRef(\"pickerComponent\");\n\n// the modelvalue of selected date, use v-model to make it two-way binding\nconst vmodel = defineModel<ModelValue>({ default: undefined });\n\n// the active state of the dropdown, use v-model:active to make it two-way binding\nconst isActive = defineModel<boolean>(\"active\", { default: false });\n\nconst hoursSelected = ref<number>();\nconst minutesSelected = ref<number>();\nconst secondsSelected = ref<number>();\nconst meridienSelected = ref<string>();\n\nwatch(\n    () => props.modelValue,\n    (value) => updateValue(value),\n    { immediate: true },\n);\n\n/** Update internal value. */\nfunction updateValue(value: Date | Date[] | undefined): void {\n    if (Array.isArray(value)) return updateValue(value[0]);\n    if (vmodel.value !== value) vmodel.value = value;\n    if (value) {\n        // update internal state\n        hoursSelected.value = value.getHours();\n        minutesSelected.value = value.getMinutes();\n        secondsSelected.value = value.getSeconds();\n        meridienSelected.value =\n            value.getHours() >= 12 ? pmString.value : amString.value;\n    } else {\n        // reset internal state\n        hoursSelected.value = undefined;\n        minutesSelected.value = undefined;\n        secondsSelected.value = undefined;\n        meridienSelected.value = amString.value;\n    }\n}\n\nconst step = computed(() => (props.enableSeconds ? \"1\" : undefined));\n\nwatch(\n    () => props.hourFormat,\n    () => {\n        if (isDefined(hoursSelected.value))\n            meridienSelected.value =\n                (hoursSelected.value || 0) >= 12\n                    ? pmString.value\n                    : amString.value;\n    },\n);\n\nwatch(\n    () => props.locale,\n    (value) => {\n        // see updateInternalState default\n        if (!value) meridienSelected.value = amString.value;\n    },\n);\n\nfunction formatNumber(value: number, prependZero: boolean): string {\n    return isHourFormat24.value || prependZero ? pad(value) : String(value);\n}\n\nconst hours = computed<OptionsItem<number>[]>(() => {\n    if (!props.incrementHours || props.incrementHours < 1)\n        throw new Error(\"Hour increment cannot be null or less than 1.\");\n    const hours: OptionsItem<number>[] = [];\n    const numberOfHours = isHourFormat24.value ? 24 : 12;\n    for (let i = 0; i < numberOfHours; i += props.incrementHours) {\n        let value = i;\n        let label = value;\n        if (!isHourFormat24.value) {\n            value = i + 1;\n            label = value;\n            if (meridienSelected.value === amString.value) {\n                if (value === 12) value = 0;\n            } else if (meridienSelected.value === pmString.value) {\n                if (value !== 12) value += 12;\n            }\n        }\n        hours.push({\n            label: formatNumber(label, false),\n            value: value,\n        });\n    }\n    return hours;\n});\n\nconst minutes = computed<OptionsItem<number>[]>(() => {\n    if (!props.incrementMinutes || props.incrementMinutes < 1)\n        throw new Error(\"Minute increment cannot be null or less than 1.\");\n    const minutes: OptionsItem<number>[] = [];\n    for (let i = 0; i < 60; i += props.incrementMinutes) {\n        minutes.push({\n            label: formatNumber(i, true),\n            value: i,\n        });\n    }\n    return minutes;\n});\n\nconst seconds = computed<OptionsItem<number>[]>(() => {\n    if (!props.incrementSeconds || props.incrementSeconds < 1)\n        throw new Error(\"Second increment cannot be null or less than 1.\");\n    const seconds: OptionsItem<number>[] = [];\n    for (let i = 0; i < 60; i += props.incrementSeconds) {\n        seconds.push({\n            label: formatNumber(i, true),\n            value: i,\n        });\n    }\n    return seconds;\n});\n\nfunction isHourDisabled(hour: number): boolean {\n    let disabled = false;\n    if (props.minTime) {\n        const minHours = props.minTime.getHours();\n        const noMinutesAvailable = minutes.value.every((minute) => {\n            return isMinuteDisabledForHour(hour, minute.value);\n        });\n        disabled = hour < minHours || noMinutesAvailable;\n    }\n    if (props.maxTime) {\n        if (!disabled) {\n            const maxHours = props.maxTime.getHours();\n            disabled = hour > maxHours;\n        }\n    }\n\n    if (props.unselectableTimes && !disabled) {\n        if (typeof props.unselectableTimes === \"function\") {\n            const date = new Date();\n            date.setHours(hour);\n            date.setMinutes(minutesSelected.value || 0);\n            date.setSeconds(secondsSelected.value || 0);\n            return props.unselectableTimes(date);\n        } else {\n            const unselectable = props.unselectableTimes.filter((time) => {\n                if (props.enableSeconds && isDefined(secondsSelected.value)) {\n                    return (\n                        time.getHours() === hour &&\n                        time.getMinutes() === minutesSelected.value &&\n                        time.getSeconds() === secondsSelected.value\n                    );\n                } else if (isDefined(minutesSelected.value)) {\n                    return (\n                        time.getHours() === hour &&\n                        time.getMinutes() === minutesSelected.value\n                    );\n                }\n                return false;\n            });\n            if (unselectable.length > 0) {\n                disabled = true;\n            } else {\n                disabled = minutes.value.every((minute) => {\n                    return (\n                        (props.unselectableTimes as Date[]).filter((time) => {\n                            return (\n                                time.getHours() === hour &&\n                                time.getMinutes() === minute.value\n                            );\n                        }).length > 0\n                    );\n                });\n            }\n        }\n    }\n    return disabled;\n}\n\nfunction isMinuteDisabledForHour(hour: number, minute: number): boolean {\n    let disabled = false;\n    if (props.minTime) {\n        const minHours = props.minTime.getHours();\n        const minMinutes = props.minTime.getMinutes();\n        disabled = hour === minHours && minute < minMinutes;\n    }\n    if (props.maxTime) {\n        if (!disabled) {\n            const maxHours = props.maxTime.getHours();\n            const maxMinutes = props.maxTime.getMinutes();\n            disabled = hour === maxHours && minute > maxMinutes;\n        }\n    }\n    return disabled;\n}\n\nfunction isMinuteDisabled(minute: number): boolean {\n    if (hoursSelected.value === undefined) return false;\n\n    let disabled =\n        isHourDisabled(hoursSelected.value) ||\n        isMinuteDisabledForHour(hoursSelected.value, minute);\n\n    if (props.unselectableTimes && !disabled) {\n        if (typeof props.unselectableTimes === \"function\") {\n            const date = new Date();\n            date.setHours(hoursSelected.value);\n            date.setMinutes(minute);\n            date.setSeconds(secondsSelected.value || 0);\n            return props.unselectableTimes(date);\n        } else {\n            const unselectable = props.unselectableTimes.filter((time) => {\n                if (props.enableSeconds && isDefined(secondsSelected.value)) {\n                    return (\n                        time.getHours() === hoursSelected.value &&\n                        time.getMinutes() === minute &&\n                        time.getSeconds() === secondsSelected.value\n                    );\n                } else {\n                    return (\n                        time.getHours() === hoursSelected.value &&\n                        time.getMinutes() === minute\n                    );\n                }\n            });\n            disabled = unselectable.length > 0;\n        }\n    }\n    return disabled;\n}\n\nfunction isSecondDisabled(second: number): boolean {\n    if (!isDefined(minutesSelected.value)) return false;\n    let disabled = false;\n\n    if (isMinuteDisabled(minutesSelected.value)) {\n        disabled = true;\n    } else {\n        if (props.minTime) {\n            const minHours = props.minTime.getHours();\n            const minMinutes = props.minTime.getMinutes();\n            const minSeconds = props.minTime.getSeconds();\n            disabled =\n                hoursSelected.value === minHours &&\n                minutesSelected.value === minMinutes &&\n                second < minSeconds;\n        }\n        if (props.maxTime) {\n            if (!disabled) {\n                const maxHours = props.maxTime.getHours();\n                const maxMinutes = props.maxTime.getMinutes();\n                const maxSeconds = props.maxTime.getSeconds();\n                disabled =\n                    hoursSelected.value === maxHours &&\n                    minutesSelected.value === maxMinutes &&\n                    second > maxSeconds;\n            }\n        }\n    }\n    if (props.unselectableTimes && !disabled) {\n        if (typeof props.unselectableTimes === \"function\") {\n            const date = new Date();\n            date.setHours(hoursSelected.value || 0);\n            date.setMinutes(minutesSelected.value);\n            date.setSeconds(second);\n            return props.unselectableTimes(date);\n        } else {\n            const unselectable = props.unselectableTimes.filter((time) => {\n                return (\n                    time.getHours() === hoursSelected.value &&\n                    time.getMinutes() === minutesSelected.value &&\n                    time.getSeconds() === second\n                );\n            });\n            disabled = unselectable.length > 0;\n        }\n    }\n    return disabled;\n}\n\nfunction isMeridienDisabled(meridienString: string): boolean {\n    const offset = meridienString == \"AM\" ? 0 : 12;\n    for (let i = 0; i < 12; i++) {\n        if (!isHourDisabled(i + offset)) return false;\n    }\n    return true;\n}\n\nfunction updateDateSelected(\n    hours: number,\n    minutes: number,\n    seconds: number,\n    meridiens,\n): void {\n    if (\n        isDefined(hours) &&\n        isDefined(minutes) &&\n        ((!isDefined(isHourFormat24.value) && isDefined(meridiens)) ||\n            isDefined(isHourFormat24.value))\n    ) {\n        let time: Date;\n        if (vmodel.value) {\n            time = new Date(vmodel.value);\n        } else {\n            time = timeCreator();\n            time.setMilliseconds(0);\n        }\n        time.setHours(hours);\n        time.setMinutes(minutes);\n        time.setSeconds(seconds);\n        if (!isNaN(time.getTime())) {\n            vmodel.value = new Date(time.getTime());\n        }\n    }\n}\n\n// --- Formatter / Parser ---\n\n/** Format date into string */\nfunction format(value: Date | Date[] | undefined, isNative: boolean): string {\n    if (Array.isArray(value)) return format(value[0], isNative);\n    if (isNative) return formatNative(value);\n\n    return timeFormatter(value);\n}\n\n/** Format date into string 'HH-MM-SS'*/\nfunction formatNative(value: Date | Date[] | undefined): string {\n    if (Array.isArray(value)) return formatNative(value[0]);\n\n    // return empty string if no value is given or value can't parse to proper date\n    if (!value) return \"\";\n    const date = new Date(value);\n    if (!isDate(date)) return \"\";\n\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n    const seconds = date.getSeconds();\n    return (\n        formatNumber(hours, true) +\n        \":\" +\n        formatNumber(minutes, true) +\n        \":\" +\n        formatNumber(seconds, true)\n    );\n}\n\n/** Parse string into date */\nfunction parse(value: string, isNative: boolean): Date | undefined {\n    if (isNative) return parseNative(value);\n\n    const date = timeParser(value);\n    return isDate(date) ? date : undefined;\n}\n\n/** Parse time from string */\nfunction parseNative(date: string): Date | undefined {\n    if (!date) return undefined;\n\n    let time: Date;\n    if (vmodel.value) {\n        time = new Date(vmodel.value);\n    } else {\n        time = timeCreator();\n        time.setMilliseconds(0);\n    }\n    const t = date.split(\":\");\n    time.setHours(parseInt(t[0], 10));\n    time.setMinutes(parseInt(t[1], 10));\n    time.setSeconds(t[2] ? parseInt(t[2], 10) : 0);\n    return new Date(time.getTime());\n}\n\n// --- Event Handler ---\n\nfunction onMeridienChange(value: string): void {\n    if (isDefined(hoursSelected.value) && props.resetOnMeridianChange) {\n        hoursSelected.value = undefined;\n        minutesSelected.value = undefined;\n        secondsSelected.value = undefined;\n        vmodel.value = undefined;\n    } else if (isDefined(hoursSelected.value)) {\n        if (value === pmString.value) hoursSelected.value += 12;\n        else if (value === amString.value) hoursSelected.value -= 12;\n    }\n    updateDateSelected(\n        hoursSelected.value || 0,\n        minutesSelected.value || 0,\n        props.enableSeconds ? secondsSelected.value || 0 : 0,\n        value,\n    );\n}\n\nfunction onHoursChange(value: string): void {\n    if (!minutesSelected.value && typeof props.defaultMinutes !== \"undefined\")\n        minutesSelected.value = props.defaultMinutes;\n    if (!secondsSelected.value && typeof props.defaultSeconds !== \"undefined\")\n        secondsSelected.value = props.defaultSeconds;\n\n    updateDateSelected(\n        parseInt(value, 10),\n        minutesSelected.value || 0,\n        props.enableSeconds ? secondsSelected.value || 0 : 0,\n        meridienSelected.value,\n    );\n}\n\nfunction onMinutesChange(value: string): void {\n    if (!secondsSelected.value && props.defaultSeconds)\n        secondsSelected.value = props.defaultSeconds;\n\n    updateDateSelected(\n        hoursSelected.value || 0,\n        parseInt(value, 10),\n        props.enableSeconds ? secondsSelected.value || 0 : 0,\n        meridienSelected.value,\n    );\n}\n\nfunction onSecondsChange(value: string): void {\n    updateDateSelected(\n        hoursSelected.value || 0,\n        minutesSelected.value || 0,\n        parseInt(value, 10),\n        meridienSelected.value,\n    );\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-timepicker\"],\n    [\n        \"sizeClass\",\n        \"o-timepicker--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\"mobileClass\", \"o-timepicker--mobile\", null, isMobile],\n);\n\nconst separatorClasses = defineClasses([\n    \"separatorClass\",\n    \"o-timepicker__separtor\",\n]);\n\nconst footerClasses = defineClasses([\"footerClass\", \"o-timepicker__footer\"]);\n\nconst pickerDropdownClasses = defineClasses([\n    \"dropdownClass\",\n    \"o-timepicker__dropdown\",\n]);\n\nconst boxClasses = defineClasses([\"boxClass\", \"o-timepicker__box\"]);\nconst boxClassBind = computed(() => getActiveClasses(boxClasses));\n\nconst selectSelectClasses = defineClasses([\n    \"selectClasses.selectClass\",\n    \"o-timepicker__select\",\n]);\n\nconst selectPlaceholderClasses = defineClasses([\n    \"selectClasses.placeholderClass\",\n    \"o-timepicker__select-placeholder\",\n]);\n\nconst selectBind = computed(() => ({\n    \"select-class\": getActiveClasses(selectSelectClasses),\n    \"placeholder-class\": getActiveClasses(selectPlaceholderClasses),\n    ...props.selectClasses,\n}));\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: () => pickerRef.value?.focus(), value: vmodel });\n</script>\n\n<template>\n    <OPickerWrapper\n        ref=\"pickerComponent\"\n        v-model:active=\"isActive\"\n        :value=\"vmodel\"\n        data-oruga=\"timepicker\"\n        :picker-props=\"props\"\n        :formatter=\"format\"\n        :parser=\"parse\"\n        type=\"time\"\n        :max=\"maxTime\"\n        :min=\"minTime\"\n        :step=\"step\"\n        :root-classes=\"rootClasses\"\n        :dropdown-classes=\"pickerDropdownClasses\"\n        :box-class=\"boxClassBind\"\n        :dtf=\"dtf\"\n        @update:value=\"updateValue\"\n        @focus=\"$emit('focus', $event)\"\n        @blur=\"$emit('blur', $event)\"\n        @invalid=\"$emit('invalid', $event)\"\n        @icon-click=\"$emit('icon-click', $event)\"\n        @icon-right-click=\"$emit('icon-right-click', $event)\">\n        <template v-if=\"$slots.trigger\" #trigger>\n            <!--\n                @slot Override the trigger\n            -->\n            <slot name=\"trigger\" />\n        </template>\n\n        <o-select\n            v-bind=\"selectBind\"\n            v-model=\"hoursSelected\"\n            :options=\"hours\"\n            override\n            :disabled=\"disabled\"\n            placeholder=\"00\"\n            :aria-label=\"ariaSelectHoursLabel\"\n            :use-html5-validation=\"false\"\n            @change=\"onHoursChange($event.target.value)\" />\n\n        <span :class=\"separatorClasses\">{{ hourLiteral }}</span>\n\n        <o-select\n            v-bind=\"selectBind\"\n            v-model=\"minutesSelected\"\n            override\n            :disabled=\"disabled\"\n            placeholder=\"00\"\n            :aria-label=\"ariaSelectMinutesLabel\"\n            :use-html5-validation=\"false\"\n            @change=\"onMinutesChange($event.target.value)\">\n            <option\n                v-for=\"minute in minutes\"\n                :key=\"minute.value\"\n                :value=\"minute.value\"\n                :disabled=\"isMinuteDisabled(minute.value)\">\n                {{ minute.label }}\n            </option>\n        </o-select>\n\n        <template v-if=\"enableSeconds\">\n            <span :class=\"separatorClasses\">{{ minuteLiteral }}</span>\n\n            <o-select\n                v-bind=\"selectBind\"\n                v-model=\"secondsSelected\"\n                override\n                :disabled=\"disabled\"\n                placeholder=\"00\"\n                :aria-label=\"ariaSelectSecondsLabel\"\n                :use-html5-validation=\"false\"\n                @change=\"onSecondsChange($event.target.value)\">\n                <option\n                    v-for=\"second in seconds\"\n                    :key=\"second.value\"\n                    :value=\"second.value\"\n                    :disabled=\"isSecondDisabled(second.value)\">\n                    {{ second.label }}\n                </option>\n            </o-select>\n\n            <span :class=\"separatorClasses\">{{ secondLiteral }}</span>\n        </template>\n\n        <o-select\n            v-if=\"!isHourFormat24\"\n            v-bind=\"selectBind\"\n            v-model=\"meridienSelected\"\n            override\n            :disabled=\"disabled\"\n            :use-html5-validation=\"false\"\n            @change=\"onMeridienChange($event.target.value)\">\n            <option\n                v-for=\"meridien in meridiens\"\n                :key=\"meridien\"\n                :value=\"meridien\"\n                :disabled=\"isMeridienDisabled(meridien)\">\n                {{ meridien }}\n            </option>\n        </o-select>\n\n        <footer v-if=\"$slots.footer\" :class=\"footerClasses\">\n            <!--\n                @slot Define an additional content on footer\n            -->\n            <slot name=\"footer\" />\n        </footer>\n    </OPickerWrapper>\n</template>\n"],"names":["date","_useModel","hours","minutes","seconds","meridiens"],"mappings":"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"}