{"version":3,"file":"oruga.js","sources":["../src/utils/helpers.ts","../src/utils/programmatic.ts","../src/utils/plugins.ts","../src/utils/ssr.ts","../src/utils/config.ts","../src/utils/icons.ts","../src/composables/unrefElement.ts","../src/composables/defineClasses.ts","../src/composables/useEventListener.ts","../src/composables/useMatchMedia.ts","../src/components/field/fieldInjection.ts","../src/composables/useInputHandler.ts","../src/composables/useDebounce.ts","../src/composables/useSequentialId.ts","../src/composables/useParentProvider.ts","../src/composables/useClickOutside.ts","../src/composables/useScrollingParent.ts","../src/composables/useOptions.ts","../src/composables/usePreventScrolling.ts","../src/composables/useConfig.ts","../src/composables/useTrapFocus.ts","../src/components/icon/Icon.vue","../src/components/input/Input.vue","../src/components/dropdown/DropdownItem.vue","../src/components/utils/PositionWrapper.vue","../src/composables/useScrollHelper.ts","../src/composables/useInfiniteScroll.ts","../src/components/dropdown/Dropdown.vue","../src/components/autocomplete/Autocomplete.vue","../src/components/autocomplete/index.ts","../src/components/button/Button.vue","../src/components/button/index.ts","../src/components/carousel/Carousel.vue","../src/components/carousel/CarouselItem.vue","../src/components/carousel/index.ts","../src/components/checkbox/Checkbox.vue","../src/components/checkbox/index.ts","../src/components/collapse/Collapse.vue","../src/components/collapse/index.ts","../src/components/select/Select.vue","../src/components/utils/PickerWrapper.vue","../src/components/datepicker/utils.ts","../src/components/datepicker/useDatepickerMixins.ts","../src/components/datepicker/DatepickerTableRow.vue","../src/components/datepicker/DatepickerTable.vue","../src/components/datepicker/DatepickerMonth.vue","../src/components/datepicker/Datepicker.vue","../src/components/datepicker/index.ts","../src/components/timepicker/useTimepickerMixins.ts","../src/components/timepicker/Timepicker.vue","../src/components/datetimepicker/useDatetimepickerMixin.ts","../src/components/datetimepicker/Datetimepicker.vue","../src/components/datetimepicker/index.ts","../src/components/dropdown/index.ts","../src/components/field/Field.vue","../src/components/field/index.ts","../src/components/icon/index.ts","../src/components/input/index.ts","../src/components/loading/Loading.vue","../src/components/programmatic/InstanceRegistry.ts","../src/components/programmatic/ProgrammaticComponent.ts","../src/components/programmatic/useProgrammatic.ts","../src/components/programmatic/index.ts","../src/components/loading/useLoadingProgrammatic.ts","../src/components/loading/index.ts","../src/components/menu/MenuItem.vue","../src/components/menu/Menu.vue","../src/components/menu/index.ts","../src/components/modal/Modal.vue","../src/components/modal/useModalProgrammatic.ts","../src/components/modal/index.ts","../src/components/notification/Notification.vue","../src/components/notification/NotificationNotice.vue","../src/components/notification/useNotificationProgrammatic.ts","../src/components/notification/index.ts","../src/components/pagination/PaginationButton.vue","../src/components/pagination/Pagination.vue","../src/components/pagination/index.ts","../src/components/radio/Radio.vue","../src/components/radio/index.ts","../src/components/select/index.ts","../src/components/skeleton/Skeleton.vue","../src/components/skeleton/index.ts","../src/components/sidebar/Sidebar.vue","../src/components/sidebar/useSidebarProgrammatic.ts","../src/components/sidebar/index.ts","../src/components/tooltip/Tooltip.vue","../src/components/slider/SliderThumb.vue","../src/components/slider/SliderTick.vue","../src/components/slider/Slider.vue","../src/components/slider/index.ts","../src/components/steps/StepItem.vue","../src/components/steps/Steps.vue","../src/components/steps/index.ts","../src/components/switch/Switch.vue","../src/components/switch/index.ts","../src/components/utils/SlotComponent.ts","../src/components/table/TableMobileSort.vue","../src/components/table/TableColumn.vue","../src/components/table/TablePagination.vue","../src/components/table/Table.vue","../src/components/table/index.ts","../src/components/tabs/TabItem.vue","../src/components/tabs/Tabs.vue","../src/components/tabs/index.ts","../src/components/taginput/Taginput.vue","../src/components/taginput/index.ts","../src/components/timepicker/index.ts","../src/components/tooltip/index.ts","../src/components/upload/Upload.vue","../src/components/upload/index.ts","../src/index.ts"],"sourcesContent":["import { Comment, Fragment, Text } from \"vue\";\nimport type { DeepType } from \"@/types\";\n\n/**\n * +/- function to native math sign\n */\nfunction signPoly(value: number): number {\n    if (value < 0) return -1;\n    return value > 0 ? 1 : 0;\n}\nexport const sign = Math.sign || signPoly;\n\n/**\n * Native modulo bug with negative numbers\n * @param n\n * @param mod\n * @returns {number}\n */\nexport const mod = (n: number, mod: number): number => ((n % mod) + mod) % mod;\n\n/** add a prefix `0` to a 1 digit number */\nexport const pad = (value: number): string => (value < 10 ? \"0\" : \"\") + value;\n\n/**\n * Asserts a value is beetween min and max\n * @param val\n * @param min\n * @param max\n * @returns {number}\n */\nexport function bound(val: number, min: number, max: number): number {\n    return Math.max(min, Math.min(max, val));\n}\n\n/**\n * checks if the value is of type object\n */\nexport const isObject = (value: unknown): value is object =>\n    !!value && typeof value === \"object\" && !Array.isArray(value);\n\n/**\n * checks if the value is of type date\n */\nexport const isDate = (value: unknown): value is Date =>\n    !!value && value instanceof Date && !isNaN(value.getTime());\n\n/**\n * checks if the value is not null or undefined\n */\nexport const isDefined = <T>(value: T | undefined | null): value is T =>\n    value !== null && typeof value !== \"undefined\";\n\n/**\n * Determines if the value of a prop that is either present (true) or not\n * present (undefined). For example, the prop disabled should disable\n * by just existing, but what if it is set to the string \"false\" â€” then it\n * should not be disabled.\n *\n * @param value - Value to check for undefined.\n * @returns boolean\n */\nexport const isTrueish = (value: unknown): boolean =>\n    isDefined(value) && value !== \"false\" && value !== false;\n\nexport const blankIfUndefined = (value: string | null | undefined): string =>\n    isDefined(value) ? value : \"\";\n\nexport const defaultIfUndefined = <T>(\n    value: T | undefined,\n    defaultValue: T,\n): T => (isDefined(value) ? value : defaultValue);\n\nexport const toCssDimension = (\n    width: string | number | undefined,\n    dimension: string = \"px\",\n): string | undefined =>\n    !isDefined(width)\n        ? undefined\n        : isNaN(width as number)\n          ? String(width)\n          : String(width) + dimension;\n\n/**\n * Sort an array by key without mutating original data.\n * Call the user sort function if it was passed.\n */\nexport function sortBy<T>(\n    array: T[],\n    key: string,\n    fn?: (a: T, b: T, asc: boolean) => number,\n    isAsc: boolean = false,\n    mutate: boolean = false,\n): T[] {\n    // Sorting without mutating original data\n    if (fn && typeof fn === \"function\") {\n        return (mutate ? array : [...array]).sort((a, b) => fn(a, b, isAsc));\n    } else {\n        return (mutate ? array : [...array]).sort((a, b) => {\n            // Get nested values from objects\n            let newA: any = isObject(a) ? getValueByPath(a, key) : a;\n            let newB: any = isObject(b) ? getValueByPath(b, key) : b;\n\n            // sort boolean type\n            if (typeof newA === \"boolean\" && typeof newB === \"boolean\") {\n                return isAsc ? (newA > newB ? 1 : -1) : newA > newB ? -1 : 1;\n            }\n\n            if (!newA && newA !== 0) return 1;\n            if (!newB && newB !== 0) return -1;\n            if (newA === newB) return 0;\n\n            newA = typeof newA === \"string\" ? newA.toUpperCase() : newA;\n            newB = typeof newB === \"string\" ? newB.toUpperCase() : newB;\n\n            return isAsc ? (newA > newB ? 1 : -1) : newA > newB ? -1 : 1;\n        });\n    }\n}\n\n/**\n * Deeply check if two values are equal\n */\nexport function isEqual(valueA: unknown, valueB: unknown): boolean {\n    // Check if only one value is empty.\n    if ((!valueA && !!valueB) || (!!valueA && !valueB)) return false;\n\n    // If both objects are identical, return true.\n    if (valueA === valueB) return true;\n\n    // Check if both values are objecs.\n    if (isObject(valueA) && isObject(valueB)) {\n        // Get the keys of both objects.\n        const keys1 = Object.keys(valueA);\n        const keys2 = Object.keys(valueB);\n\n        // Check if the number of keys is the same.\n        if (keys1.length !== keys2.length) return false;\n\n        // Iterate through the keys and compare their values recursively.\n        for (const key of keys1) {\n            const val1 = valueA[key];\n            const val2 = valueB[key];\n            const areObjects = isObject(val1) && isObject(val2);\n            if (\n                (areObjects && !isEqual(val1, val2)) ||\n                (!areObjects && val1 !== val2)\n            )\n                return false;\n        }\n        // If all checks pass, the objects are deep equal.\n        return true;\n    }\n\n    // Check if both values are arrays.\n    if (Array.isArray(valueA) && Array.isArray(valueB)) {\n        // Check if the number of keys is the same.\n        if (valueA.length !== valueB.length) return false;\n        // Check if each value of the array is the same.\n        if (!valueA.every((val, index) => val === valueB[index])) return false;\n        // If all checks pass, the arrays are deep equal.\n        return true;\n    }\n\n    return false;\n}\n\n/**\n * @deprecated not used\n * Returns true if it is a DOM element\n * @source https://stackoverflow.com/questions/384286/how-do-you-check-if-a-javascript-object-is-a-dom-object\n */\nexport function isElement(el: any): el is Element {\n    return typeof HTMLElement === \"object\"\n        ? el instanceof HTMLElement //DOM2\n        : el &&\n              typeof el === \"object\" &&\n              el !== null &&\n              el.nodeType === 1 &&\n              typeof el.nodeName === \"string\";\n}\n\n/**\n * Return display text for an option.\n * If option is an object, get the property from path based on given field, or else just the property.\n * Apply a formatter function to the property if given.\n * Return the display label.\n *\n * @param obj Object to get the label for\n * @param field  Property path of the object to use as display text\n * @param formatter Function to format the property to a string\n */\nexport function getPropertyValue<O, K extends keyof O | string>(\n    obj: O,\n    field?: K,\n    formatter?: (value: DeepType<O, K>, option: O) => string,\n): string {\n    if (!obj) return \"\";\n\n    const property = (\n        field ? getValueByPath<O, K>(obj, field) : obj\n    ) as DeepType<O, K>;\n\n    const label =\n        typeof formatter === \"function\" ? formatter(property, obj) : property;\n\n    return String(label || \"\");\n}\n\n/**\n * Merge function to replace Object.assign with deep merging possibility\n */\nexport function merge(target: any, source: any, deep = false): any {\n    if (!isObject(target) || !isObject(source)) return source;\n    if (!deep) return Object.assign(target, source);\n    else return mergeDeep(target, source);\n}\n\n/**\n * Performs a deep merge of `source` into `target`.\n * Mutates `target` only but not its objects and arrays.\n *\n * @author inspired by [jhildenbiddle](https://stackoverflow.com/a/48218209).\n */\nexport function mergeDeep(target: any, source: any): any {\n    if (!isObject(target) || !isObject(source)) return source;\n\n    Object.getOwnPropertyNames(source).forEach((key) => {\n        const targetValue = target[key];\n        const sourceValue = source[key];\n\n        if (Array.isArray(targetValue) && Array.isArray(sourceValue)) {\n            target[key] = targetValue.concat(sourceValue);\n        } else if (isObject(targetValue) && isObject(sourceValue)) {\n            target[key] = mergeDeep(\n                Object.assign({}, targetValue),\n                sourceValue,\n            );\n        } else {\n            target[key] = sourceValue;\n        }\n    });\n\n    return target;\n}\n\n/**\n * Get a value of an object property/path even if it's nested\n */\nexport function getValueByPath<O, K extends keyof O | string>(\n    obj: O,\n    path: K,\n    defaultValue?: DeepType<O, K>,\n): DeepType<O, K> | undefined {\n    if (!obj || typeof obj !== \"object\" || typeof path !== \"string\")\n        return defaultValue;\n\n    const value: any = path\n        .split(\".\")\n        .reduce((o, i) => (typeof o !== \"undefined\" ? o[i] : undefined), obj);\n\n    return typeof value !== \"undefined\" ? value : defaultValue;\n}\n\n/**\n * Set a value of an object property/path even if it's nested\n */\nexport function setValueByPath(\n    obj: Record<string, any>,\n    path: string,\n    value: any,\n): void {\n    const p = path.split(\".\");\n    if (p.length === 1) {\n        obj[path] = value;\n        return;\n    }\n    const field = p[0];\n    if (typeof obj[field] === \"undefined\") obj[field] = {};\n    return setValueByPath(obj[field], p.slice(1).join(\".\"), value);\n}\n\nexport function removeElement(el: Element): void {\n    if (typeof el.remove !== \"undefined\") {\n        el.remove();\n    } else if (typeof el.parentNode !== \"undefined\" && el.parentNode !== null) {\n        el.parentNode.removeChild(el);\n    }\n}\n\n/**\n * Escape regex characters\n * http://stackoverflow.com/a/6969486\n */\nexport function escapeRegExpChars(value: string): string {\n    if (!value) return value;\n\n    return value.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\n\n/**\n * Remove accents/diacritics in a string\n * https://stackoverflow.com/a/37511463\n */\nexport function removeDiacriticsFromString(value: string): string {\n    if (!value) return value;\n    return value.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n}\n\n/** checks if a vue vnode is empty */\nexport function isVNodeEmpty(vnode): boolean {\n    if (!vnode) return true;\n    if (vnode.type === Comment) return true;\n    if (vnode.type === Text && !vnode.children.trim()) return true;\n    if (vnode.type === Fragment && isVNodeEmpty(vnode.children)) return true;\n    return false;\n}\n\n/**\n * Mobile detection\n * https://www.abeautifulsite.net/detecting-mobile-devices-with-javascript\n */\nexport const isMobileAgent = {\n    Android: (): boolean =>\n        typeof window !== \"undefined\" &&\n        !!window.navigator.userAgent.match(/Android/i),\n    BlackBerry: (): boolean =>\n        typeof window !== \"undefined\" &&\n        !!window.navigator.userAgent.match(/BlackBerry/i),\n    iOS: (): boolean =>\n        typeof window !== \"undefined\" &&\n        !!window.navigator.userAgent.match(/iPhone|iPad|iPod/i),\n    Opera: (): boolean =>\n        typeof window !== \"undefined\" &&\n        !!window.navigator.userAgent.match(/Opera Mini/i),\n    Windows: (): boolean =>\n        typeof window !== \"undefined\" &&\n        !!window.navigator.userAgent.match(/IEMobile/i),\n    any: (): boolean =>\n        isMobileAgent.Android() ||\n        isMobileAgent.BlackBerry() ||\n        isMobileAgent.iOS() ||\n        isMobileAgent.Opera() ||\n        isMobileAgent.Windows(),\n};\n","import { ref } from \"vue\";\n\nexport interface OrugaProgrammatic {\n    [key: string]: Record<string, any>;\n}\n\n/** Oruga object for programmatic components */\nconst oruga = ref<OrugaProgrammatic>({} as OrugaProgrammatic);\n\n/** Add components to the oruga object */\nexport function addProgrammatic(property: string, component: object): void {\n    oruga.value[property] = component;\n}\n\n/** Composable for internal and external usage of programmatic components*/\nexport function useOruga(): OrugaProgrammatic {\n    return oruga.value;\n}\n","import type { App, Component, Plugin, defineComponent } from \"vue\";\nimport { useOruga, addProgrammatic } from \"./programmatic\";\n\nexport let VueInstance: App | undefined;\n\n/** set the global vue instance */\nexport const setVueInstance = (Vue: App): void => {\n    VueInstance = Vue;\n};\n\n/** register a plugin to the vue app instance */\nexport const registerPlugin = (app: App, plugin: Plugin): void => {\n    app.use(plugin);\n};\n\n/** register a component to the vue app instance */\nexport const registerComponent = (\n    app: App,\n    component: ReturnType<typeof defineComponent>, // type Component isn't correct since vue 3.5 any more\n): void => {\n    app.component(component.name, component);\n};\n\n/** register a global programmatic component to the oruga object */\nexport const registerComponentProgrammatic = (\n    app: App,\n    property: string,\n    component: Component,\n): void => {\n    // set global vue instance\n    setVueInstance(app);\n    // use composable for unified access to programmatic oruga object\n    const oruga = useOruga();\n    // add component (manipulates the programmatic oruga object)\n    addProgrammatic(property, component);\n\n    // add provide and $oruga (only needed once)\n    if (!(app._context.provides && app._context.provides.oruga))\n        app.provide(\"oruga\", oruga);\n    if (!app.config.globalProperties.$oruga)\n        app.config.globalProperties.$oruga = oruga;\n};\n","// Polyfills for SSR\n\nexport const isClient = typeof window !== \"undefined\";\nexport const isSSR = typeof window === \"undefined\";\n\nexport const HTMLElement = isSSR ? Object : window.HTMLElement;\nexport const HTMLInputElement = isSSR ? Object : window.HTMLInputElement;\nexport const File = isSSR ? Object : window.File;\n","import { ref, toRaw, type App } from \"vue\";\nimport { getValueByPath, merge, setValueByPath } from \"./helpers\";\nimport { setVueInstance } from \"./plugins\";\nimport { isClient } from \"./ssr\";\nimport type { DeepType, OrugaOptions } from \"@/types\";\n\ndeclare module \"../index\" {\n    interface OrugaProgrammatic {\n        config: typeof ConfigProgrammatic;\n    }\n}\n\nconst globalOptions = ref<OrugaOptions>({\n    iconPack: \"mdi\",\n    useHtml5Validation: true,\n    statusIcon: true,\n    transformClasses: undefined,\n    teleportTarget: () => (isClient ? document.body : \"body\"),\n});\n\nexport const setOptions = (options: OrugaOptions): void => {\n    globalOptions.value = options;\n};\n\nexport const getOptions = (): OrugaOptions => {\n    return Object.assign({}, toRaw(globalOptions.value));\n};\n\nexport const getOption = <K extends keyof OrugaOptions | string>(\n    path: K,\n    defaultValue?: DeepType<OrugaOptions, K>,\n): DeepType<OrugaOptions, K> | undefined => {\n    return getValueByPath(globalOptions.value, path, defaultValue);\n};\n\n/** less type strict version of getOption for component props defaults */\nexport const getDefault = <T>(path: string, defaultValue?: T): T => {\n    return getValueByPath(globalOptions.value, path, defaultValue) as T & {};\n};\n\nexport const setOption = <T>(path: string, value: T): void => {\n    setValueByPath(globalOptions.value, path, value);\n};\n\nexport const ConfigProgrammatic = {\n    getOption,\n    getOptions,\n    setOption,\n    setOptions(options: OrugaOptions): void {\n        setOptions(merge(getOptions(), options, true));\n    },\n};\n\nexport const OrugaConfig = {\n    install(app: App, options?: OrugaOptions): void {\n        // set global vue instance\n        setVueInstance(app);\n        // set options\n        setOptions(merge(getOptions(), options, true));\n    },\n};\n","import { getOption } from \"./config\";\nimport { merge } from \"./helpers\";\n\nexport type IconConfig = {\n    sizes?: { default: string; [key: string]: string };\n    iconPrefix?: string;\n    internalIcons?: Record<string, string>;\n};\n\nconst mdiIcons = {\n    sizes: {\n        default: \"mdi-24px\",\n        small: \"\",\n        medium: \"mdi-36px\",\n        large: \"mdi-48px\",\n    },\n    iconPrefix: \"mdi-\",\n};\n\nconst faIcons = () => {\n    const iconComponent = getOption(\"iconComponent\");\n    const faIconPrefix = iconComponent ? \"\" : \"fa-\";\n    return {\n        sizes: {\n            default: \"\",\n            small: \"sm\",\n            medium: \"lg\",\n            large: \"xl\",\n        },\n        iconPrefix: faIconPrefix,\n        internalIcons: {\n            check: \"check\",\n            information: \"info-circle\",\n            alert: \"exclamation-triangle\",\n            \"alert-circle\": \"exclamation-circle\",\n            \"arrow-up\": \"arrow-up\",\n            \"chevron-right\": \"angle-right\",\n            \"chevron-left\": \"angle-left\",\n            \"chevron-down\": \"angle-down\",\n            \"chevron-up\": \"angle-up\",\n            eye: \"eye\",\n            \"eye-off\": \"eye-slash\",\n            \"caret-down\": \"caret-down\",\n            \"caret-up\": \"caret-up\",\n            \"close-circle\": \"times-circle\",\n            close: \"times\",\n            loading: \"circle-notch\",\n            \"emoticon-sad\": \"frown\",\n        },\n    };\n};\n\nconst getIcons = (): Record<string, IconConfig> => {\n    let icons: Record<string, IconConfig> = {\n        mdi: mdiIcons,\n        fa: faIcons(),\n        fas: faIcons(),\n        far: faIcons(),\n        fad: faIcons(),\n        fab: faIcons(),\n        fal: faIcons(),\n    };\n\n    const customIconPacks = getOption(\"customIconPacks\");\n    if (customIconPacks) icons = merge(icons, customIconPacks, true);\n\n    return icons;\n};\n\nexport default getIcons;\n","import {\n    toValue,\n    type ComponentPublicInstance,\n    type MaybeRefOrGetter,\n    type MaybeRef,\n    type Component,\n} from \"vue\";\n\nexport type MaybeElement =\n    | Element\n    | Document\n    | Window\n    | HTMLElement\n    | SVGElement\n    | Component\n    | ComponentPublicInstance\n    | undefined\n    | null;\n\nexport type UnRefElementReturn<T extends MaybeElement = MaybeElement> =\n    T extends ComponentPublicInstance\n        ? Exclude<MaybeElement, ComponentPublicInstance>\n        : T extends Component\n          ? HTMLElement\n          : T | undefined;\n\n/** Get the dom element of a ref of element or Vue component instance */\nexport function unrefElement<T extends MaybeElement>(\n    elRef: MaybeRefOrGetter<T> | MaybeRef<T>,\n): UnRefElementReturn<T> {\n    const plain = toValue(elRef);\n    return (plain as ComponentPublicInstance)?.$el ?? plain;\n}\n\n/** Resolve an HTML element based on query selector or an explizit dom element */\nexport function resolveElement(\n    target: MaybeRefOrGetter<HTMLElement | string>,\n): HTMLElement | null {\n    const targetQuery = toValue(target);\n    // query element if target is a string\n    if (typeof targetQuery === \"string\")\n        return document.querySelector<HTMLElement>(targetQuery);\n    // else unwrap element\n    else return unrefElement(targetQuery);\n}\n","import {\n    ref,\n    watch,\n    isRef,\n    toValue,\n    getCurrentInstance,\n    effectScope,\n    onScopeDispose,\n    getCurrentScope,\n    type MaybeRefOrGetter,\n    type Ref,\n    type ComponentInternalInstance,\n    type EffectScope,\n} from \"vue\";\n\nimport { getOptions } from \"@/utils/config\";\nimport { isDefined, blankIfUndefined, getValueByPath } from \"@/utils/helpers\";\n\nimport type {\n    ClassBind,\n    ClassDefinition,\n    ComponentClass,\n    ComponentProps,\n    TransformFunction,\n} from \"@/types\";\n\n// named tuple as prop definition\ntype ComputedClass = readonly [\n    className: string,\n    defaultClass: string,\n    suffix?: MaybeRefOrGetter<string | undefined> | null,\n    apply?: MaybeRefOrGetter<boolean> | null,\n];\n\n/** Helper function to get all active classes from a class binding list */\nexport const getActiveClasses = (\n    classes: MaybeRefOrGetter<ClassBind[]>,\n): string[] => {\n    const values = toValue(classes);\n    if (!values) return [];\n    return values.flatMap((bind) =>\n        Object.keys(bind)\n            .filter((key) => key && bind[key])\n            .flatMap((v) => v.split(\" \")),\n    );\n};\n\ntype DefineClassesOptions = {\n    /**\n     * Pass a custom effect scope.\n     * By default a new effect scope is created.\n     * An error will be thrown if no current scope or a custom scope is given.\n     * @default effectScope()\n     */\n    scope?: EffectScope;\n    /**\n     * Pass a custom props object which will be watched on additionaly to the current component instance props.\n     * this will recompute the class bind property when the class property change.\n     * @default vm.proxy?.$props\n     */\n    props?: Record<string, any>;\n};\n\nexport function defineClasses(\n    ...args: [...ComputedClass[], DefineClassesOptions]\n): Ref<ClassBind[]>;\n\nexport function defineClasses(...args: [...ComputedClass[]]): Ref<ClassBind[]>;\n\n/**\n * Calculate dynamic classes based on class definitions\n */\nexport function defineClasses(\n    ...args: ComputedClass[] | [...ComputedClass[], DefineClassesOptions]\n): Ref<ClassBind[]> {\n    // extract last argument if its the option object\n    const options = Array.isArray(args.at(-1))\n        ? undefined\n        : (args.at(-1) as DefineClassesOptions);\n\n    // get class defintion list based on options are given or not\n    const classDefinitions = (\n        Array.isArray(args.at(-1)) ? args : args.slice(0, -1)\n    ) as ComputedClass[];\n\n    // getting a hold of the internal instance of the component in setup()\n    const vm = getCurrentInstance();\n    if (!vm)\n        throw new Error(\n            \"defineClasses must be called within a component setup function.\",\n        );\n    // check if there is no current active effect scope given\n    if (!getCurrentScope() && !options?.scope)\n        throw new Error(\n            \"defineClasses must be called within a current active effect scope.\",\n        );\n\n    // create an effect scope object to capture reactive effects\n    const scope = options?.scope || effectScope();\n\n    // check if there is a current active effect scope\n    if (getCurrentScope())\n        // Registers a dispose callback on the current active effect scope.\n        // The callback will be invoked when the associated effect scope is stopped.\n        onScopeDispose(() => {\n            // stop all effects when appropriate\n            if (scope) scope.stop();\n        });\n\n    // reactive classes container\n    const classes = ref<ClassBind[]>([]);\n\n    classes.value = classDefinitions.map((defintion, index) => {\n        const className = defintion[0];\n        const defaultClass = defintion[1];\n        const suffix = defintion[2];\n        const apply = defintion[3];\n\n        function getClassBind(): ClassBind {\n            // compute class based on definition parameter\n            const computedClass = computeClass(\n                vm!,\n                className,\n                defaultClass,\n                toValue(suffix) || undefined,\n            );\n\n            // if apply is not defined or true\n            const applied = !isDefined(apply) || toValue(apply);\n\n            // return class bind property\n            return { [computedClass]: applied };\n        }\n\n        // run all watcher and computed properties in an active effect scope\n        scope.run(() => {\n            // recompute the class bind property when the class property change\n            watch(\n                [\n                    () => vm.proxy?.$props[className],\n                    () => (options?.props ? options?.props[className] : null),\n                ],\n                () => {\n                    // recompute the class bind property\n                    const classBind = getClassBind();\n                    // update class binding property by class index\n                    classes.value[index] = classBind;\n                },\n            );\n\n            // if suffix is defined, watch suffix changed and recalculate class\n            if (isDefined(suffix) && isRef(suffix)) {\n                watch(suffix, (value, oldValue) => {\n                    // only recompute when value has really changed\n                    if (value === oldValue) return;\n                    // recompute the class bind property\n                    const classBind = getClassBind();\n                    // update class binding property by class index\n                    classes.value[index] = classBind;\n                });\n            }\n\n            // if apply is defined, watch apply changed and update apply state (no need of recalculation here)\n            if (isDefined(apply) && isRef(apply)) {\n                watch(apply, (applied, oldValue) => {\n                    // only change apply when value has really changed\n                    if (applied === oldValue) return;\n                    // get class binding property by class index\n                    const classBind = classes.value[index];\n                    // update the apply class binding state\n                    Object.keys(classBind).forEach(\n                        (key) => (classBind[key] = applied),\n                    );\n                    // update the class binding property by class index\n                    classes.value[index] = classBind;\n                });\n            }\n        });\n\n        // return computed class based on parameter\n        return getClassBind();\n    });\n\n    // return reactive classes\n    return classes;\n}\n\n/**\n * Compute a class by a field name\n */\nfunction computeClass(\n    vm: ComponentInternalInstance,\n    field: string,\n    defaultValue: string,\n    suffix = \"\",\n): string {\n    // get component props\n    const props = getProps(vm);\n\n    const componentKey: string = vm.proxy?.$options.configField;\n    if (!componentKey)\n        throw new Error(\"component must define the 'configField' option.\");\n\n    // get component instance override property\n    const config = props.override === true ? {} : getOptions();\n\n    // --- Classes Definition ---\n\n    // get component config class definition\n    let globalClass: ClassDefinition | undefined =\n        (getValueByPath(\n            config,\n            `${componentKey}.${field}.class`,\n            \"\",\n        ) as ClassDefinition) ||\n        (getValueByPath(\n            config,\n            `${componentKey}.${field}`,\n            \"\",\n        ) as ClassDefinition);\n\n    // get instance class definition\n    let localClass: ComponentClass | undefined = getValueByPath(\n        props,\n        field,\n        \"\",\n    );\n\n    // procsess local instance class\n    if (Array.isArray(localClass)) {\n        localClass = localClass.join(\" \");\n    }\n    if (typeof localClass === \"function\") {\n        const props = getProps(vm);\n        localClass = localClass(suffix, props);\n    } else {\n        localClass = suffixProcessor(localClass as string, suffix);\n    }\n\n    // process global config class\n    if (Array.isArray(globalClass)) {\n        globalClass = globalClass.join(\" \");\n    }\n    if (typeof globalClass === \"function\") {\n        const props = getProps(vm);\n        globalClass = globalClass(suffix, props);\n    } else {\n        globalClass = suffixProcessor(globalClass as string, suffix);\n    }\n\n    // process component instance default value\n    if (defaultValue.includes(\"{*}\")) {\n        defaultValue = defaultValue.replace(\n            /\\{\\*\\}/g,\n            blankIfUndefined(suffix),\n        );\n    } else {\n        defaultValue = defaultValue + blankIfUndefined(suffix);\n    }\n\n    // --- Override Definition ---\n\n    // get instance or global config override property\n    const globalOverride =\n        props.override || getValueByPath(config, \"override\", false);\n    // get component config override property\n    const localOverride = getValueByPath(\n        config,\n        `${componentKey}.override`,\n        globalOverride,\n    );\n    // get component field config override property\n    const overrideClass = getValueByPath(\n        config,\n        `${componentKey}.${field}.override`,\n        localOverride,\n    );\n\n    // --- Define Applied Classes ---\n\n    // if override is false add default value\n    // add global config classes\n    // add instance classes\n    let appliedClasses = (\n        `${!overrideClass ? defaultValue : \"\"} ` +\n        `${blankIfUndefined(globalClass)} ` +\n        `${blankIfUndefined(localClass)}`\n    )\n        .trim()\n        .replace(/\\s\\s+/g, \" \");\n\n    // --- Tranform Classes ---\n\n    // get global config tranform class\n    const globalTransformClasses = getValueByPath(\n        config,\n        \"transformClasses\",\n        undefined,\n    ) as TransformFunction;\n    // get component config tranform class\n    const localTransformClasses = getValueByPath(\n        config,\n        `${componentKey}.transformClasses`,\n        undefined,\n    ) as TransformFunction;\n\n    // apply component local transformclass if available\n    if (localTransformClasses) {\n        appliedClasses = localTransformClasses(appliedClasses);\n    }\n    // else apply global transformclass if available\n    else if (globalTransformClasses) {\n        appliedClasses = globalTransformClasses(appliedClasses);\n    }\n\n    return appliedClasses;\n}\n\nfunction suffixProcessor(input: string, suffix: string): string {\n    return blankIfUndefined(input)\n        .split(\" \")\n        .filter((cls) => cls.length > 0)\n        .map((cls) => cls + blankIfUndefined(suffix))\n        .join(\" \");\n}\n\nconst getProps = (vm: ComponentInternalInstance): ComponentProps => {\n    let props = vm.proxy?.$props || {};\n\n    // get all props which ends with \"Props\", these are compressed parent props\n    // append these parent props as root level prop\n    props = Object.keys(props)\n        .filter((key) => key.endsWith(\"Props\"))\n        .map((key) => props[key])\n        .reduce((a, b) => ({ ...a, ...b }), props);\n\n    return props;\n};\n","import {\n    onMounted,\n    watch,\n    getCurrentScope,\n    onScopeDispose,\n    type MaybeRefOrGetter,\n    type Ref,\n    type Component,\n} from \"vue\";\nimport { isObject } from \"@/utils/helpers\";\nimport { unrefElement } from \"./unrefElement\";\n\nexport type EventTarget = Element | Document | Window | Component;\nexport type EventListenerOptions = AddEventListenerOptions & {\n    /** Register event listener immediate or on mounted hook. */\n    immediate?: boolean;\n    /** Trigger when the listener get registered and removed */\n    trigger?: Ref<boolean>;\n};\n\n/**\n * Register DOM events using addEventListener on mounted, and removeEventListener automatically on unmounted.\n * Adaption of {@link  https://vueuse.org/core/useEventListener}\n *\n * @param element DOM element to add the listener to\n * @param event Event name\n * @param handler Event handler function\n * @param options EventListenerOptions\n * @return stop function\n */\nexport function useEventListener(\n    element: MaybeRefOrGetter<EventTarget>,\n    event: string,\n    handler: (evt?: any) => void,\n    options?: EventListenerOptions,\n): () => void {\n    let cleanup: () => void;\n\n    const register = (): void => {\n        if (!element) return;\n\n        const target = unrefElement(element);\n        // create a clone of options, to avoid it being changed reactively on removal\n        const optionsClone = isObject(options) ? { ...options } : options;\n        // register listener with timeout to prevent animation collision\n        setTimeout(() => {\n            target.addEventListener(event, handler, optionsClone);\n            cleanup = (): void => {\n                target.removeEventListener(event, handler, optionsClone);\n            };\n        });\n    };\n\n    let stopWatch: () => void;\n\n    if (typeof options?.trigger !== \"undefined\") {\n        stopWatch = watch(\n            options.trigger,\n            (value) => {\n                // toggle listener\n                if (value) register();\n                else if (typeof cleanup === \"function\") cleanup();\n            },\n            { flush: \"post\" },\n        );\n    }\n\n    if (options?.immediate) register();\n    else if (getCurrentScope()) {\n        // register listener on mount\n        onMounted(() => {\n            if (\n                typeof options?.trigger === \"undefined\" ||\n                options.trigger.value\n            )\n                register();\n        });\n    }\n\n    const stop = (): void => {\n        // remove listener before unmounting\n        if (typeof stopWatch === \"function\") stopWatch();\n        if (typeof cleanup === \"function\") cleanup();\n    };\n\n    if (getCurrentScope()) onScopeDispose(stop);\n\n    return stop;\n}\n","import { getCurrentInstance, ref, type Ref } from \"vue\";\nimport { getOption } from \"@/utils/config\";\nimport { useEventListener } from \"./useEventListener\";\nimport { isClient } from \"@/utils/ssr\";\n\n/**\n * Checks if the match media is mobile.\n * @param mobileBreakpoint px breakpoint\n */\nexport function useMatchMedia(mobileBreakpoint?: string): {\n    isMobile: Ref<boolean>;\n} {\n    const isMobile = ref(false);\n    const mediaQuery = ref<MediaQueryList>();\n\n    // getting a hold of the internal instance in setup()\n    const vm = getCurrentInstance();\n    if (!vm)\n        throw new Error(\n            \"useMatchMedia must be called within a component setup function.\",\n        );\n    // get component props\n    const props = vm.props;\n\n    const configField = vm.proxy?.$options.configField;\n    if (!configField)\n        throw new Error(\"component must define the 'configField' option.\");\n\n    // get mobileBreakpoint width value\n    let width = props.mobileBreakpoint;\n    if (!width) {\n        const defaultWidth = getOption(\n            `mobileBreakpoint`,\n            mobileBreakpoint || \"1023px\",\n        );\n\n        width = getOption(`${configField}.mobileBreakpoint`, defaultWidth);\n    }\n\n    // define match media query ref\n    mediaQuery.value = isClient\n        ? window.matchMedia(`(max-width: ${width})`)\n        : undefined;\n\n    if (mediaQuery.value) {\n        isMobile.value = mediaQuery.value.matches;\n        useEventListener(mediaQuery.value, \"change\", onMatchMedia);\n    } else {\n        isMobile.value = false;\n    }\n\n    function onMatchMedia(event: any): void {\n        isMobile.value = event.matches;\n    }\n\n    return { isMobile };\n}\n","import {\n    computed,\n    inject,\n    provide,\n    type ComputedRef,\n    type InjectionKey,\n} from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport type { FieldProps } from \"./props\";\n\nexport type FieldData = {\n    $el: Element | null;\n    props: FieldProps;\n    hasInnerField: boolean;\n    variant?: string;\n    message?: string;\n    labelId: string;\n    inputAttrs: object;\n    addInnerField: () => void;\n    setInputId: (value: string) => void;\n    setFocus: (value: boolean) => void;\n    setFilled: (value: boolean) => void;\n    setVariant: (value?: string) => void;\n    setMessage: (value?: string) => void;\n};\n\n/** provide/inject type */\ntype ProvidedField = ComputedRef<FieldData | undefined>;\n\n/** provide/inject key */\nconst $FieldKey: InjectionKey<ProvidedField> = Symbol(\"FielData\");\n\n/**\n * Provide field component data via dependency injection.\n * Provided data is a computed ref to ensure reactivity.\n */\nexport function provideField(data: ProvidedField): void {\n    provide($FieldKey, data);\n}\n\n/** Inject parent field component if used inside one. **/\nexport function injectField(): {\n    parentField: ComputedRef<FieldData | undefined>;\n    statusVariantIcon: ComputedRef<string>;\n    statusVariant: ComputedRef<string | undefined>;\n    statusMessage: ComputedRef<string | undefined>;\n} {\n    const parentField = inject(\n        $FieldKey,\n        computed(() => undefined),\n    );\n\n    /** Get the message prop from parent if it's a Field. */\n    const statusMessage = computed<string | undefined>(() => {\n        if (!parentField?.value?.message) return undefined;\n        return parentField?.value.message;\n    });\n\n    /** Get the type prop from parent if it's a Field. */\n    const statusVariant = computed<string | undefined>(() => {\n        if (!parentField?.value?.variant) return undefined;\n        if (typeof parentField.value.variant === \"string\")\n            return parentField.value.variant;\n        if (Array.isArray(parentField.value.variant)) {\n            for (const key in parentField.value.variant as any) {\n                if (parentField.value.variant[key]) return key;\n            }\n        }\n        return undefined;\n    });\n\n    const statusVariantIconConfig = getOption(\"statusVariantIcon\", {\n        success: \"check\",\n        danger: \"alert-circle\",\n        info: \"information\",\n        warning: \"alert\",\n    });\n\n    /** Icon name based on the variant. */\n    const statusVariantIcon = computed<string>(() => {\n        if (!statusVariant.value || !statusVariantIconConfig) return \"\";\n        return statusVariantIconConfig[statusVariant.value] || \"\";\n    });\n\n    return {\n        parentField,\n        statusVariant,\n        statusVariantIcon,\n        statusMessage,\n    };\n}\n","import {\n    nextTick,\n    ref,\n    computed,\n    triggerRef,\n    watch,\n    watchEffect,\n    type ExtractPropTypes,\n    type MaybeRefOrGetter,\n    type Component,\n} from \"vue\";\nimport { injectField } from \"@/components/field/fieldInjection\";\nimport { unrefElement } from \"./unrefElement\";\nimport { getOption } from \"@/utils/config\";\nimport { isSSR } from \"@/utils/ssr\";\nimport { isDefined } from \"@/utils/helpers\";\n\n// This should cover all types of HTML elements that have properties related to\n// HTML constraint validation, e.g. .form and .validity.\nconst validatableFormElementTypes = isSSR\n    ? []\n    : [\n          HTMLButtonElement,\n          HTMLFieldSetElement,\n          HTMLInputElement,\n          HTMLObjectElement,\n          HTMLOutputElement,\n          HTMLSelectElement,\n          HTMLTextAreaElement,\n      ];\n\nexport type ValidatableFormElement = InstanceType<\n    (typeof validatableFormElementTypes)[number]\n>;\n\nfunction asValidatableFormElement(el: unknown): ValidatableFormElement | null {\n    return validatableFormElementTypes.some((t) => el instanceof t)\n        ? (el as ValidatableFormElement)\n        : null;\n}\n\nconst constraintValidationAttributes = [\n    \"disabled\",\n    \"required\",\n    \"pattern\",\n    \"maxlength\",\n    \"minlength\",\n    \"max\",\n    \"min\",\n    \"step\",\n];\n\n/**\n * Form input handler functionalities\n */\nexport function useInputHandler<T extends ValidatableFormElement>(\n    /** input ref element - can be a html element or a vue component*/\n    inputRef: Readonly<MaybeRefOrGetter<T | Component>>,\n    /** emitted input events */\n    emits: {\n        /** on input focus event */\n        (e: \"focus\", value: Event): void;\n        /** on input blur event */\n        (e: \"blur\", value: Event): void;\n        /** on input invalid event */\n        (e: \"invalid\", value: Event): void;\n    },\n    /** validation configuration props */\n    props: Readonly<\n        ExtractPropTypes<{\n            modelValue?: unknown;\n            useHtml5Validation?: boolean;\n            customValidity?:\n                | string\n                | ((currentValue: any, v: ValidityState) => string);\n        }>\n    >,\n) {\n    // inject parent field component if used inside one\n    const { parentField } = injectField();\n\n    /// Allows access to the native element in cases where it might be missing,\n    /// e.g. because the component hasn't been mounted yet or has been suspended\n    /// by a <KeepAlive>\n    const maybeElement = computed<T | undefined>(() => {\n        const el = unrefElement<Component | HTMLElement>(inputRef);\n        if (!el) return undefined;\n\n        if (el.getAttribute(\"data-oruga-input\"))\n            // if element is the input element\n            return el as T;\n\n        const inputs = el.querySelector(\"[data-oruga-input]\");\n\n        if (!inputs) {\n            console.warn(\n                \"useInputHandler: Underlaying Oruga input component not found\",\n            );\n            return undefined;\n        }\n        // return underlaying the input element\n        return inputs as T;\n    });\n\n    /// Should be used for most accesses to the native element; we generally\n    /// expect it to be present, especially in event handlers.\n    const element = computed(() => {\n        const el = maybeElement.value;\n        if (!el) console.warn(\"useInputHandler: inputRef contains no element\");\n        return el;\n    });\n\n    // --- Input Focus Feature ---\n\n    const isFocused = ref(false);\n\n    /** Focus the underlaying input element. */\n    function setFocus(): void {\n        nextTick(() => {\n            if (element.value) element.value.focus();\n        });\n    }\n\n    /** Click the underlaying input element. */\n    function doClick(): void {\n        nextTick(() => {\n            if (element.value) element.value.click();\n        });\n    }\n\n    /** Unset focused and emit blur event. */\n    function onBlur(event?: Event): void {\n        isFocused.value = false;\n        if (parentField?.value) parentField.value.setFocus(false);\n        emits(\"blur\", event ? event : new Event(\"blur\"));\n        checkHtml5Validity();\n    }\n\n    /** Set focused and emit focus event. */\n    function onFocus(event?: Event): void {\n        isFocused.value = true;\n        if (parentField?.value) parentField.value.setFocus(true);\n        emits(\"focus\", event ? event : new Event(\"focus\"));\n    }\n\n    // --- Validation Feature ---\n\n    const isValid = ref(true);\n\n    function setFieldValidity(variant, message): void {\n        nextTick(() => {\n            if (parentField?.value) {\n                // Set type only if not defined\n                if (!parentField.value.props.variant)\n                    parentField.value.setVariant(variant);\n\n                // Set message only if not defined\n                if (!parentField.value.props.message)\n                    parentField.value.setMessage(message);\n            }\n        });\n    }\n\n    /**\n     * Check HTML5 validation, set isValid property.\n     * If validation fail, send 'danger' type,\n     * and error message to parent if it's a Field.\n     */\n    function checkHtml5Validity(): void {\n        if (!props.useHtml5Validation) return;\n        if (!element.value) return;\n\n        if (element.value.validity.valid) {\n            setFieldValidity(null, null);\n            isValid.value = true;\n        } else {\n            setInvalid();\n            isValid.value = false;\n        }\n    }\n\n    function setInvalid(): void {\n        const variant = \"danger\";\n        const message = element.value?.validationMessage;\n        setFieldValidity(variant, message);\n    }\n\n    function onInvalid(event: Event): void {\n        checkHtml5Validity();\n        const validatable = asValidatableFormElement(event.target);\n\n        if (validatable && parentField?.value && props.useHtml5Validation) {\n            // We provide our own error message on the field, so we should suppress the browser's default tooltip.\n            // We still want to focus the form's first invalid input, though.\n            event.preventDefault();\n\n            let isFirstInvalid = false;\n\n            if (validatable.form != null) {\n                const formElements = validatable.form.elements;\n                for (let i = 0; i < formElements.length; ++i) {\n                    const element = asValidatableFormElement(\n                        formElements.item(i),\n                    );\n                    if (element?.willValidate && !element.validity.valid) {\n                        isFirstInvalid = validatable === element;\n                        break;\n                    }\n                }\n            }\n\n            if (isFirstInvalid) {\n                const fieldElement = parentField.value.$el;\n                const invalidHandler = getOption(\"invalidHandler\");\n                if (!fieldElement) return;\n\n                if (invalidHandler instanceof Function) {\n                    invalidHandler(validatable, fieldElement);\n                } else {\n                    // We'll scroll to put the whole field in view, not just the element that triggered the event,\n                    // which should mean that the message will be visible onscreen.\n                    // scrollIntoViewIfNeeded() is a non-standard method (but a very common extension).\n                    // If we can't use it, we'll just fall back to focusing the field.\n                    const canScrollToField = fieldElement\n                        ? fieldElement.scrollIntoView != undefined\n                        : false;\n                    validatable.focus({ preventScroll: canScrollToField });\n                    if (canScrollToField) {\n                        fieldElement.scrollIntoView({ block: \"nearest\" });\n                    }\n                }\n            }\n        }\n        emits(\"invalid\", event);\n    }\n\n    if (!isSSR) {\n        /**\n         * Provides a way to force the watcher on `updateCustomValidationMessage` to re-run\n         *\n         * There are some cases (e.g. changes to the element's validation attributes) that can\n         * force changes to the element's `validityState`, which isn't a reactive property.\n         * Note that just calling the watcher's internal function directly (outside the watcher)\n         * wouldn't be a complete solution; the watcher would then miss any new reactive dependencies\n         * that show up, e.g. because `props.customValidity` starts taking a branch that the watcher\n         * hasn't seen before.\n         */\n        const forceValidationUpdate = ref(null);\n\n        // Propagate any custom constraint validation message to the underlying DOM element.\n        // Note that using watchEffect will implicitly pick up any reactive dependencies used\n        // inside props.customValidity, which should help the computed message stay up to date.\n        watchEffect((): void => {\n            // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n            forceValidationUpdate.value;\n            if (!(props.useHtml5Validation ?? true)) return;\n\n            const element = maybeElement.value;\n            if (!isDefined(element)) return;\n\n            const validity = props.customValidity ?? \"\";\n            if (typeof validity === \"string\") {\n                element.setCustomValidity(validity);\n            } else {\n                // The custom validation message may depend on `element.validity`,\n                // which isn't a reactive property. `element.validity` depends on\n                // the element's current value and the native constraint validation\n                // attributes. We can use `props.modelValue` as a reasonable proxy\n                // for the DOM element's value, and `props.modelValue` _is_ reactive,\n                // so we can read it to help solve that reactivity problem.\n                element.setCustomValidity(\n                    validity(props.modelValue, element.validity),\n                );\n            }\n\n            // Updates the user-visible validation message if necessary\n            if (!isValid.value) checkHtml5Validity();\n        });\n\n        // Clean up validation state if we stop controlling it.\n        watch(\n            [maybeElement, (): boolean => props.useHtml5Validation ?? true],\n            (newItems, oldItems) => {\n                const newElement = newItems[0];\n                const newUseValidation = newItems[1];\n                const oldElement = oldItems[0];\n                const oldUseValidation = oldItems[1];\n                if (newElement !== oldElement) {\n                    // Since we're no longer managing the element, we might\n                    // as well clean up any custom validity we set up.\n                    oldElement?.setCustomValidity(\"\");\n                } else if (oldUseValidation && !newUseValidation) {\n                    newElement?.setCustomValidity(\"\");\n                }\n            },\n        );\n\n        // Respond to attribute changes that could affect validation messages.\n        //\n        // Technically, having the `required` attribute on one element in a radio button\n        // group affects the validity of the entire group.\n        // See https://html.spec.whatwg.org/multipage/input.html#radio-button-group.\n        // We're not checking for that here because it would require more expensive logic.\n        // Because of that, this will only work properly if the `required` attributes of all radio\n        // buttons in the group are synchronized with each other, which is likely anyway.\n        // (We're also expecting the use of radio buttons with our default validation message handling\n        // to be fairly uncommon because the overall visual experience is clunky with such a configuration.)\n        const onAttributeChange = (): void => {\n            triggerRef(forceValidationUpdate);\n        };\n\n        let validationAttributeObserver: MutationObserver | null = null;\n\n        watch(\n            [\n                maybeElement,\n                isValid,\n                (): boolean => props.useHtml5Validation ?? true,\n                ():\n                    | string\n                    | ((s: ValidityState, v: any) => string)\n                    | undefined => props.customValidity,\n            ],\n            (newData, oldData) => {\n                // Not using destructuring assignment because browser support is just a little too weak at the moment\n                const el = newData[0];\n                const valid = newData[1];\n                const useValidation = newData[2];\n                const functionalValidation = newData[3] instanceof Function;\n                const oldEl = oldData[0];\n\n                const needWatcher =\n                    isDefined(el) &&\n                    useValidation &&\n                    // For inputs known to be invalid, changes in constraint validation properties\n                    // may make it so the field is now valid and the message needs to be hidden.\n                    // For browser-implemented constraint validation (e.g. the `required` attribute),\n                    // we just care about the message displayed to the user, which is hidden for valid inputs\n                    // until the next interaction with the control.\n                    (!valid ||\n                        // For inputs with complex custom validation, any changes to validation-related attributes\n                        // may affect the results of `props.customValidity`.\n                        functionalValidation);\n\n                // Clean up previous state.\n                if (\n                    (!needWatcher || el !== oldEl) &&\n                    validationAttributeObserver != null\n                ) {\n                    // Process any pending events.\n                    if (validationAttributeObserver.takeRecords().length > 0)\n                        onAttributeChange();\n                    validationAttributeObserver.disconnect();\n                }\n\n                // Update the watcher.\n                // Note that this branch is also used for the initial setup of the watcher.\n                // We're assuming that `maybeElement` will start out null when the watcher is created, which will\n                // cause the watcher to be triggered (with `oldEl == undefined`) once the component is mounted.\n                if (needWatcher && isDefined(el) && el !== oldEl) {\n                    if (validationAttributeObserver == null) {\n                        validationAttributeObserver = new MutationObserver(\n                            onAttributeChange,\n                        );\n                    }\n                    validationAttributeObserver.observe(el, {\n                        attributeFilter: constraintValidationAttributes,\n                    });\n\n                    // Note that this doesn't react to changes in the list of ancestors.\n                    // Based on testing, Vue seems to rarely, if ever, re-parent DOM nodes;\n                    // it generally prefers to create new ones under the new parent.\n                    // That means this simpler solution is likely good enough for now.\n                    let ancestor: Node | null = el;\n                    while ((ancestor = ancestor.parentNode)) {\n                        // Form controls can be disabled by their ancestor fieldsets.\n                        if (ancestor instanceof HTMLFieldSetElement) {\n                            validationAttributeObserver.observe(ancestor, {\n                                attributeFilter: [\"disabled\"],\n                            });\n                        }\n                    }\n                }\n            },\n        );\n    }\n\n    return {\n        input: element,\n        isFocused,\n        isValid,\n        setFocus,\n        doClick,\n        onFocus,\n        onBlur,\n        onInvalid,\n        checkHtml5Validity,\n    };\n}\n","/**\n * Debounce a function\n * @param func function to debounce\n * @param wait debounce time to wait\n * @param immediate call immediate\n * @returns function to call\n */\nexport function useDebounce<A extends Array<unknown>>(\n    func: (...args: A) => void,\n    wait: number,\n    immediate?: boolean,\n): (...args: A) => void {\n    let timeout: ReturnType<typeof setTimeout> | undefined;\n    return (...args: A) => {\n        const later = (): void => {\n            timeout = undefined;\n            if (!immediate) func.apply(this, args);\n        };\n        const callNow = immediate && !timeout;\n        if (timeout) clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(this, args);\n    };\n}\n","/** create a unique id sequence */\nexport function useSequentialId(start: number = 0): {\n    nextSequence: () => string;\n    sequence: Readonly<number>;\n} {\n    let sequence = start;\n\n    /** increase the unique id sequence */\n    function nextSequence(): string {\n        return String(sequence++);\n    }\n\n    return {\n        nextSequence,\n        sequence,\n    };\n}\n","import {\n    getCurrentInstance,\n    inject,\n    onUnmounted,\n    provide,\n    ref,\n    watch,\n    type Component,\n    type ComputedRef,\n    type MaybeRefOrGetter,\n    type Ref,\n} from \"vue\";\nimport { unrefElement } from \"./unrefElement\";\nimport { useDebounce } from \"./useDebounce\";\nimport { useSequentialId } from \"./useSequentialId\";\n\nexport type ProviderItem<T = unknown> = {\n    index: number;\n    data?: T;\n    identifier: string;\n};\n\ntype PovidedData<P, I = unknown> = {\n    registerItem: (data?: I) => ProviderItem<I>;\n    unregisterItem: (item: ProviderItem) => void;\n    data?: ComputedRef<P>;\n};\n\ntype ProviderParentOptions<T = unknown> = {\n    /**\n     * Root element of the provider component\n     */\n    rootRef?: MaybeRefOrGetter<HTMLElement | Component | null | undefined>;\n    /**\n     * Override the provide/inject key.\n     * Default is the component configField attribute\n     */\n    key?: string;\n    /**\n     * Additional data provided for the child to the item\n     */\n    data?: ComputedRef<T>;\n};\n\n/**\n * Provide functionalities and data to child components\n * @param options parent provider options\n */\nexport function useProviderParent<ItemData = unknown, ParentData = unknown>(\n    options?: ProviderParentOptions<ParentData>,\n): {\n    childItems: Readonly<Ref<ProviderItem<ItemData>[]>>;\n} {\n    // getting a hold of the internal instance in setup()\n    const vm = getCurrentInstance();\n    if (!vm)\n        throw new Error(\n            \"useProviderChild must be called within a component setup function.\",\n        );\n\n    const configField = vm.proxy?.$options.configField;\n    const key = options?.key || configField;\n\n    const childItems = ref<ProviderItem<ItemData>[]>([]);\n\n    if (options?.rootRef) {\n        // debounced sort function\n        const sortHandler = useDebounce((items: typeof childItems.value) => {\n            const parent = unrefElement(options.rootRef);\n            if (!parent) return;\n\n            // create a list of child item ids\n            const ids = items\n                .map((item) => `[data-id=\"${key}-${item.identifier}\"]`)\n                .join(\",\");\n\n            // query all child items in the order of the DOM appearance\n            const children = parent.querySelectorAll(ids);\n\n            // create a list of ids ordered after the elements in DOM\n            const sortedIds = Array.from(children).map((el) =>\n                el.getAttribute(\"data-id\")?.replace(`${key}-`, \"\"),\n            );\n\n            // update the index attribute of the child items\n            items.forEach(\n                (item) =>\n                    (item.index = sortedIds.indexOf(`${item.identifier}`)),\n            );\n\n            // sort items according to their index position\n            items.sort((a, b) => a.index - b.index);\n        }, 500);\n\n        // when child items are added/removed (no deep change - only list update)\n        // sort them according to their DOM position\n        watch(childItems, sortHandler);\n    }\n\n    const { nextSequence } = useSequentialId(1);\n\n    function registerItem(data?: ItemData): ProviderItem<ItemData> {\n        const index = childItems.value.length;\n        const identifier = nextSequence();\n        const item = { index, data, identifier };\n        // add new item to the child list\n        childItems.value = [\n            ...childItems.value,\n            item,\n        ] as ProviderItem<ItemData>[];\n        return item;\n    }\n\n    function unregisterItem(item: ProviderItem): void {\n        childItems.value = childItems.value.filter((i) => i !== item);\n    }\n\n    /** Provide functionality for child components via dependency injection. */\n    provide<PovidedData<ParentData, ItemData>>(\"$o-\" + key, {\n        registerItem,\n        unregisterItem,\n        data: options?.data,\n    });\n\n    return {\n        childItems: childItems as Ref<ProviderItem<ItemData>[]>,\n    };\n}\n\ntype ProviderChildOptions<T = unknown> = {\n    /**\n     * Override the provide/inject key.\n     * Default is the component configField attribute\n     */\n    key?: string;\n    /**\n     * Does the child need the be below the parent?\n     * @default true\n     */\n    needParent?: boolean;\n    /**\n     * Additional data appended to the item\n     */\n    data?: ComputedRef<T>;\n    /**\n     * Register child on parent\n     * @default true\n     */\n    register?: boolean;\n};\n\nexport function useProviderChild<ParentData, ItemData = unknown>(\n    options: Omit<ProviderChildOptions<ItemData>, \"needParent\"> & {\n        needParent: true;\n    },\n): {\n    parent: Readonly<Ref<ParentData>>;\n    item: Readonly<Ref<ProviderItem<ItemData> | undefined>>;\n};\n\nexport function useProviderChild<ParentData, ItemData = unknown>(\n    options: Omit<ProviderChildOptions<ItemData>, \"needParent\"> & {\n        needParent: false;\n    },\n): {\n    parent: Readonly<Ref<ParentData | undefined>>;\n    item: Readonly<Ref<ProviderItem<ItemData> | undefined>>;\n};\n\nexport function useProviderChild<ParentData, ItemData = unknown>(\n    options: Omit<ProviderChildOptions<ItemData>, \"needParent\"> & {\n        register: false;\n    },\n): {\n    parent: Readonly<Ref<ParentData>>;\n    item: Readonly<Ref<undefined>>;\n};\n\nexport function useProviderChild<ParentData, ItemData = unknown>(\n    options: Omit<ProviderChildOptions<ItemData>, \"needParent\" | \"register\"> & {\n        needParent: true;\n        register: true;\n    },\n): {\n    parent: Readonly<Ref<ParentData>>;\n    item: Readonly<Ref<ProviderItem<ItemData>>>;\n};\n\nexport function useProviderChild<ParentData, ItemData = unknown>(\n    options?: Omit<ProviderChildOptions<ItemData>, \"needParent\" | \"register\">,\n): {\n    parent: Readonly<Ref<ParentData>>;\n    item: Readonly<Ref<ProviderItem<ItemData>>>;\n};\n\n/**\n * Inject functionalities and data from parent components\n * @param options additional options\n */\nexport function useProviderChild<ParentData, ItemData = unknown>(\n    options?: ProviderChildOptions<ItemData>,\n): {\n    parent: Readonly<Ref<ParentData | undefined>>;\n    item: Readonly<Ref<ProviderItem<ItemData> | undefined>>;\n} {\n    options = Object.assign({ needParent: true, register: true }, options);\n\n    // getting a hold of the internal instance in setup()\n    const vm = getCurrentInstance();\n    if (!vm)\n        throw new Error(\n            \"useProviderChild must be called within a component setup function.\",\n        );\n\n    const configField = vm.proxy?.$options.configField;\n    const key = options?.key || configField;\n\n    /** Inject parent component functionality if used inside one **/\n    const parent = inject<\n        PovidedData<ParentData, ComputedRef<ItemData>> | undefined\n    >(\"$o-\" + key, undefined);\n\n    if (options.needParent && !parent)\n        throw new Error(\n            `You should wrap ${vm.proxy?.$options.name} in a ${key} component`,\n        );\n\n    const item = ref<ProviderItem<ItemData>>();\n\n    if (parent && options.register)\n        item.value = parent.registerItem(\n            options?.data,\n        ) as ProviderItem<ItemData>;\n\n    onUnmounted(() => {\n        if (parent && item.value) parent.unregisterItem(item.value);\n    });\n\n    const data = parent?.data || ref();\n\n    return { parent: data, item: item };\n}\n","import { type MaybeRefOrGetter } from \"vue\";\nimport {\n    useEventListener,\n    type EventTarget,\n    type EventListenerOptions,\n} from \"./useEventListener\";\nimport { unrefElement } from \"./unrefElement\";\n\n/**\n * Listen for clicks outside of an element.\n * Adaption of {@link https://vueuse.org/core/onClickOutside}\n *\n * @param elements DOM elements to click outside\n * @param handler Event handler function\n * @param options ClickOutsideOptions\n * @return stop function\n */\nexport function useClickOutside(\n    elements:\n        | MaybeRefOrGetter<EventTarget>\n        | string\n        | (MaybeRefOrGetter<EventTarget> | string)[],\n    handler: (evt: PointerEvent) => void,\n    options?: EventListenerOptions,\n): () => void {\n    if (!window) return () => {};\n\n    // set default options\n    const listenerOptions = Object.assign({ ignore: [] }, options);\n\n    // convert elements to ignore list\n    const ignores = Array.isArray(elements) ? elements : [elements];\n\n    /**\n     * White-listed items that not emit event when clicked.\n     * All children from ignore prop.\n     */\n    const shouldIgnore = (event: PointerEvent): boolean => {\n        return ignores.some((target) => {\n            if (typeof target === \"string\") {\n                return Array.from(\n                    window.document.querySelectorAll(target),\n                ).some(\n                    (el) =>\n                        el === event.target ||\n                        event.composedPath().includes(el),\n                );\n            } else {\n                const el = unrefElement(target);\n                return (\n                    el &&\n                    (event.target === el || event.composedPath().includes(el))\n                );\n            }\n        });\n    };\n\n    function listener(event: PointerEvent): void {\n        if (shouldIgnore(event)) return;\n        handler(event);\n    }\n\n    const stop = useEventListener(window, \"click\", listener, listenerOptions);\n\n    return stop;\n}\n","import { isDefined } from \"@/utils/helpers\";\n\n/**\n * Given an element, returns the element who scrolls it.\n */\nexport function getScrollingParent(target: HTMLElement): HTMLElement | null {\n    if (target.style.position === \"fixed\" || !target)\n        return document.documentElement;\n\n    let isScrollingParent = false;\n    let nextParent = target.parentElement;\n\n    while (!isScrollingParent && isDefined(nextParent)) {\n        if (nextParent === document.documentElement) break;\n\n        const { overflow, overflowY } = getComputedStyle(nextParent);\n        const { scrollHeight, clientHeight } = nextParent; // Both rounded by nature\n\n        isScrollingParent =\n            /(auto|scroll)/.test(`${overflow}${overflowY}`) &&\n            scrollHeight > clientHeight;\n\n        /* ...found it, this one is returned */\n        if (isScrollingParent) break;\n\n        /* ...if not check the next one */\n        nextParent = nextParent.parentElement;\n    }\n\n    return nextParent;\n}\n","import { toValue, type MaybeRefOrGetter } from \"vue\";\nimport { isEqual } from \"@/utils/helpers\";\n\n/**\n * Internal OptionsItem representation object with additional state information.\n *\n * @internal\n */\nexport type OptionsItem<V = unknown> = OptionsPropItem<V> & {\n    /** internal definiton if the element should be hidden */\n    hidden?: boolean;\n    /** internal genereated uniqe option key */\n    key?: string;\n};\n\n/**\n * Options should always be formatted as an array of objects with label and value properties.\n *\n * @public\n */\nexport type OptionsPropItem<V = unknown> = {\n    /** displayed option label */\n    label: string;\n    /** the real option value */\n    value: V;\n    /** additional attributes bound to the option element */\n    attrs?: {\n        disabled?: boolean;\n    } & Record<string, any>;\n    [index: string]: any;\n};\n\n/**\n * The types of options that can be passed to the options prop.\n *\n * @public\n */\nexport type OptionsProp<V = string | number | object> =\n    | (string | number)[]\n    | Record<string | number, string>\n    | OptionsPropItem<V>[];\n\n/**\n * Option groups should always be formatted as an array of objects with group and nested options.\n *\n * @internal\n */\nexport type OptionsGroupItem<V = unknown> = {\n    /** displayed option group label */\n    label?: string;\n    /** the real option group value */\n    value?: V;\n    /** list of options */\n    options: OptionsItem<V>[];\n    /** additional attributes bound to the options grouÃ¼ element */\n    attrs?: Record<string, any>;\n    /** internal definiton if the element should be hidden */\n    hidden?: boolean;\n    /** internal genereated uniqe option key */\n    key?: string;\n};\n\n/**\n * Option groups should always be formatted as an array of objects with group and nested options.\n *\n * @public\n */\nexport type OptionsGroupPropItem<V = unknown> = {\n    /** displayed option group label */\n    label?: string;\n    /** the real option group value */\n    value?: V;\n    /** list of options */\n    options: OptionsProp<V>;\n    /** additional attributes bound to the options grouÃ¼ element */\n    attrs?: Record<string, any>;\n};\n\n/**\n * An array of option items with a group support â€” where the `option` of the\n * groups can be any valid OptionsProp type.\n *\n * @public\n */\nexport type OptionsGroupProp<V = string | number | object> =\n    OptionsGroupPropItem<V>[];\n\n/**\n * The types of options that can be passed to the options prop.\n * An array of option items with a group support â€” where the `option` of the\n * groups can be any valid OptionsProp type.\n *\n * @public\n */\nexport type OptionsPropWithGroups<V = unknown> =\n    | OptionsProp<V>\n    | OptionsGroupProp<V>;\n\n/** Normalized external options prop for internal usage */\ntype NormalizedOptions<V, O extends OptionsPropWithGroups<V> | undefined> =\n    O extends OptionsGroupProp<V>\n        ? OptionsGroupItem<V>[]\n        : O extends OptionsProp<V>\n          ? OptionsItem<V>[]\n          : never[];\n\n/**\n * A function to normalize an array of objects, array of strings, or object of\n * key-values to use an array of objects with value and label properties.\n *\n * @param options - An un-normalized {@link OptionsPropWithGroups}.\n *\n * @returns A list of {@link OptionsItem} | {@link OptionsGroupItem}.\n */\nexport function normalizeOptions<\n    V,\n    O extends OptionsPropWithGroups<V> = OptionsPropWithGroups<V>,\n>(options: O | undefined, uuid: () => string): NormalizedOptions<V, O> {\n    if (!options) return [] as NormalizedOptions<V, O>;\n\n    if (Array.isArray(options))\n        return options.map(\n            (option: O[number]): OptionsItem | OptionsGroupItem => {\n                if (typeof option === \"string\" || typeof option === \"number\")\n                    // create options item from primitive\n                    return {\n                        label: String(option),\n                        value: String(option),\n                        key: uuid(),\n                    } as OptionsItem<V>;\n\n                if (typeof option == \"object\") {\n                    if (\"options\" in option) {\n                        // process group options\n                        const options = normalizeOptions(option.options, uuid);\n                        // create options group item\n                        return {\n                            ...option,\n                            options,\n                            key: uuid(),\n                        } as OptionsGroupItem<V>;\n                    } else if (\"value\" in option) {\n                        // create options item\n                        return {\n                            ...option,\n                            key: uuid(),\n                        } as OptionsItem<V>;\n                    }\n                }\n                return option as OptionsItem<V>;\n            },\n        ) as NormalizedOptions<V, O>;\n\n    return Object.keys(options).map(\n        (value: string): OptionsItem<string> => ({\n            // create option from object key/value\n            label: options[value],\n            value,\n            key: uuid(),\n        }),\n    ) as NormalizedOptions<V, O>;\n}\n\n/**\n * A helper to determine if an option is a group or an option.\n * @param option - An option\n *\n * @returns option is OptionsGroupItem\n */\nexport function isGroupOption(\n    option: Partial<OptionsItem | OptionsGroupItem>,\n): option is OptionsGroupItem {\n    return (\n        option && typeof option === \"object\" && Array.isArray(option.options)\n    );\n}\n\nexport function toOptionsGroup<V>(\n    options: OptionsItem<V>[] | OptionsGroupItem<V>[],\n    key: string,\n): OptionsGroupItem<V>[] {\n    if (!Array.isArray(options)) return [];\n\n    const isGroup = options.some((option) => isGroupOption(option));\n\n    // if options are already a list options do nothing\n    if (isGroup) return [...options] as OptionsGroupItem<V>[];\n\n    // create a list with a single group\n    return [{ options, key }] as OptionsGroupItem<V>[];\n}\n\nexport function toOptionsList<V>(\n    options: MaybeRefOrGetter<OptionsGroupItem<V>[]>,\n): OptionsItem<V>[] {\n    if (!Array.isArray(toValue(options))) return [];\n\n    return toValue(options).reduce((list, group) => {\n        list.push(...group.options);\n        return list;\n    }, [] as OptionsItem<V>[]);\n}\n\n/**\n * Applies an filter function for a list of options {@link OptionsItem | OptionsGroupItem}.\n * Options are filtered by setting the hidden attribute.\n * The options reactivity is not triggered by this.\n * @param options - Options to filter\n * @param filter - filter function\n */\nexport function filterOptionsItems<V>(\n    options: MaybeRefOrGetter<OptionsItem<V>[] | OptionsGroupItem<V>[]>,\n    filter: (option: OptionsItem<V>, index: number) => boolean,\n): void {\n    toValue(options).forEach(\n        (option: OptionsItem<V> | OptionsGroupItem<V>, idx: number) => {\n            if (isGroupOption(option)) {\n                filterOptionsItems(option.options, filter);\n                // hide the whole group if every group options is hidden\n                option.hidden = option.options.every((option) => option.hidden);\n            } else {\n                // hide the option if filtered\n                option.hidden = filter(option, idx);\n            }\n        },\n    );\n}\n\n/**\n * Checks if no options are given or every existing options are hidden.\n * @param options - A list of {@link OptionsItem | OptionsGroupItem} to check for a given value\n *\n * @returns boolean\n */\nexport function checkOptionsEmpty(\n    options: MaybeRefOrGetter<OptionsItem[] | OptionsGroupItem[]>,\n): boolean {\n    // check if options are empty\n    if (!Array.isArray(toValue(options))) return true;\n\n    return toValue(options).every((option: OptionsItem | OptionsGroupItem) => {\n        if (isGroupOption(option))\n            // check if every options are hidden\n            return checkOptionsEmpty(option.options);\n        // check if option is hidden\n        else return !isOptionViable(option);\n    });\n}\n\n/**\n * Given an list of {@link OptionsItem | OptionsGroupItem}, find the option item with the given value.\n *\n * @param options - A list of {@link OptionsItem | OptionsGroupItem} to check for a given value\n * @param value - The value to check\n *\n * @returns {@link OptionsItem}\n */\nexport function findOption<V>(\n    options:\n        | MaybeRefOrGetter<OptionsItem<V>[]>\n        | MaybeRefOrGetter<OptionsGroupItem<V>[]>,\n    value: MaybeRefOrGetter<V>,\n): OptionsItem<V> | undefined {\n    if (!Array.isArray(toValue(options))) return undefined;\n\n    for (const option of toValue(options)) {\n        if (typeof option !== \"object\" && option) continue;\n        if (isGroupOption(option)) {\n            // option in group\n            const found = findOption(option.options, value);\n            if (found !== undefined) return found;\n        }\n        // check if option has value\n        else if (isEqual(toValue(value), option.value)) return option;\n    }\n\n    return undefined;\n}\n\n/**\n * Given an options list, find the first value.\n * @param options - An options list (with groups)\n */\nexport function firstViableOption<V>(\n    options:\n        | MaybeRefOrGetter<OptionsItem<V>[]>\n        | MaybeRefOrGetter<OptionsGroupItem<V>[]>,\n): OptionsItem<V> | undefined {\n    if (!Array.isArray(toValue(options))) return undefined;\n\n    for (const option of toValue(options)) {\n        if (typeof option !== \"object\" && option) continue;\n        if (isGroupOption(option)) {\n            // option in group\n            const found = firstViableOption(option.options);\n            if (found !== undefined) return found;\n        }\n        // check if option is viable\n        else if (isOptionViable(option)) return option;\n    }\n\n    return undefined;\n}\n\nexport function isOptionViable(option: MaybeRefOrGetter<OptionsItem>): boolean {\n    return !toValue(option).hidden && !toValue(option).attrs?.disabled;\n}\n","import {\n    computed,\n    onBeforeUnmount,\n    ref,\n    toValue,\n    type MaybeRefOrGetter,\n} from \"vue\";\n\nimport { isClient } from \"@/utils/ssr\";\nimport { defineClasses, getActiveClasses } from \"./defineClasses\";\n\n/**\n * Prevent the background from scrolling if toggled.\n * Adds `clipped` or `keeped` class to the body.\n * True, alias `clip` removes the body scrollbar.\n * False, alias `keep` makes a non scrollable scrollbar to avoid shifting background, but will set body to position fixed, might break some layouts.\n * @param clipScroll clip scrollbar or not\n */\nexport function usePreventScrolling(\n    clipScroll: MaybeRefOrGetter<boolean>,\n): (active: boolean) => void {\n    const scrollClipClasses = defineClasses([\n        \"scrollClipClass\",\n        \"o-scroll-clip\",\n    ]);\n    const scrollKeepClasses = defineClasses([\n        \"scrollKeepClass\",\n        \"o-scroll-keep\",\n    ]);\n\n    const scrollClass = computed(() =>\n        getActiveClasses(\n            toValue(clipScroll)\n                ? scrollClipClasses.value\n                : scrollKeepClasses.value,\n        ),\n    );\n\n    const savedScrollTop = ref<number>();\n\n    // reset scroll\n    onBeforeUnmount(() => toggleScroll(false));\n\n    function toggleScroll(active: boolean): void {\n        if (!isClient) return;\n        if (!scrollClass.value) return;\n\n        savedScrollTop.value = savedScrollTop.value\n            ? savedScrollTop.value\n            : document.documentElement.scrollTop;\n\n        if (active) document.body.classList.add(...scrollClass.value);\n        else document.body.classList.remove(...scrollClass.value);\n\n        if (!toValue(clipScroll)) {\n            if (active) {\n                document.body.style.top = `-${savedScrollTop.value}px`;\n            } else {\n                document.documentElement.scrollTop = savedScrollTop.value;\n                document.body.style.top = \"\";\n                savedScrollTop.value = undefined;\n            }\n        }\n    }\n\n    return toggleScroll;\n}\n","import { toValue } from \"vue\";\nimport { getOption } from \"@/utils/config\";\n\n/** get the root config `teleportTarget` */\nexport function useTeleportDefault(): HTMLElement | string {\n    const option = getOption(\"teleportTarget\", \"body\");\n    return toValue(option) as HTMLElement | string;\n}\n","/*****************************\n * vue v-trap-focus directive\n *****************************/\n\nimport type { DirectiveHook, ObjectDirective } from \"vue\";\n\nfunction findFocusable(element: HTMLElement): NodeListOf<HTMLElement> | null {\n    if (!element) return null;\n    return element.querySelectorAll(`a[href]:not([tabindex=\"-1\"]),\n                                 area[href],\n                                 input:not([disabled]):not([type=\"hidden\"]),\n                                 select:not([disabled]),\n                                 textarea:not([disabled]),\n                                 button:not([disabled]),\n                                 iframe,\n                                 object,\n                                 embed,\n                                 *[tabindex]:not([tabindex=\"-1\"]):not([disabled]),\n                                 *[contenteditable]`);\n}\n\nexport function useTrapFocus(): {\n    /** vue directive - trap focus on the current element */\n    vTrapFocus: ObjectDirective<HTMLElement>;\n} {\n    /** keydown event, which compares event target with trap element */\n    let onKeyDown: ((event: KeyboardEvent) => void) | null = null;\n\n    function applyHandler(el: HTMLElement, value: boolean): void {\n        if (value) {\n            // move focus inside the root element\n            el.focus({ preventScroll: true });\n\n            // set keydown event listener\n            if (typeof onKeyDown === \"function\")\n                el.addEventListener(\"keydown\", onKeyDown);\n        } else {\n            // remove keydown event listener\n            if (typeof onKeyDown === \"function\")\n                el.removeEventListener(\"keydown\", onKeyDown);\n        }\n    }\n\n    const bind: DirectiveHook<HTMLElement> = (el, { value }) => {\n        // create onKeyDown event listener\n        onKeyDown = (event: KeyboardEvent): void => {\n            const target = event.target as HTMLElement;\n            if (!target) return;\n\n            // Need to get focusable each time since it can change between key events\n            // ex. changing month in a datepicker\n            const focusable = findFocusable(el);\n            if (!focusable?.length) return;\n\n            const firstFocusable = focusable[0];\n            const lastFocusable = focusable[focusable.length - 1];\n\n            if (\n                target === firstFocusable &&\n                event.shiftKey &&\n                event.key === \"Tab\"\n            ) {\n                // prevent moving focus outside by setting the focus to last focusable element\n                event.preventDefault();\n                lastFocusable.focus();\n            } else if (\n                target === lastFocusable &&\n                !event.shiftKey &&\n                event.key === \"Tab\"\n            ) {\n                // prevent moving focus outside by setting the focus to first focusable element\n                event.preventDefault();\n                firstFocusable.focus();\n            }\n        };\n\n        applyHandler(el, value);\n    };\n\n    /** cleanup on unbind */\n    const unbind: DirectiveHook = (el) => {\n        // remove handler\n        applyHandler(el, false);\n        onKeyDown = null;\n    };\n\n    const update: DirectiveHook<HTMLElement> = (el, { value }) => {\n        // update handlers based on binding\n        applyHandler(el, value);\n    };\n\n    return {\n        vTrapFocus: {\n            mounted: bind,\n            beforeUnmount: unbind,\n            updated: update,\n        },\n    };\n}\n","<script setup lang=\"ts\">\nimport { computed } from \"vue\";\n\nimport { getDefault } from \"@/utils/config\";\nimport getIcons from \"@/utils/icons\";\nimport { defineClasses } from \"@/composables\";\n\nimport type { IconProps } from \"./props\";\n\n/**\n * Icons take an important role of any application.\n * @displayName Icon\n * @style _icon.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OIcon\",\n    configField: \"icon\",\n});\n\nconst props = withDefaults(defineProps<IconProps>(), {\n    override: undefined,\n    icon: undefined,\n    component: () => getDefault(\"iconComponent\"),\n    pack: () => getDefault(\"iconPack\", \"mdi\"),\n    variant: () => getDefault(\"icon.variant\"),\n    size: () => getDefault(\"icon.size\"),\n    customSize: undefined,\n    customClass: undefined,\n    clickable: false,\n    spin: false,\n    rotation: undefined,\n    both: false,\n});\n\nconst rootStyle = computed(() => {\n    const style = {};\n    if (props.rotation) {\n        style[\"transform\"] = `rotate(${props.rotation}deg)`;\n    }\n    return style;\n});\n\nconst iconConfig = computed(() => getIcons()[props.pack]);\n\nconst iconPrefix = computed(() =>\n    iconConfig.value?.iconPrefix ? iconConfig.value.iconPrefix : \"\",\n);\n\nconst customSizeByPack = computed(() => {\n    if (iconConfig.value?.sizes) {\n        if (props.size && iconConfig.value.sizes[props.size] !== undefined) {\n            return iconConfig.value.sizes[props.size];\n        } else if (iconConfig.value.sizes.default) {\n            return iconConfig.value.sizes.default;\n        }\n    }\n    return null;\n});\n\n/**\n * Internal icon name based on the pack.\n * If pack is 'fa', gets the equivalent FA icon name of the MDI,\n * internal icons are always MDI.\n */\nconst computedIcon = computed(\n    () => `${iconPrefix.value}${getEquivalentIconOf(props.icon)}`,\n);\n\nconst computedSize = computed(() => props.customSize || customSizeByPack.value);\n\nconst computedVariant = computed(() => {\n    if (!props.variant) return;\n    let newVariant = \"\";\n    if (typeof props.variant === \"string\") {\n        newVariant = props.variant;\n    } else {\n        newVariant = Object.keys(props.variant).filter(\n            (key) => props.variant[key],\n        )[0];\n    }\n    return newVariant;\n});\n\n/** Equivalent icon name of the MDI. */\nfunction getEquivalentIconOf(value): string {\n    // Only transform the class if the both prop is set to true\n    if (!props.both) return value;\n    if (\n        iconConfig.value?.internalIcons &&\n        iconConfig.value?.internalIcons[value]\n    )\n        return iconConfig.value.internalIcons[value];\n    return value;\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-icon\"],\n    [\n        \"clickableClass\",\n        \"o-icon--clickable\",\n        null,\n        computed(() => props.clickable),\n    ],\n    [\"spinClass\", \"o-icon--spin\", null, computed(() => props.spin)],\n    [\n        \"sizeClass\",\n        \"o-icon--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\n        \"variantClass\",\n        \"o-icon--\",\n        computedVariant,\n        computed(() => !!computedVariant.value),\n    ],\n);\n</script>\n\n<template>\n    <span data-oruga=\"icon\" :class=\"rootClasses\" :style=\"rootStyle\">\n        <!-- custom icon component -->\n        <component\n            :is=\"component\"\n            v-if=\"component\"\n            :icon=\"[pack, computedIcon]\"\n            :size=\"computedSize\"\n            :class=\"[customClass]\" />\n\n        <!-- native css icon -->\n        <i v-else :class=\"[pack, computedIcon, computedSize, customClass]\" />\n    </span>\n</template>\n","<script setup lang=\"ts\" generic=\"IsNumber extends boolean = false\">\nimport {\n    ref,\n    computed,\n    nextTick,\n    watch,\n    onMounted,\n    useAttrs,\n    useId,\n    useTemplateRef,\n    type StyleValue,\n} from \"vue\";\n\nimport OIcon from \"../icon/Icon.vue\";\n\nimport { getDefault } from \"@/utils/config\";\nimport { isDefined, isTrueish } from \"@/utils/helpers\";\nimport { defineClasses, useDebounce, useInputHandler } from \"@/composables\";\n\nimport { injectField } from \"../field/fieldInjection\";\n\nimport type { InputProps } from \"./props\";\n\n/**\n * Get user Input. Use with Field to access all functionalities.\n * @displayName Input\n * @style _input.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OInput\",\n    configField: \"input\",\n    inheritAttrs: false,\n});\n\ntype ModelValue = InputProps<IsNumber>[\"modelValue\"];\n\nconst props = withDefaults(defineProps<InputProps<IsNumber>>(), {\n    override: undefined,\n    modelValue: undefined,\n    // number: false,\n    type: \"text\",\n    size: () => getDefault(\"input.size\"),\n    variant: () => getDefault(\"input.variant\"),\n    placeholder: undefined,\n    expanded: false,\n    rounded: false,\n    disabled: false,\n    passwordReveal: false,\n    maxlength: undefined,\n    counter: () => getDefault(\"input.counter\", false),\n    autosize: false,\n    iconPack: () => getDefault(\"input.iconPack\"),\n    icon: () => getDefault(\"input.icon\"),\n    iconClickable: false,\n    iconRight: () => getDefault(\"input.iconRight\"),\n    iconRightClickable: false,\n    iconRightVariant: undefined,\n    clearable: () => getDefault(\"input.clearable\", false),\n    clearIcon: () => getDefault(\"input.clearIcon\", \"close-circle\"),\n    statusIcon: () => getDefault(\"statusIcon\", true),\n    debounce: () => getDefault(\"autocomplete.debounce\", 400),\n    autocomplete: () => getDefault(\"input.autocomplete\", \"off\"),\n    id: () => useId(),\n    useHtml5Validation: () => getDefault(\"useHtml5Validation\", true),\n    customValidity: \"\",\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {string | number} updated modelValue prop\n     */\n    \"update:model-value\": [value: ModelValue];\n    /**\n     * on input change event\n     * @param value {string} input value\n     * @param event {Event} native event\n     */\n    input: [value: string, event: Event];\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    focus: [event: Event];\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    blur: [event: Event];\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    invalid: [event: Event];\n    /**\n     * on icon click event\n     * @param event {Event} native event\n     */\n    \"icon-click\": [event: Event];\n    /**\n     * on icon right click event\n     * @param event {Event} native event\n     */\n    \"icon-right-click\": [event: Event];\n}>();\n\n// --- Validation Feature ---\n\nconst inputRef = useTemplateRef<HTMLInputElement>(\"inputElement\");\n\n// use form input functionalities\nconst {\n    checkHtml5Validity,\n    onBlur,\n    onFocus,\n    onInvalid,\n    setFocus,\n    isValid,\n    isFocused,\n} = useInputHandler(inputRef, emits, props);\n\n// inject parent field component if used inside one\nconst { parentField, statusVariant, statusVariantIcon } = injectField();\n\nconst vmodel = defineModel<ModelValue, string, string, ModelValue>({\n    // cast incomming value to string\n    get: (value) => (isDefined(value) ? String(value) : \"\"),\n    // cast outgoing value to number if prop number is true\n    set: (value) =>\n        !isDefined(value)\n            ? value\n            : isTrueish(props.number)\n              ? Number(value)\n              : String(value),\n    default: undefined,\n});\n\n// if `id` is given set as `for` property on o-field wrapper\nif (props.id) parentField?.value?.setInputId(props.id);\n\n/** Get value length */\nconst valueLength = computed(() =>\n    typeof vmodel.value === \"string\" || typeof vmodel.value === \"number\"\n        ? String(vmodel.value).length\n        : 0,\n);\n\nonMounted(() => {\n    /**\n     * When v-model is changed:\n     *  1. Set parent field filled state.\n     *  2. Resize textarea input\n     *  3. Check html5 valdiation\n     */\n    watch(\n        () => vmodel.value,\n        (value) => {\n            if (parentField?.value) parentField.value.setFilled(!!value);\n            if (props.autosize) resize();\n            if (!isValid.value) checkHtml5Validity();\n        },\n        { immediate: true, flush: \"post\" },\n    );\n});\n\nconst height = ref(\"auto\");\n\nfunction resize(): void {\n    height.value = \"auto\";\n    nextTick(() => {\n        if (props.type !== \"textarea\" || !inputRef.value) return;\n        const scrollHeight = inputRef.value.scrollHeight;\n        height.value = scrollHeight + \"px\";\n    });\n}\n\n/** Computed inline styles for autoresize */\nconst computedStyles = computed<StyleValue>(() =>\n    props.type === \"textarea\" && props.autosize\n        ? {\n              resize: \"none\",\n              height: height.value,\n              overflow: \"hidden\",\n          }\n        : {},\n);\n\nlet debouncedInput: ReturnType<typeof useDebounce<Parameters<typeof onInput>>>;\n\nwatch(\n    () => props.debounce,\n    (debounce) => (debouncedInput = useDebounce(onInput, debounce || 0)),\n    { immediate: true },\n);\n\nfunction onInput(event: Event): void {\n    emits(\"input\", vmodel.value, event);\n}\n\nconst placeholderVisible = computed(\n    () => !isDefined(vmodel.value) || vmodel.value === \"\",\n);\n\n// --- Icon Feature ---\n\nconst hasIconRight = computed(() => {\n    return !!(\n        props.passwordReveal ||\n        (props.statusIcon && statusVariantIcon.value) ||\n        (props.clearable && vmodel.value && props.clearIcon) ||\n        props.iconRight\n    );\n});\n\nconst computedIconRight = computed(() => {\n    if (props.passwordReveal) return passwordVisibleIcon.value;\n    else if (props.clearable && vmodel.value && props.clearIcon)\n        return props.clearIcon;\n    else if (props.iconRight) return props.iconRight;\n    return statusVariantIcon.value;\n});\n\nconst computedIconRightVariant = computed(() =>\n    props.passwordReveal || props.iconRight\n        ? props.iconRightVariant || props.variant\n        : statusVariant.value,\n);\n\nfunction iconClick(event: Event): void {\n    emits(\"icon-click\", event);\n    nextTick(() => setFocus());\n}\n\nfunction rightIconClick(event: Event): void {\n    if (props.passwordReveal) togglePasswordVisibility();\n    else if (props.clearable)\n        vmodel.value = (isTrueish(props.number) ? 0 : \"\") as ModelValue;\n    if (props.iconRightClickable) {\n        emits(\"icon-right-click\", event);\n        nextTick(() => setFocus());\n    }\n}\n\n// --- Password Visability Feature ---\n\nconst isPasswordVisible = ref(false);\n\nconst inputType = computed(() => {\n    if (props.passwordReveal)\n        return isPasswordVisible.value ? \"text\" : \"password\";\n    else return props.type;\n});\n\n/** Current password-reveal icon name. */\nconst passwordVisibleIcon = computed(() =>\n    !isPasswordVisible.value ? \"eye\" : \"eye-off\",\n);\n\n/**\n * Toggle the visibility of a password-reveal input\n * by changing the type and focus the input right away.\n */\nfunction togglePasswordVisibility(): void {\n    isPasswordVisible.value = !isPasswordVisible.value;\n    nextTick(() => setFocus());\n}\n\n// --- Computed Component Classes ---\n\nconst attrs = useAttrs();\n\nconst inputBind = computed(() => ({\n    ...parentField?.value?.inputAttrs,\n    ...attrs,\n}));\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-input\"],\n    [\n        \"sizeClass\",\n        \"o-input--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\n        \"variantClass\",\n        \"o-input--\",\n        computed(() => statusVariant.value || props.variant),\n        computed(() => !!statusVariant.value || !!props.variant),\n    ],\n    [\n        \"expandedClass\",\n        \"o-input--expanded\",\n        null,\n        computed(() => props.expanded),\n    ],\n    [\n        \"disabledClass\",\n        \"o-input--disabled\",\n        null,\n        computed(() => props.disabled),\n    ],\n    [\"roundedClass\", \"o-input--rounded\", null, computed(() => props.rounded)],\n    [\"hasIconRightClass\", \"o-input--icon-right\", null, hasIconRight],\n    [\n        \"textareaClass\",\n        \"o-input--textarea\",\n        null,\n        computed(() => props.type === \"textarea\"),\n    ],\n);\n\nconst inputClasses = defineClasses(\n    [\"inputClass\", \"o-input__input\"],\n    [\n        \"iconLeftSpaceClass\",\n        \"o-input__input--iconspace-left\",\n        null,\n        computed(() => !!props.icon),\n    ],\n    [\n        \"iconRightSpaceClass\",\n        \"o-input__input--iconspace-right\",\n        null,\n        hasIconRight,\n    ],\n    [\n        \"placeholderClass\",\n        \"o-input__input--placeholder\",\n        null,\n        placeholderVisible,\n    ],\n);\n\nconst iconLeftClasses = defineClasses([\"iconLeftClass\", \"o-input__icon-left\"]);\n\nconst iconRightClasses = defineClasses([\n    \"iconRightClass\",\n    \"o-input__icon-right\",\n]);\n\nconst counterClasses = defineClasses([\"counterClass\", \"o-input__counter\"]);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: setFocus, value: vmodel });\n</script>\n\n<template>\n    <div data-oruga=\"input\" :class=\"rootClasses\">\n        <o-icon\n            v-if=\"icon\"\n            :class=\"iconLeftClasses\"\n            :clickable=\"iconClickable\"\n            :icon=\"icon\"\n            :pack=\"iconPack\"\n            :size=\"size\"\n            @click=\"iconClick\" />\n\n        <input\n            v-if=\"type !== 'textarea'\"\n            v-bind=\"inputBind\"\n            :id=\"id\"\n            ref=\"inputElement\"\n            v-model=\"vmodel\"\n            :type=\"inputType\"\n            :data-oruga-input=\"inputType\"\n            :class=\"inputClasses\"\n            :maxlength=\"maxlength\"\n            :autocomplete=\"autocomplete\"\n            :placeholder=\"placeholder\"\n            :disabled=\"disabled\"\n            @blur=\"onBlur\"\n            @focus=\"onFocus\"\n            @invalid=\"onInvalid\"\n            @input=\"debouncedInput\" />\n\n        <textarea\n            v-else\n            v-bind=\"inputBind\"\n            :id=\"id\"\n            ref=\"inputElement\"\n            v-model=\"vmodel\"\n            data-oruga-input=\"textarea\"\n            :class=\"inputClasses\"\n            :maxlength=\"maxlength\"\n            :style=\"computedStyles\"\n            :placeholder=\"placeholder\"\n            :disabled=\"disabled\"\n            @blur=\"onBlur\"\n            @focus=\"onFocus\"\n            @invalid=\"onInvalid\"\n            @input=\"debouncedInput\" />\n\n        <o-icon\n            v-if=\"hasIconRight\"\n            :class=\"iconRightClasses\"\n            :clickable=\"passwordReveal || clearable || iconRightClickable\"\n            :icon=\"computedIconRight\"\n            :pack=\"iconPack\"\n            :size=\"size\"\n            :variant=\"computedIconRightVariant\"\n            both\n            @click=\"rightIconClick\" />\n\n        <small\n            v-if=\"maxlength && counter && isFocused && type !== 'number'\"\n            :class=\"counterClasses\">\n            {{ valueLength }} / {{ maxlength }}\n        </small>\n    </div>\n</template>\n","<script setup lang=\"ts\" generic=\"T\">\nimport { useId, computed, useTemplateRef } from \"vue\";\n\nimport { getDefault } from \"@/utils/config\";\nimport { isDefined, isEqual } from \"@/utils/helpers\";\nimport { defineClasses, useProviderChild } from \"@/composables\";\n\nimport type { DropdownComponent, DropdownItemComponent } from \"./types\";\nimport type { DropdownItemProps } from \"./props\";\n\n/**\n * An option item used by the dropdown component.\n * @displayName Dropdown Item\n */\ndefineOptions({\n    isOruga: true,\n    name: \"ODropdownItem\",\n    configField: \"dropdown\",\n});\n\nconst props = withDefaults(defineProps<DropdownItemProps<T>>(), {\n    override: undefined,\n    value: undefined,\n    label: undefined,\n    disabled: false,\n    clickable: true,\n    hidden: false,\n    tag: () => getDefault(\"dropdown.itemTag\", \"div\"),\n});\n\nconst emits = defineEmits<{\n    /**\n     * onclick event\n     * @param value {string | number | object} value prop data\n     * @param event {event} Native Event\n     */\n    click: [value: T, event: Event];\n}>();\n\nconst itemValue = props.value ?? useId();\n\nconst rootRef = useTemplateRef<Element>(\"rootElement\");\n\n// provided data is a computed ref to ensure reactivity\nconst providedData = computed<DropdownItemComponent<T>>(() => ({\n    ...props,\n    $el: rootRef.value,\n    value: itemValue,\n    selectItem,\n}));\n\n/** inject functionalities and data from the parent component */\nconst { parent, item } = useProviderChild<\n    DropdownComponent<T>,\n    DropdownItemComponent<T>\n>({ data: providedData });\n\nconst isClickable = computed(\n    () => !parent.value.disabled && !props.disabled && props.clickable,\n);\n\nconst isSelected = computed(() => {\n    if (!isDefined(parent.value.selected)) return false;\n    if (parent.value.multiple && Array.isArray(parent.value.selected))\n        return parent.value.selected.some((selected: T) =>\n            isEqual(itemValue, selected),\n        );\n    return isEqual(itemValue, parent.value.selected);\n});\n\nconst isFocused = computed(\n    () => item.value.identifier === parent.value.focsuedIdentifier,\n);\n\n/** Click listener, select the item. */\nfunction selectItem(event: Event): void {\n    if (!isClickable.value) return;\n    parent.value.selectItem(item.value, event);\n    emits(\"click\", itemValue as T, event);\n}\n\n/** Hover listener, focus the item. */\nfunction focusItem(): void {\n    parent.value.focusItem(item.value);\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"itemClass\", \"o-dropdown__item\"],\n    [\n        \"itemDisabledClass\",\n        \"o-dropdown__item--disabled\",\n        null,\n        computed(() => parent.value.disabled || props.disabled),\n    ],\n    [\"itemSelectedClass\", \"o-dropdown__item--active\", null, isSelected],\n    [\"itemClickableClass\", \"o-dropdown__item--clickable\", null, isClickable],\n    [\"itemFocusedClass\", \"o-dropdown__item--focused\", null, isFocused],\n);\n</script>\n\n<template>\n    <component\n        :is=\"tag\"\n        :id=\"`${parent.menuId}-${item.identifier}`\"\n        ref=\"rootElement\"\n        data-oruga=\"dropdown-item\"\n        :data-id=\"`dropdown-${item.identifier}`\"\n        :class=\"rootClasses\"\n        :role=\"parent.selectable ? 'option' : 'menuitem'\"\n        :aria-selected=\"parent.selectable ? isSelected : undefined\"\n        :aria-disabled=\"disabled\"\n        @click=\"selectItem\"\n        @mouseenter=\"focusItem\"\n        @keydown.enter=\"selectItem\"\n        @keydown.space=\"selectItem\">\n        <!--\n            @slot Override the label, default is label prop \n        -->\n        <slot>{{ label }}</slot>\n    </component>\n</template>\n","<script setup lang=\"ts\">\nimport {\n    watch,\n    computed,\n    nextTick,\n    onBeforeUnmount,\n    ref,\n    type Component,\n    type PropType,\n} from \"vue\";\nimport { isClient } from \"@/utils/ssr\";\nimport {\n    useTeleportDefault,\n    getScrollingParent,\n    unrefElement,\n} from \"@/composables\";\n\ntype Position = \"top\" | \"bottom\" | \"left\" | \"right\";\n\nconst opposites: Record<Position, Position> = {\n    top: \"bottom\",\n    bottom: \"top\",\n    right: \"left\",\n    left: \"right\",\n};\n\ntype Point = { x: number; y: number };\n\ndefineOptions({ inheritAttrs: false });\n\nconst props = defineProps({\n    teleport: {\n        type: [Boolean, String, Object],\n        required: true,\n    },\n    trigger: {\n        type: Object as PropType<HTMLElement | Component>,\n        default: undefined,\n    },\n    /**\n     * Position of the component relative to the trigger\n     * @values auto, top, bottom, left, right, top-right, top-left, bottom-left, bottom-right\n     */\n    position: {\n        type: String,\n        validator: (value: string) =>\n            [\n                \"auto\",\n                \"top\",\n                \"bottom\",\n                \"left\",\n                \"right\",\n                \"top-right\",\n                \"top-left\",\n                \"bottom-left\",\n                \"bottom-right\",\n            ].includes(value),\n        required: true,\n    },\n    /** Used for calculation position auto */\n    defaultPosition: {\n        type: String as PropType<Position>,\n        validator: (value: string) =>\n            [\"top\", \"bottom\", \"left\", \"right\"].includes(value),\n        default: \"top\",\n    },\n    /** disable the position calculation */\n    disabled: { type: Boolean, default: false },\n    /** update positioning on teleport */\n    disablePositioning: { type: Boolean, default: true },\n});\n\nconst emits = defineEmits<{\n    \"update:position\": [value: string];\n}>();\n\nconst _teleport = computed(() =>\n    typeof props.teleport === \"boolean\"\n        ? { to: useTeleportDefault(), disabled: !props.teleport }\n        : { to: props.teleport, disabled: false },\n);\n\nconst contentRef = ref<HTMLElement | Component>();\n\nfunction setContent<T extends typeof contentRef.value>(el: T): typeof el {\n    contentRef.value = el;\n\n    nextTick(() => {\n        // update positioning\n        updatePositioning();\n        // add handler\n        addHandler();\n    });\n    return el;\n}\n\n// --- Dynamic Positioning Handling Feature ---\n\nconst initialPosition = props.position;\n\nconst scrollingParent = ref<HTMLElement | null>();\nlet resizeObserver: ResizeObserver | undefined;\n\nif (isClient && window.ResizeObserver) {\n    resizeObserver = new window.ResizeObserver(updatePositioning);\n}\n\n// on disable state change update event listener\nwatch(\n    () => props.disabled,\n    () => {\n        if (!props.disabled) addHandler();\n        else removeHandler();\n    },\n    { immediate: true, flush: \"post\" },\n);\n\n// update positioning if props change\nwatch(\n    [\n        () => !!props.trigger,\n        () => props.disablePositioning,\n        () => props.disabled,\n    ],\n    () => updatePositioning(),\n    { immediate: true, flush: \"post\" },\n);\n\n// remove any event listener on unmount\nonBeforeUnmount(() => removeHandler());\n\n/** add event listener */\nfunction addHandler(): void {\n    if (isClient && !scrollingParent.value && contentRef.value) {\n        // get parent container\n        scrollingParent.value = getScrollingParent(unrefElement(contentRef)!);\n        // set event listener\n        if (\n            scrollingParent.value &&\n            scrollingParent.value !== document.documentElement\n        ) {\n            scrollingParent.value.addEventListener(\n                \"scroll\",\n                updatePositioning,\n                { passive: true },\n            );\n            if (window.ResizeObserver && resizeObserver)\n                resizeObserver.observe(scrollingParent.value);\n        } else {\n            document.addEventListener(\"scroll\", updatePositioning, {\n                passive: true,\n            });\n            window.addEventListener(\"resize\", updatePositioning);\n        }\n    }\n}\n\n/** remove event listener */\nfunction removeHandler(): void {\n    if (isClient) {\n        if (window.ResizeObserver && resizeObserver)\n            resizeObserver.disconnect();\n        window.removeEventListener(\"resize\", updatePositioning);\n        document.removeEventListener(\"scroll\", updatePositioning);\n        scrollingParent.value = undefined;\n    }\n}\n\n/** Update the best position set teleport positioning */\nfunction updatePositioning(): void {\n    if (props.disabled) return;\n    let position = props.position;\n    // update position if auto position is enabled\n    if (initialPosition === \"auto\") {\n        // calculate best position\n        position = getAutoPosition();\n        if (position != props.position)\n            // two-way bind updated position\n            emits(\"update:position\", position);\n    }\n    // do not set content position if not teleport enabled\n    if (!props.teleport) return;\n\n    const content = unrefElement(contentRef);\n    const trigger = unrefElement(props.trigger);\n\n    // set content position\n    if (content && trigger) {\n        const rect = trigger.getBoundingClientRect();\n        let top = rect.top + window.scrollY;\n        let left = rect.left + window.scrollX;\n        // define vertical positioning\n        if (position.includes(\"bottom\")) {\n            top += trigger.clientHeight;\n        } else if (position.includes(\"top\")) {\n            top -= content.clientHeight;\n        }\n        // define horizontal positioning\n        if (position === \"left\") {\n            left -= content.clientWidth;\n        } else if (position === \"right\") {\n            left += trigger.clientWidth;\n        } else if (position.includes(\"-right\")) {\n            left += trigger.clientWidth - content.clientWidth;\n        }\n\n        // adjust exact vertical positioning\n        if (position === \"top\" || position === \"bottom\") {\n            left += trigger.clientWidth / 2; //- content.clientWidth / 2;\n        }\n        // adjust exact horizontal positioning\n        if (position === \"left\" || position === \"right\") {\n            top += trigger.clientHeight / 2; // - content.clientHeight / 2;\n        }\n\n        // set style properties\n        if (props.disablePositioning) {\n            content.style.position = \"relative\";\n            content.style.top = `${top}px`;\n            content.style.left = `${left}px`;\n        } else {\n            content.style.position = \"\";\n            content.style.top = \"\";\n            content.style.left = \"\";\n        }\n    }\n}\n\n/** calculate best position if auto */\nfunction getAutoPosition(): string {\n    let bestPosition = props.defaultPosition;\n    if (!props.trigger || !contentRef.value) return bestPosition;\n    if (!scrollingParent.value) return bestPosition;\n\n    // get viewport from container\n    const viewRect = new DOMRect(\n        scrollingParent.value.offsetLeft,\n        scrollingParent.value.offsetTop,\n        scrollingParent.value.clientWidth,\n        scrollingParent.value.clientHeight,\n    );\n\n    const contentRect = unrefElement(contentRef)!.getBoundingClientRect();\n    const triggerRect = unrefElement(props.trigger).getBoundingClientRect();\n\n    // detect auto position\n    const triggerAnchors = anchors(triggerRect);\n    const contentAnchors = anchors(contentRect);\n    const contentRectAtAnchor = (pos: Position) => {\n        const triggerAnchor = triggerAnchors[pos];\n        const contentAnchor = contentAnchors[opposites[pos]];\n        // Translates contentRect so contentAnchor is on top of triggerAnchor\n        // NOTE: this doesn't account for the extra offset that the tooltip arrow provides.\n        // That offset should be small, and it's tricky to get it from the CSS.\n        return new DOMRect(\n            contentRect.x + (triggerAnchor.x - contentAnchor.x),\n            contentRect.y + (triggerAnchor.y - contentAnchor.y),\n            contentRect.width,\n            contentRect.height,\n        );\n    };\n\n    const defaultOpposite = opposites[props.defaultPosition];\n    const crossPosition =\n        props.defaultPosition === \"top\" || props.defaultPosition === \"bottom\"\n            ? \"left\"\n            : \"top\";\n    const crossOpposite = opposites[crossPosition];\n    // In descending order of priority\n    const positions: Position[] = [\n        props.defaultPosition,\n        defaultOpposite,\n        crossPosition,\n        crossOpposite,\n    ];\n    let maxOverlap = 0;\n    for (const position of positions) {\n        const overlap = intersectionArea(\n            viewRect,\n            contentRectAtAnchor(position),\n        );\n        if (overlap > maxOverlap) {\n            maxOverlap = overlap;\n            bestPosition = position;\n        }\n    }\n    return bestPosition;\n}\n\n// --- Helper Functions ---\n\nfunction intersectionArea(a: DOMRect, b: DOMRect): number {\n    const left = Math.max(a.left, b.left);\n    const right = Math.min(a.right, b.right);\n    const top = Math.max(a.top, b.top);\n    const bottom = Math.min(a.bottom, b.bottom);\n    return Math.max(right - left, 0) * Math.max(bottom - top, 0);\n}\n\n/**\n * @param rect the bounding rectangle of the trigger element\n * @return the \"anchor points\" (points where the arrow attaches) for each side of the tooltip\n */\nconst anchors = (rect: DOMRect): Record<Position, Point> => ({\n    top: { x: (rect.left + rect.right) * 0.5, y: rect.top },\n    bottom: { x: (rect.left + rect.right) * 0.5, y: rect.bottom },\n    left: { x: rect.left, y: (rect.top + rect.bottom) * 0.5 },\n    right: { x: rect.right, y: (rect.top + rect.bottom) * 0.5 },\n});\n</script>\n\n<template>\n    <Teleport :to=\"_teleport.to\" :disabled=\"_teleport.disabled\">\n        <template v-if=\"_teleport.disabled\">\n            <slot :set-content=\"setContent\" />\n        </template>\n        <template v-else>\n            <div\n                v-bind=\"$attrs\"\n                :style=\"{ position: 'absolute', left: '0px', top: '0px' }\">\n                <slot :set-content=\"setContent\" />\n            </div>\n        </template>\n    </Teleport>\n</template>\n","import type { MaybeRefOrGetter } from \"vue\";\nimport { unrefElement } from \"./unrefElement\";\n\n/** check if element is visible in browser view port */\nexport function isElementInView(\n    elementRef: MaybeRefOrGetter<HTMLElement>,\n): boolean {\n    const element = unrefElement(elementRef);\n    const bounding = element.getBoundingClientRect();\n\n    return (\n        bounding.top >= 0 &&\n        bounding.left >= 0 &&\n        bounding.bottom <=\n            (window.innerHeight || document.documentElement.clientHeight) &&\n        bounding.right <=\n            (window.innerWidth || document.documentElement.clientWidth)\n    );\n}\n\n/** check if an element is currently scrollable */\nexport function isScrollable(\n    elementRef: MaybeRefOrGetter<HTMLElement>,\n): boolean {\n    const element = unrefElement(elementRef);\n    return element && element.clientHeight < element.scrollHeight;\n}\n\n/**\n * ensure a given child element is within the parent's visible scroll area\n * if the child is not visible, scroll the parent\n */\nexport function maintainScrollVisibility(\n    activeElement: MaybeRefOrGetter<HTMLElement>,\n    scrollParent: MaybeRefOrGetter<HTMLElement>,\n): void {\n    const parent = unrefElement(scrollParent);\n    const element = unrefElement(activeElement);\n\n    const { offsetHeight, offsetTop } = element;\n    const { offsetHeight: parentOffsetHeight, scrollTop } = parent;\n\n    const isAbove = offsetTop < scrollTop;\n    const isBelow = offsetTop + offsetHeight > scrollTop + parentOffsetHeight;\n\n    if (isAbove) {\n        parent.scrollTo(0, offsetTop);\n    } else if (isBelow) {\n        parent.scrollTo(0, offsetTop - parentOffsetHeight + offsetHeight);\n    }\n}\n","import { isClient } from \"@/utils/ssr\";\nimport type { MaybeRefOrGetter } from \"vue\";\nimport { useEventListener, type EventTarget } from \"./useEventListener\";\nimport { unrefElement } from \"./unrefElement\";\n\nexport function useInfiniteScroll(\n    elementRef: MaybeRefOrGetter<EventTarget>,\n    onEnd: () => void,\n    onStart: () => void,\n): { checkScroll: () => void } {\n    if (isClient) useEventListener(elementRef, \"scroll\", checkScroll);\n\n    /** Check if the scroll list inside the dropdown reached the top or it's end. */\n    function checkScroll(): void {\n        const element = unrefElement(elementRef);\n        if (!element) return;\n        const trashhold = element.offsetTop;\n        if (element.clientHeight !== element.scrollHeight) {\n            if (\n                Math.ceil(\n                    element.scrollTop + element.clientHeight + trashhold,\n                ) >= element.scrollHeight\n            ) {\n                onEnd();\n            } else if (element.scrollTop <= trashhold) {\n                onStart();\n            }\n        }\n    }\n\n    return { checkScroll };\n}\n","<script setup lang=\"ts\" generic=\"T, IsMultiple extends boolean = false\">\nimport { computed, nextTick, ref, watch, useId, type Component } from \"vue\";\n\nimport ODropdownItem from \"../dropdown/DropdownItem.vue\";\nimport PositionWrapper from \"../utils/PositionWrapper.vue\";\n\nimport { getDefault } from \"@/utils/config\";\nimport { toCssDimension, isMobileAgent, isTrueish, mod } from \"@/utils/helpers\";\nimport { isClient } from \"@/utils/ssr\";\nimport {\n    unrefElement,\n    defineClasses,\n    toOptionsGroup,\n    normalizeOptions,\n    useProviderParent,\n    useMatchMedia,\n    useClickOutside,\n    usePreventScrolling,\n    useSequentialId,\n    useEventListener,\n    type OptionsGroupItem,\n} from \"@/composables\";\n\nimport type {\n    DropdownChildItem,\n    DropdownComponent,\n    DropdownItemComponent,\n} from \"./types\";\nimport type { DropdownProps } from \"./props\";\nimport { injectField } from \"../field/fieldInjection\";\nimport { maintainScrollVisibility } from \"@/composables/useScrollHelper\";\nimport { useInfiniteScroll } from \"@/composables/useInfiniteScroll\";\n\n/**\n * Dropdowns are very versatile, can used as a quick menu or even like a select for discoverable content.\n * @displayName Dropdown\n * @requires ./DropdownItem.vue\n * @style _dropdown.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"ODropdown\",\n    configField: \"dropdown\",\n});\n\ntype ModelValue = DropdownProps<T, IsMultiple>[\"modelValue\"];\n\nconst props = withDefaults(defineProps<DropdownProps<T, IsMultiple>>(), {\n    override: undefined,\n    modelValue: undefined,\n    // multiple: false,\n    options: undefined,\n    active: false,\n    label: undefined,\n    disabled: false,\n    inline: false,\n    selectable: false,\n    keepOpen: () => getDefault(\"dropdown.keepOpen\", false),\n    keepFirst: () => getDefault(\"dropdown.keepFirst\", false),\n    closeOnOutside: () => getDefault(\"dropdown.closeOnOutside\", true),\n    closeOnScroll: () => getDefault(\"dropdown.closeOnScroll\", false),\n    selectOnFocus: () => getDefault(\"dropdown.selectOnFocus\", false),\n    selectOnClose: () => getDefault(\"dropdown.selectOnClose\", false),\n    expanded: false,\n    position: () => getDefault(\"dropdown.position\", \"bottom-left\"),\n    scrollable: false,\n    maxHeight: () => getDefault(\"dropdown.maxHeight\", 200),\n    checkScroll: () => getDefault(\"dropdown.checkScroll\", false),\n    menuId: () => useId(),\n    menuTag: () => getDefault(\"dropdown.menuTag\", \"div\"),\n    triggerTag: () => getDefault(\"dropdown.triggerTag\", \"div\"),\n    triggers: () => getDefault(\"dropdown.triggers\", [\"click\"]),\n    delay: undefined,\n    desktopModal: () => getDefault(\"dropdown.desktopModal\", false),\n    mobileModal: () => getDefault(\"dropdown.mobileModal\", true),\n    mobileBreakpoint: () => getDefault(\"dropdown.mobileBreakpoint\"),\n    animation: () => getDefault(\"dropdown.animation\", \"fade\"),\n    teleport: () => getDefault(\"dropdown.teleport\", false),\n    clipScroll: () => getDefault(\"dropdown.clipScroll\", false),\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {T | T[]} updated modelValue prop\n     */\n    \"update:model-value\": [value: ModelValue];\n    /**\n     * active prop two-way binding\n     * @param value {boolean} updated active prop\n     */\n    \"update:active\": [value: boolean];\n    /**\n     * on select event - fired before update:modelValue\n     * @param value {T} selected value\n     */\n    select: [value: T];\n    /**\n     * @deprecated use update:model-value instead\n     * on change event - fired after update:modelValue\n     * @param value {T | T[]} selected value\n     */\n    change: [value: ModelValue];\n    /**\n     * on open event\n     * @param method {string} open method\n     * @param event {Event} native event\n     */\n    open: [method: string, event: Event];\n    /**\n     * on close event\n     * @param method {string} close method\n     * @param event {Event} native event\n     */\n    close: [method: string, event: Event];\n    /** the list inside the dropdown reached the start */\n    \"scroll-start\": [];\n    /** the list inside the dropdown reached it's end */\n    \"scroll-end\": [];\n}>();\n\nconst triggerRef = ref<HTMLElement>();\nconst menuRef = ref<HTMLElement | Component>();\n\n// provided data is a computed ref to ensure reactivity\nconst provideData = computed<DropdownComponent<T>>(() => ({\n    disabled: props.disabled,\n    multiple: isTrueish(props.multiple),\n    selectable: props.selectable,\n    menuId: props.menuId,\n    selected: vmodel.value,\n    focsuedIdentifier: focusedItem.value?.identifier,\n    selectItem,\n    focusItem,\n}));\n\n/** provide functionalities and data to child item components */\nconst { childItems } = useProviderParent<\n    DropdownItemComponent<T>,\n    DropdownComponent<T>\n>({\n    rootRef: menuRef,\n    data: provideData,\n});\n\n// create a unique id sequence\nconst { nextSequence } = useSequentialId();\n\n/** normalized programamtic options */\nconst groupedOptions = computed<OptionsGroupItem<T>[]>(() => {\n    const normalizedOptions = normalizeOptions<T>(props.options, nextSequence);\n    const groupedOptions = toOptionsGroup<T>(normalizedOptions, nextSequence());\n    return groupedOptions;\n});\n\n/** is any option visible */\nconst isNotEmpty = computed(() => childItems.value.some(isItemViable));\n\n// inject parent field component if used inside one\nconst { parentField } = injectField();\n\n// the selected item value, use v-model to make it two-way binding\nconst vmodel = defineModel<ModelValue>({ default: undefined });\n\n// the active state of the dropdown, use v-model:active to make it two-way binding\nconst isActive = defineModel<boolean>(\"active\", { default: false });\n\n// set field labelId or create a unique label id if a label is given\nconst labelId = props.labelledby ?? parentField.value?.labelId;\n\nconst autoPosition = ref(props.position);\n\n/** update autoPosition on prop change */\nwatch(\n    () => props.position,\n    (v) => (autoPosition.value = v),\n);\n\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\n\n// check if client is mobile native\nconst isMobileNative = isClient && isMobileAgent.any();\n\n// check if should be shown as modal\nconst isModal = computed(\n    () =>\n        !props.inline &&\n        ((isMobile.value && props.mobileModal) ||\n            (!isMobile.value && props.desktopModal)),\n);\n\nconst menuStyle = computed(() => ({\n    maxHeight: props.scrollable ? toCssDimension(props.maxHeight) : null,\n    overflow: props.scrollable ? \"auto\" : null,\n}));\n\nconst hoverable = computed(() => props.triggers.includes(\"hover\"));\n\nconst toggleScroll = usePreventScrolling(props.clipScroll);\n\n// set infinite scroll handler\nif (isClient && props.scrollable && props.checkScroll)\n    useInfiniteScroll(\n        menuRef,\n        () => emits(\"scroll-end\"),\n        () => emits(\"scroll-start\"),\n    );\n\n// set click outside handler\nif (isClient && props.closeOnOutside)\n    useClickOutside([menuRef, triggerRef], onClickedOutside, {\n        trigger: isActive,\n        passive: true,\n    });\n\n// set scroll page event\nif (isClient && props.closeOnScroll)\n    useEventListener(window, \"scroll\", onPageScroll, { passive: true });\n\nwatch(\n    isActive,\n    (value) => {\n        // on active set event handler if not open as modal\n        if (value) {\n            // keep first option always pre-focused\n            if (!props.inline && props.keepFirst && !focusedItem.value)\n                moveFocus(1);\n        }\n        if (isModal.value) toggleScroll(value);\n    },\n    { flush: \"post\" },\n);\n\nwatch(\n    childItems,\n    () => {\n        // change pre-focused element when items change and keepFirst\n        if (isActive.value && !props.inline && props.keepFirst) {\n            focusedItem.value = undefined;\n            moveFocus(1);\n        }\n    },\n    { deep: true, flush: \"post\" },\n);\n\n// #region --- Trigger Handler ---\n\n/** Close dropdown if clicked outside. */\nfunction onClickedOutside(event: Event): void {\n    if (!isActive.value || props.inline) return;\n    if (!props.closeOnOutside) return;\n    close(\"outside\", event);\n}\n\n/** Close dropdown if page get scrolled. */\nfunction onPageScroll(event: Event): void {\n    if (!isActive.value || props.inline) return;\n    if (!props.closeOnScroll) return;\n    close(\"scroll\", event);\n}\n\nfunction onTriggerClick(event: Event): void {\n    // check if is mobile native and hoverable together\n    if (isMobileNative && hoverable.value) toggle(\"click\", event);\n    // check normal click conditions\n    if (!props.triggers.includes(\"click\")) return;\n    toggle(\"click\", event);\n}\n\nfunction onTriggerContextMenu(event: MouseEvent): void {\n    if (!props.triggers.includes(\"contextmenu\")) return;\n    event.preventDefault();\n    open(\"contextmenu\", event);\n}\n\nfunction onTriggerFocus(event: Event): void {\n    if (!props.triggers.includes(\"focus\")) return;\n    open(\"focus\", event);\n}\n\nfunction onTriggerHover(event: Event): void {\n    if (isMobileNative) return;\n    if (!props.triggers.includes(\"hover\")) return;\n    open(\"hover\", event);\n}\n\nfunction onTriggerHoverLeave(event: Event): void {\n    if (isMobileNative) return;\n    if (!props.triggers.includes(\"hover\")) return;\n    close(\"outside\", event);\n}\n\n/** Toggle dropdown if it's not disabled. */\nfunction toggle(method: string, event: Event): void {\n    if (props.disabled) return;\n    if (!isActive.value) open(method, event);\n    else close(method, event);\n}\n\nlet timer: ReturnType<typeof setTimeout> | undefined;\n\nfunction open(method: string, event: Event): void {\n    if (props.disabled) return;\n    if (isActive.value) return;\n    if (props.delay) {\n        timer = setTimeout(() => {\n            isActive.value = true;\n            emits(\"open\", method, event);\n            timer = undefined;\n        }, props.delay);\n    } else {\n        // if not active, toggle after clickOutside event\n        // this fixes toggling programmatic\n        nextTick(() => (isActive.value = true));\n        emits(\"open\", method, event);\n    }\n}\n\nfunction close(method: string, event: Event): void {\n    if (!isActive.value) return;\n    emits(\"close\", method, event);\n\n    // select item when dropdown closed\n    if (props.selectOnClose && focusedItem.value?.data?.value)\n        selectItem(focusedItem.value);\n\n    isActive.value = false;\n    focusedItem.value = undefined;\n    if (timer) clearTimeout(timer);\n}\n\n// #endregion --- Trigger Handler ---\n\n// #region --- Select Feature ---\n\n/**\n * Click listener from DropdownItem.\n *   1. Set new selected item.\n *   2. Update v-model.\n *   3. Close the dropdown.\n */\nfunction selectItem(item: DropdownChildItem<T>, event?: Event): void {\n    const value = item.data!.value!;\n    emits(\"select\", value);\n\n    if (props.selectable) {\n        // set selected option\n        if (isTrueish(props.multiple)) {\n            if (vmodel.value && Array.isArray(vmodel.value)) {\n                if (!vmodel.value.includes(value)) {\n                    // add a value\n                    vmodel.value = [...vmodel.value, value] as ModelValue;\n                } else {\n                    // remove a value\n                    vmodel.value = vmodel.value.filter(\n                        (val) => val !== value,\n                    ) as ModelValue;\n                }\n            } else {\n                // init new value array\n                vmodel.value = [value] as ModelValue;\n            }\n            // emit change after vmodel has changed\n            nextTick(() => emits(\"change\", vmodel.value));\n        } else {\n            if (vmodel.value !== value) {\n                // update a single value\n                vmodel.value = value as ModelValue;\n                // emit change after vmodel has changed\n                nextTick(() => emits(\"change\", vmodel.value));\n            }\n        }\n    }\n\n    triggerRef.value?.focus();\n    if (props.keepOpen || !isActive.value || !event) return;\n    close(\"content\", event);\n}\n\n// #endregion --- Select Feature ---\n\n// #region --- Focus Feature ---\n\nconst focusedItem = ref<DropdownChildItem<T>>();\n\n/** Hover listener from DropdownItem. */\nfunction focusItem(value: DropdownChildItem<T>): void {\n    focusedItem.value = value;\n}\n\n/** Set focus on a tab item. */\nfunction moveFocus(delta: 1 | -1): void {\n    if (!isNotEmpty.value) return;\n    const item = getFirstViableItem(focusedItem.value?.index || 0, delta);\n    setFocus(item);\n}\n\n/** Set focus on a dropdown item. */\nfunction setFocus(item: DropdownChildItem<T>): void {\n    if (props.selectOnFocus && item.data?.value)\n        selectItem(item, new Event(\"focus\"));\n\n    const dropdownMenu = unrefElement(menuRef);\n    const element = unrefElement(item.data?.$el);\n    if (!dropdownMenu || !element) return;\n\n    // set item as focused\n    focusedItem.value = item;\n\n    // scroll item into view\n    maintainScrollVisibility(element, dropdownMenu);\n}\n\nfunction onUpPressed(event: Event): void {\n    if (!isActive.value) return open(\"keydown\", event);\n    moveFocus(-1);\n}\n\nfunction onDownPressed(event: Event): void {\n    if (!isActive.value) return open(\"keydown\", event);\n    moveFocus(1);\n}\n\nfunction onEnter(event: Event): void {\n    if (!isActive.value) return;\n    if (focusedItem.value) {\n        setFocus(focusedItem.value);\n        focusedItem.value.data?.selectItem(event);\n    }\n}\n\n/** Go to the first viable item */\nfunction onHomePressed(event: Event): void {\n    open(\"keydown\", event);\n    if (!isNotEmpty.value) return;\n    const item = getFirstViableItem(0, 1);\n    setFocus(item);\n}\n\n/** Go to the last viable item */\nfunction onEndPressed(event: Event): void {\n    open(\"keydown\", event);\n    if (!isNotEmpty.value) return;\n    const item = getFirstViableItem(childItems.value.length - 1, -1);\n    setFocus(item);\n}\n\nfunction onEscape(event: Event): void {\n    close(\"escape\", event);\n}\n\n/**\n * Get the first 'viable' child, starting at startingIndex and in the direction specified\n * by the boolean parameter forward. In other words, first try to select the child at index\n * startingIndex, and if it is not visible or it is disabled, then go to the index in the\n * specified direction until either returning to startIndex or finding a viable child item.\n */\nfunction getFirstViableItem(\n    startingIndex: number,\n    delta: 1 | -1,\n): DropdownChildItem<T> {\n    let newIndex = mod(\n        focusedItem.value?.index == startingIndex\n            ? startingIndex + delta\n            : startingIndex,\n        childItems.value.length,\n    );\n    for (\n        ;\n        newIndex !== focusedItem.value?.index;\n        newIndex = mod(newIndex + delta, childItems.value.length)\n    ) {\n        // Break if the item at this index is viable (not disabled)\n        if (isItemViable(childItems.value[newIndex])) break;\n    }\n\n    return childItems.value[newIndex];\n}\n\nfunction isItemViable(item: DropdownChildItem<T>): boolean {\n    return !item.data?.disabled && !item.data?.hidden && !!item.data?.clickable;\n}\n\n// #endregion --- Focus Feature ---\n\n// #region --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-dropdown\"],\n    [\n        \"disabledClass\",\n        \"o-dropdown--disabled\",\n        null,\n        computed(() => props.disabled),\n    ],\n    [\n        \"expandedClass\",\n        \"o-dropdown--expanded\",\n        null,\n        computed(() => props.expanded),\n    ],\n    [\"inlineClass\", \"o-dropdown--inline\", null, computed(() => props.inline)],\n    [\"mobileClass\", \"o-dropdown--mobile\", null, isMobile],\n    [\"modalClass\", \"o-dropdown--modal\", null, isModal],\n    [\"hoverableClass\", \"o-dropdown--hoverable\", null, hoverable],\n    [\n        \"positionClass\",\n        \"o-dropdown--position-\",\n        autoPosition,\n        computed(() => !!autoPosition.value),\n    ],\n    [\n        \"activeClass\",\n        \"o-dropdown--active\",\n        null,\n        computed(() => isActive.value || props.inline),\n    ],\n);\n\nconst triggerClasses = defineClasses([\"triggerClass\", \"o-dropdown__trigger\"]);\n\nconst teleportClasses = defineClasses([\n    \"teleportClass\",\n    \"o-dropdown--teleport\",\n    null,\n    computed(() => !!props.teleport),\n]);\n\nconst overlayClasses = defineClasses([\"overlayClass\", \"o-dropdown__overlay\"]);\n\nconst menuClasses = defineClasses(\n    [\"menuClass\", \"o-dropdown__menu\"],\n    [\n        \"menuPositionClass\",\n        \"o-dropdown__menu--\",\n        autoPosition,\n        computed(() => !!autoPosition.value),\n    ],\n    [\n        \"menuActiveClass\",\n        \"o-dropdown__menu--active\",\n        null,\n        computed(() => isActive.value || props.inline),\n    ],\n);\n\n// #endregion --- Computed Component Classes ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ $trigger: triggerRef, $content: menuRef, value: vmodel });\n</script>\n\n<template>\n    <div\n        data-oruga=\"dropdown\"\n        :class=\"rootClasses\"\n        @mouseleave=\"onTriggerHoverLeave\"\n        @focusout=\"onTriggerHoverLeave\">\n        <component\n            :is=\"triggerTag\"\n            v-if=\"!inline\"\n            ref=\"triggerRef\"\n            :class=\"triggerClasses\"\n            :role=\"selectable ? 'combobox' : undefined\"\n            :tabindex=\"disabled ? -1 : null\"\n            :aria-haspopup=\"selectable ? 'listbox' : 'menu'\"\n            :aria-expanded=\"selectable ? isActive : undefined\"\n            :aria-activedescendant=\"\n                focusedItem ? `${menuId}-${focusedItem.identifier}` : undefined\n            \"\n            :aria-disabled=\"disabled\"\n            :aria-controls=\"menuId\"\n            :aria-labelledby=\"selectable ? labelId : undefined\"\n            :aria-label=\"selectable ? ariaLabel : undefined\"\n            @click=\"onTriggerClick\"\n            @contextmenu=\"onTriggerContextMenu\"\n            @mouseenter=\"onTriggerHover\"\n            @focus.capture=\"onTriggerFocus\"\n            @keydown.tab=\"onEscape\"\n            @keydown.escape=\"onEscape\"\n            @keydown.enter=\"onEnter\"\n            @keydown.space=\"onEnter\"\n            @keydown.up.prevent=\"onUpPressed\"\n            @keydown.down.prevent=\"onDownPressed\"\n            @keydown.home.prevent=\"onHomePressed\"\n            @keydown.end.prevent=\"onEndPressed\">\n            <!--\n                @slot Override the trigger element, default is label prop\n                @binding {boolean} active - dropdown active state\n                @binding {T | T[]} value - the selected value\n                @binding {() => void} toggle - toggle dropdown active state\n            -->\n            <slot\n                name=\"trigger\"\n                :active=\"isActive\"\n                :value=\"modelValue\"\n                :toggle=\"onTriggerClick\">\n                {{ label }}\n            </slot>\n        </component>\n\n        <PositionWrapper\n            v-slot=\"{ setContent }\"\n            v-model:position=\"autoPosition\"\n            :teleport=\"teleport\"\n            :class=\"[...rootClasses, ...teleportClasses]\"\n            :trigger=\"triggerRef\"\n            :disabled=\"!isActive\"\n            default-position=\"bottom\"\n            :disable-positioning=\"!isModal\">\n            <transition v-if=\"isModal\" :name=\"animation\">\n                <div\n                    v-show=\"isActive\"\n                    :class=\"overlayClasses\"\n                    tabindex=\"-1\"\n                    @click=\"onClickedOutside\" />\n            </transition>\n\n            <transition :name=\"animation\">\n                <component\n                    :is=\"menuTag\"\n                    v-show=\"(!disabled && isActive) || inline\"\n                    :id=\"menuId\"\n                    :ref=\"(el) => (menuRef = setContent(el))\"\n                    :tabindex=\"inline ? 0 : -1\"\n                    :class=\"menuClasses\"\n                    :style=\"menuStyle\"\n                    :role=\"selectable ? 'listbox' : 'menu'\"\n                    :aria-labelledby=\"labelId\"\n                    :aria-label=\"ariaLabel\"\n                    :aria-hidden=\"!inline && (disabled || !isActive)\"\n                    :aria-multiselectable=\"\n                        selectable ? isTrueish(multiple) : undefined\n                    \"\n                    @keydown.enter.prevent=\"inline && onEnter($event)\"\n                    @keydown.space.prevent=\"inline && onEnter($event)\"\n                    @keydown.up.prevent=\"inline && onUpPressed($event)\"\n                    @keydown.down.prevent=\"inline && onDownPressed($event)\"\n                    @keydown.home.prevent=\"inline && onHomePressed($event)\"\n                    @keydown.end.prevent=\"inline && onEndPressed($event)\">\n                    <!--\n                        @slot Place dropdown items here\n                        @binding {boolean} active - dropdown active state\n                        @binding {number} focusedIndex - index of the focused element\n                        @binding {() => void} toggle - toggle dropdown active state\n                    -->\n                    <slot\n                        :active=\"isActive\"\n                        :focused-index=\"focusedItem?.index\"\n                        :toggle=\"toggle\">\n                        <!--\n                            @slot Place extra `o-dropdown-item` components here, even if you have some options defined by prop\n                        -->\n                        <slot name=\"before\" />\n\n                        <template v-for=\"(group, groupIndex) in groupedOptions\">\n                            <o-dropdown-item\n                                v-if=\"group.label\"\n                                v-show=\"!group.hidden\"\n                                v-bind=\"group.attrs\"\n                                :key=\"group.key\"\n                                :value=\"group.value\"\n                                :hidden=\"group.hidden\"\n                                role=\"presentation\"\n                                :clickable=\"false\">\n                                <!--\n                                    @slot Override the option group\n                                    @binding {object} group - options group\n                                    @binding {number} index - option index\n                                -->\n                                <slot\n                                    v-if=\"$slots.group\"\n                                    name=\"group\"\n                                    :group=\"group.label\"\n                                    :index=\"groupIndex\" />\n                                <span v-else>\n                                    {{ group.label }}\n                                </span>\n                            </o-dropdown-item>\n\n                            <o-dropdown-item\n                                v-for=\"option in group.options\"\n                                v-show=\"!option.hidden\"\n                                v-bind=\"option.attrs\"\n                                :key=\"option.key\"\n                                :value=\"option.value\"\n                                :hidden=\"option.hidden\">\n                                {{ option.label }}\n                            </o-dropdown-item>\n                        </template>\n\n                        <!--\n                            @slot Place extra `o-dropdown-item` components here, even if you have some options defined by prop\n                        -->\n                        <slot name=\"after\" />\n                    </slot>\n                </component>\n            </transition>\n        </PositionWrapper>\n    </div>\n</template>\n","<script setup lang=\"ts\" generic=\"T\">\nimport {\n    computed,\n    ref,\n    watch,\n    useAttrs,\n    useSlots,\n    useId,\n    triggerRef,\n    watchEffect,\n    useTemplateRef,\n    toValue,\n    type Component,\n    type MaybeRefOrGetter,\n} from \"vue\";\n\nimport OInput from \"../input/Input.vue\";\nimport ODropdown from \"../dropdown/Dropdown.vue\";\nimport ODropdownItem from \"../dropdown/DropdownItem.vue\";\n\nimport { getDefault } from \"@/utils/config\";\nimport {\n    defineClasses,\n    normalizeOptions,\n    toOptionsGroup,\n    toOptionsList,\n    findOption,\n    checkOptionsEmpty,\n    filterOptionsItems,\n    useInputHandler,\n    useSequentialId,\n} from \"@/composables\";\n\nimport { injectField } from \"../field/fieldInjection\";\n\nimport type { OptionsItem, OptionsGroupItem } from \"@/types\";\nimport type { AutocompleteProps } from \"./props\";\n\nenum SpecialOption {\n    Header,\n    Footer,\n}\n\n/**\n * Extended input that provide suggestions while the user types.\n * @displayName Autocomplete\n * @style _autocomplete.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OAutocomplete\",\n    configField: \"autocomplete\",\n    inheritAttrs: false,\n});\n\ntype ModelValue = AutocompleteProps<T>[\"modelValue\"];\n\nconst props = withDefaults(defineProps<AutocompleteProps<T>>(), {\n    override: undefined,\n    modelValue: undefined,\n    input: \"\",\n    active: false,\n    options: undefined,\n    filter: undefined,\n    backendFiltering: () => getDefault(\"autocomplete.backendFiltering\", false),\n    type: \"text\",\n    menuTag: () => getDefault(\"autocomplete.menuTag\", \"div\"),\n    itemTag: () => getDefault(\"autocomplete.itemTag\", \"div\"),\n    size: () => getDefault(\"autocomplete.size\"),\n    position: () => getDefault(\"autocomplete.position\", \"auto\"),\n    placeholder: undefined,\n    expanded: false,\n    rounded: false,\n    disabled: false,\n    maxlength: undefined,\n    checkScroll: () => getDefault(\"autocomplete.checkScroll\", false),\n    debounce: () => getDefault(\"autocomplete.debounce\", 400),\n    keepFirst: () => getDefault(\"autocomplete.keepFirst\", false),\n    clearOnSelect: () => getDefault(\"autocomplete.clearOnSelect\", false),\n    openOnFocus: () => getDefault(\"autocomplete.openOnFocus\", false),\n    keepOpen: () => getDefault(\"autocomplete.keepOpen\", false),\n    maxHeight: () => getDefault(\"autocomplete.maxHeight\"),\n    selectOnClose: false,\n    selectableHeader: false,\n    selectableFooter: false,\n    iconPack: () => getDefault(\"autocomplete.iconPack\"),\n    icon: () => getDefault(\"autocomplete.icon\"),\n    iconClickable: false,\n    iconRight: () => getDefault(\"autocomplete.iconRight\"),\n    iconRightClickable: false,\n    iconRightVariant: undefined,\n    clearable: () => getDefault(\"autocomplete.clearable\", false),\n    clearIcon: () => getDefault(\"autocomplete.clearIcon\", \"close-circle\"),\n    statusIcon: () => getDefault(\"statusIcon\", true),\n    desktopModal: () => getDefault(\"dropdown.desktopModal\", false),\n    mobileModal: () => getDefault(\"autocomplete.mobileModal\", false),\n    animation: () => getDefault(\"autocomplete.animation\", \"fade\"),\n    autocomplete: () => getDefault(\"autocomplete.autocomplete\", \"off\"),\n    useHtml5Validation: () => getDefault(\"useHtml5Validation\", true),\n    customValidity: undefined,\n    teleport: () => getDefault(\"autocomplete.teleport\", false),\n    inputClasses: () => getDefault(\"autocomplete.inputClasses\", {}),\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {T} updated modelValue prop\n     */\n    \"update:model-value\": [value: ModelValue];\n    /**\n     * input prop two-way binding\n     * @param value {string} updated input prop\n     */\n    \"update:input\": [value: string];\n    /**\n     * active prop two-way binding\n     * @param value {boolean} updated active prop\n     */\n    \"update:active\": [value: boolean];\n    /**\n     * on input change event\n     * @param value {string} input value\n     * @param event {Event} native event\n     */\n    input: [value: string, event: Event];\n    /**\n     * selected element changed event\n     * @param value {T} selected value\n     */\n    select: [value: ModelValue];\n    /**\n     * header is selected\n     */\n    \"select-header\": [];\n    /**\n     * footer is selected\n     */\n    \"select-footer\": [];\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    focus: [event: Event];\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    blur: [event: Event];\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    invalid: [event: Event];\n    /**\n     * on icon click event\n     * @param event {Event} native event\n     */\n    \"icon-click\": [event: Event];\n    /**\n     * on icon right click event\n     * @param event {Event} native event\n     */\n    \"icon-right-click\": [event: Event];\n    /** the list inside the dropdown reached the start */\n    \"scroll-start\": [];\n    /** the list inside the dropdown reached it's end */\n    \"scroll-end\": [];\n}>();\n\nconst slots = useSlots();\n\n// define as Component to prevent docs memmory overload\nconst inputRef = useTemplateRef<Component>(\"inputComponent\");\n\n// use form input functionalities\nconst { checkHtml5Validity, onInvalid, onFocus, onBlur, isFocused, setFocus } =\n    useInputHandler(inputRef, emits, props);\n\n// inject parent field component if used inside one\nconst { parentField } = injectField();\n\n// the active state of the dropdown, use v-model:active to make it two-way binding\nconst isActive = defineModel<boolean>(\"active\", { default: false });\n\n// the selected value, use v-model to make it two-way binding\nconst selectedValue = defineModel<ModelValue>({ default: undefined });\n\n// the value of the inner input, use v-model:input to make it two-way binding\nconst inputValue = defineModel<string>(\"input\", { default: \"\" });\n\n/** create a unique id for the menu */\nconst menuId = useId();\n\n// create a unique id sequence\nconst { nextSequence } = useSequentialId();\n\n/** normalized programamtic options */\nconst groupedOptions = computed<OptionsGroupItem<T>[]>(() => {\n    const normalizedOptions = normalizeOptions<T>(props.options, nextSequence);\n    const groupedOptions = toOptionsGroup<T>(normalizedOptions, nextSequence());\n    return groupedOptions;\n});\n\n// if not backend filtered\nif (!props.backendFiltering)\n    /**\n     * Applies an reactive filter for the options based on the input value.\n     * Options are filtered by setting the hidden attribute.\n     */\n    watchEffect(() => {\n        // filter options by input value\n        filterOptionsItems<T>(groupedOptions, (o) =>\n            filterItems(o, inputValue),\n        );\n        // trigger reactive update of groupedOptions\n        triggerRef(groupedOptions);\n    });\n\nfunction filterItems(\n    option: OptionsItem<T>,\n    value: MaybeRefOrGetter<string>,\n): boolean {\n    if (typeof props.filter === \"function\")\n        return props.filter(option.value, toValue(value));\n    else\n        return !String(option.label)\n            .toLowerCase()\n            .includes(toValue(value)?.toLowerCase());\n}\n\n/** is no option visible */\nconst isEmpty = computed(() => checkOptionsEmpty(groupedOptions));\n\nwatch(isEmpty, (empty) => {\n    if (isFocused.value) isActive.value = !empty || !!slots.empty;\n});\n\n// --- Select Feature ---\n\nconst dropdownValue = ref();\n\n/**\n * When updating input's value:\n * 1. If value isn't the same as selected, set undefined\n * 2. Close dropdown if value is clear or else open it\n */\nwatch(\n    inputValue,\n    (value) => {\n        // find the option for the current selected value\n        const currentOption = findOption(groupedOptions, selectedValue);\n        // clear selected if option label does not match the selected value\n        if (currentOption && currentOption.label !== value) {\n            // clear selected value\n            selectedValue.value = undefined;\n            dropdownValue.value = undefined;\n        }\n\n        // Close dropdown if data is empty\n        if (isEmpty.value && !slots.empty) {\n            isActive.value = false;\n        }\n    },\n    { flush: \"post\" },\n);\n\n/**\n * When updating selected value:\n * 1. Set selected option label as input value\n * 2. Set the selected option value as dropdown value\n */\nwatch(\n    selectedValue,\n    (value) => {\n        if (!value) return;\n        const option = findOption(groupedOptions, value);\n        if (!option) return;\n\n        // set selected option label as input value\n        inputValue.value = props.clearOnSelect ? \"\" : option.label;\n        checkHtml5Validity();\n\n        // set the selected option value as dropdown value\n        dropdownValue.value = option.value;\n    },\n    // set initial values if selected is given\n    { immediate: true },\n);\n\nfunction setSelected(item: T | SpecialOption | undefined): void {\n    let option: OptionsItem<T> | undefined = undefined;\n\n    /** Check if header or footer was selected. */\n    if (item === SpecialOption.Header) {\n        emits(\"select-header\");\n    } else if (item === SpecialOption.Footer) {\n        emits(\"select-footer\");\n    } else if (item) {\n        // convert grouped options to simple list\n        const options: OptionsItem<T>[] = toOptionsList(groupedOptions);\n\n        // get option or undefined for header, footer or group\n        option = options.find((o) => o.value === item);\n    }\n\n    // set which option is currently selected, update v-model,\n    selectedValue.value = option?.value;\n    emits(\"select\", option?.value);\n\n    if (props.keepOpen) setFocus();\n    else isActive.value = false;\n}\n\n// --- Event Handler ---\n\n/** emit input change event */\nfunction onInput(value: string, event: Event): void {\n    if (isFocused.value) {\n        if (!isActive.value && value && (!isEmpty.value || slots.empty)) {\n            // open dropdown if input has value and options are available\n            isActive.value = true;\n        } else if (isActive.value && !value && !props.keepOpen) {\n            // close dropdown if input has not value and is not keep open\n            isActive.value = false;\n        }\n    }\n    emits(\"input\", value, event);\n    checkHtml5Validity();\n}\n\n/**\n * Focus listener.\n * If value is the same as selected, select all text.\n */\nfunction handleFocus(event: Event): void {\n    // open dropdown if `openOnFocus` and has options\n    if (\n        props.openOnFocus &&\n        (!!props.options?.length || !!slots.header || !!slots.footer)\n    )\n        isActive.value = true;\n    onFocus(event);\n}\n\n/**\n * Blur listener.\n * Close on blur.\n */\nfunction handleBlur(event: Event): void {\n    onBlur(event);\n}\n\n// #endregion --- Event Handler ---\n\n// #region --- Icon Feature ---\n\nconst computedIconRight = computed(() =>\n    props.clearable && inputValue.value && props.clearIcon\n        ? props.clearIcon\n        : props.iconRight,\n);\n\nconst computedIconRightClickable = computed(() =>\n    props.clearable ? true : props.iconRightClickable,\n);\n\nfunction rightIconClick(event: Event): void {\n    if (props.clearable) {\n        inputValue.value = \"\";\n    } else emits(\"icon-right-click\", event);\n}\n\n// #endregion --- Icon Feature ---\n\n// #region --- Computed Component Classes ---\n\nconst attrs = useAttrs();\n\nconst inputBind = computed(() => ({\n    ...parentField?.value?.inputAttrs,\n    ...attrs,\n    ...props.inputClasses,\n}));\n\nconst rootClasses = defineClasses([\"rootClass\", \"o-autocomplete\"]);\n\nconst itemClasses = defineClasses([\"itemClass\", \"o-autocomplete__item\"]);\n\nconst itemEmptyClasses = defineClasses([\n    \"itemEmptyClass\",\n    \"o-autocomplete__item--empty\",\n]);\n\nconst itemGroupClasses = defineClasses([\n    \"itemGroupTitleClass\",\n    \"o-autocomplete__item-group-title\",\n]);\n\nconst itemHeaderClasses = defineClasses([\n    \"itemHeaderClass\",\n    \"o-autocomplete__item-header\",\n]);\n\nconst itemFooterClasses = defineClasses([\n    \"itemFooterClass\",\n    \"o-autocomplete__item-footer\",\n]);\n\n// #endregion --- Computed Component Classes ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: setFocus, value: inputValue });\n</script>\n\n<template>\n    <o-dropdown\n        v-model=\"dropdownValue\"\n        v-model:active=\"isActive\"\n        data-oruga=\"autocomplete\"\n        :class=\"rootClasses\"\n        :menu-id=\"menuId\"\n        :menu-tag=\"menuTag\"\n        :triggers=\"[]\"\n        scrollable\n        selectable\n        :keep-open=\"keepOpen\"\n        :keep-first=\"keepFirst\"\n        :check-scroll=\"checkScroll\"\n        :select-on-close=\"selectOnClose\"\n        :disabled=\"disabled\"\n        :desktop-modal=\"desktopModal\"\n        :mobile-modal=\"mobileModal\"\n        :max-height=\"maxHeight\"\n        :animation=\"animation\"\n        :position=\"position\"\n        :teleport=\"teleport\"\n        :expanded=\"expanded\"\n        @select=\"setSelected\"\n        @scroll-start=\"emits('scroll-start')\"\n        @scroll-end=\"emits('scroll-end')\">\n        <template #trigger>\n            <o-input\n                ref=\"inputComponent\"\n                v-bind=\"inputBind\"\n                v-model=\"inputValue\"\n                :type=\"type\"\n                :size=\"size\"\n                :rounded=\"rounded\"\n                :icon=\"icon\"\n                :icon-right=\"computedIconRight\"\n                :icon-right-clickable=\"computedIconRightClickable\"\n                :icon-pack=\"iconPack\"\n                :placeholder=\"placeholder\"\n                :maxlength=\"maxlength\"\n                :autocomplete=\"autocomplete\"\n                :expanded=\"expanded\"\n                :disabled=\"disabled\"\n                :status-icon=\"statusIcon\"\n                :debounce=\"debounce\"\n                :aria-autocomplete=\"keepFirst ? 'both' : 'list'\"\n                :aria-controls=\"menuId\"\n                enterkeyhint=\"enter\"\n                :use-html5-validation=\"false\"\n                @input=\"onInput\"\n                @focus=\"handleFocus\"\n                @blur=\"handleBlur\"\n                @invalid=\"onInvalid\"\n                @icon-click=\"emits('icon-click', $event)\"\n                @icon-right-click=\"rightIconClick\" />\n        </template>\n\n        <o-dropdown-item\n            v-if=\"$slots.header\"\n            :tag=\"itemTag\"\n            :value=\"SpecialOption.Header\"\n            :clickable=\"selectableHeader\"\n            :class=\"[...itemClasses, ...itemHeaderClasses]\">\n            <!--\n                @slot Define an additional header\n            -->\n            <slot name=\"header\" />\n        </o-dropdown-item>\n\n        <template v-for=\"(group, groupIndex) in groupedOptions\">\n            <o-dropdown-item\n                v-if=\"group.label\"\n                v-show=\"!group.hidden\"\n                :key=\"group.key\"\n                v-bind=\"group.attrs\"\n                :hidden=\"group.hidden\"\n                :value=\"group.value\"\n                :tag=\"itemTag\"\n                role=\"presentation\"\n                :clickable=\"false\"\n                :class=\"[...itemClasses, ...itemGroupClasses]\">\n                <!--\n                    @slot Override the option group\n                    @binding {object} group - options group\n                    @binding {number} index - option index\n                -->\n                <slot\n                    v-if=\"$slots.group\"\n                    name=\"group\"\n                    :group=\"group.label\"\n                    :index=\"groupIndex\" />\n                <span v-else>\n                    {{ group.label }}\n                </span>\n            </o-dropdown-item>\n\n            <o-dropdown-item\n                v-for=\"(option, optionIndex) in group.options\"\n                v-show=\"!option.hidden\"\n                :key=\"option.key\"\n                v-bind=\"option.attrs\"\n                :value=\"option.value\"\n                :hidden=\"option.hidden\"\n                :tag=\"itemTag\"\n                :class=\"itemClasses\">\n                <!--\n                    @slot Override the select option\n                    @binding {object} option - option object\n                    @binding {number} index - option index\n                    @binding {unknown} value - option value\n                -->\n                <slot\n                    v-if=\"$slots.default\"\n                    :option=\"option\"\n                    :value=\"option.value\"\n                    :index=\"optionIndex\" />\n                <span v-else>\n                    {{ option.label }}\n                </span>\n            </o-dropdown-item>\n        </template>\n\n        <o-dropdown-item\n            v-if=\"isEmpty && $slots.empty\"\n            :tag=\"itemTag\"\n            :class=\"[...itemClasses, ...itemEmptyClasses]\">\n            <!--\n                @slot Define content for empty state\n            -->\n            <slot name=\"empty\" />\n        </o-dropdown-item>\n\n        <o-dropdown-item\n            v-if=\"$slots.footer\"\n            :tag=\"itemTag\"\n            :value=\"SpecialOption.Footer\"\n            :clickable=\"selectableFooter\"\n            :class=\"[...itemClasses, ...itemFooterClasses]\">\n            <!--\n                @slot Define an additional footer\n            -->\n            <slot name=\"footer\" />\n        </o-dropdown-item>\n    </o-dropdown>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Autocomplete from \"./Autocomplete.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export autocomplete plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Autocomplete);\n    },\n} as Plugin;\n\n/** export autocomplete components */\nexport { Autocomplete as OAutocomplete };\n","<script setup lang=\"ts\">\nimport { computed } from \"vue\";\n\nimport OIcon from \"../icon/Icon.vue\";\n\nimport { getDefault } from \"@/utils/config\";\nimport { defineClasses } from \"@/composables\";\n\nimport type { ButtonProps } from \"./props\";\n\n/**\n * The classic button, in different colors, sizes, and states.\n * @displayName Button\n * @style _button.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OButton\",\n    configField: \"button\",\n});\n\nconst props = withDefaults(defineProps<ButtonProps>(), {\n    override: undefined,\n    tag: () => getDefault(\"button.tag\", \"button\"),\n    variant: () => getDefault(\"button.variant\"),\n    size: () => getDefault(\"button.size\"),\n    label: undefined,\n    rounded: () => getDefault(\"button.rounded\", false),\n    expanded: false,\n    disabled: false,\n    outlined: false,\n    loading: false,\n    inverted: false,\n    type: \"button\",\n    iconPack: () => getDefault(\"button.iconPack\"),\n    iconLeft: undefined,\n    iconRight: undefined,\n    iconBoth: false,\n});\n\ndefineEmits<{\n    /**\n     * button click event\n     * @param event {Event} native event\n     */\n    click: [event: Event];\n}>();\n\nconst computedTag = computed(() =>\n    typeof props.disabled !== \"undefined\" && props.disabled !== false\n        ? \"button\"\n        : props.tag,\n);\n\nconst computedNativeType = computed(() =>\n    props.tag === \"button\" || props.tag === \"input\" ? props.type : null,\n);\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-button\"],\n    [\n        \"sizeClass\",\n        \"o-button--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\n        \"variantClass\",\n        \"o-button--\",\n        computed(() => props.variant),\n        computed(() => !!props.variant && !props.outlined && !props.inverted),\n    ],\n    [\n        \"outlinedClass\",\n        \"o-button--outlined\",\n        null,\n        computed(() => props.outlined && !props.variant),\n    ],\n    [\n        \"invertedClass\",\n        \"o-button--inverted\",\n        null,\n        computed(() => props.inverted && !props.variant),\n    ],\n    [\n        \"outlinedClass\",\n        \"o-button--outlined-\",\n        computed(() => props.variant),\n        computed(() => props.outlined && !!props.variant),\n    ],\n    [\n        \"invertedClass\",\n        \"o-button--inverted-\",\n        computed(() => props.variant),\n        computed(() => props.inverted && !!props.variant),\n    ],\n    [\n        \"expandedClass\",\n        \"o-button--expanded\",\n        null,\n        computed(() => props.expanded),\n    ],\n    [\"loadingClass\", \"o-button--loading\", null, computed(() => props.loading)],\n    [\"roundedClass\", \"o-button--rounded\", null, computed(() => props.rounded)],\n    [\n        \"disabledClass\",\n        \"o-button--disabled\",\n        null,\n        computed(() => props.disabled),\n    ],\n);\n\nconst wrapperClasses = defineClasses([\"wrapperClass\", \"o-button__wrapper\"]);\n\nconst labelClasses = defineClasses([\"labelClass\", \"o-button__label\"]);\n\nconst iconClasses = defineClasses([\"iconClass\", \"o-button__icon\"]);\n\nconst iconLeftClasses = defineClasses([\"iconLeftClass\", \"o-button__icon-left\"]);\n\nconst iconRightClasses = defineClasses([\n    \"iconRightClass\",\n    \"o-button__icon-right\",\n]);\n</script>\n\n<template>\n    <component\n        :is=\"computedTag\"\n        data-oruga=\"button\"\n        :type=\"computedNativeType\"\n        role=\"button\"\n        tabindex=\"0\"\n        :class=\"rootClasses\"\n        :disabled=\"disabled ? true : null\"\n        @click=\"$emit('click', $event)\"\n        @keydown.enter=\"$emit('click', $event)\"\n        @keydown.space=\"$emit('click', $event)\">\n        <span :class=\"wrapperClasses\">\n            <o-icon\n                v-if=\"iconLeft\"\n                :pack=\"iconPack\"\n                :icon=\"iconLeft\"\n                :size=\"size\"\n                :both=\"iconBoth\"\n                :class=\"[...iconClasses, ...iconLeftClasses]\" />\n\n            <span v-if=\"label || $slots.default\" :class=\"labelClasses\">\n                <!--\n                    @slot Override the label, default is label prop \n                -->\n                <slot>{{ label }}</slot>\n            </span>\n\n            <o-icon\n                v-if=\"iconRight\"\n                :pack=\"iconPack\"\n                :icon=\"iconRight\"\n                :size=\"size\"\n                :both=\"iconBoth\"\n                :class=\"[...iconClasses, ...iconRightClasses]\" />\n        </span>\n    </component>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Button from \"./Button.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export button plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Button);\n    },\n} as Plugin;\n\n/** export button components */\nexport { Button as OButton };\n","<script setup lang=\"ts\">\nimport {\n    computed,\n    watch,\n    onBeforeUnmount,\n    onMounted,\n    ref,\n    nextTick,\n    readonly,\n    toRaw,\n    useTemplateRef,\n    triggerRef,\n} from \"vue\";\n\nimport OIcon from \"../icon/Icon.vue\";\n\nimport { getDefault } from \"@/utils/config\";\nimport { sign, mod, bound, isDefined } from \"@/utils/helpers\";\nimport { isClient } from \"@/utils/ssr\";\nimport {\n    defineClasses,\n    useProviderParent,\n    type ProviderItem,\n} from \"@/composables\";\n\nimport type { CarouselComponent } from \"./types\";\nimport type { ClassBind } from \"@/types\";\nimport type { CarouselProps } from \"./props\";\n\n/**\n * A Slideshow for cycling images in confined spaces.\n * @displayName Carousel\n * @requires ./CarouselItem.vue\n * @style _carousel.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OCarousel\",\n    configField: \"carousel\",\n});\n\nconst props = withDefaults(defineProps<CarouselProps>(), {\n    override: undefined,\n    modelValue: 0,\n    dragable: true,\n    autoplay: false,\n    interval: () => getDefault(\"carousel.interval\", 3500),\n    pauseHover: false,\n    repeat: false,\n    overlay: false,\n    indicators: true,\n    indicatorInside: false,\n    indicatorPosition: () => getDefault(\"carousel.indicatorPosition\", \"bottom\"),\n    indicatorStyle: () => getDefault(\"carousel.indicatorStyle\", \"dots\"),\n    itemsToShow: () => getDefault(\"carousel.itemsToShow\", 1),\n    itemsToList: () => getDefault(\"carousel.itemsToList\", 1),\n    arrows: () => getDefault(\"carousel.arrows\", true),\n    arrowsHover: () => getDefault(\"carousel.arrowsHover\", true),\n    iconPack: () => getDefault(\"carousel.iconPack\"),\n    iconSize: () => getDefault(\"carousel.iconSize\"),\n    iconPrev: () => getDefault(\"carousel.iconPrev\", \"chevron-left\"),\n    iconNext: () => getDefault(\"carousel.iconNext\", \"chevron-right\"),\n    iconAutoplayPause: () => getDefault(\"carousel.iconAutoplayPause\", \"pause\"),\n    iconAutoplayResume: () => getDefault(\"carousel.iconAutoplayResume\", \"play\"),\n    breakpoints: () => ({}),\n    ariaAutoplayPauseLabel: () =>\n        getDefault(\n            \"carousel.ariaAutoplayPauseLabel\",\n            \"Stop Automatic Slide Show\",\n        ),\n    ariaAutoplayResumeLabel: () =>\n        getDefault(\n            \"carousel.ariaAutoplayResumeLabel\",\n            \"Start Automatic Slide Show\",\n        ),\n    ariaNextLabel: () => getDefault(\"carousel.ariaNextLabel\", \"Next Slide\"),\n    ariaPreviousLabel: () =>\n        getDefault(\"carousel.ariaPreviousLabel\", \"Previous Slide\"),\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {number} updated modelValue prop\n     */\n    \"update:model-value\": [value: number];\n    /**\n     * on carousel slide change event\n     * @param value {number} active index\n     */\n    change: [value: number];\n    /**\n     * on item click event\n     * @param event {event} native event\n     */\n    click: [event: Event];\n}>();\n\nconst rootRef = useTemplateRef(\"rootElement\");\n\n// provided data is a computed ref to ensure reactivity\nconst provideData = computed<CarouselComponent>(() => ({\n    activeIndex: activeIndex.value,\n    indicators: props.indicators,\n    total: total.value,\n    itemWidth: itemWidth.value,\n    onDrag: onDragStart,\n    onClick: (event: Event): void => emits(\"click\", event),\n    setActive: (index: number): void => switchTo(index),\n}));\n\n/** provide functionalities and data to child item components */\nconst { childItems } = useProviderParent({ rootRef, data: provideData });\n\n// the real index of the active item, use v-model to make it two-way binding\nconst activeIndex = defineModel<number>({ default: 0 });\n\nconst total = computed(() => childItems.value.length);\n\nconst indicatorItems = computed(() =>\n    childItems.value.filter(\n        (el, i) => mod(i, settings.value.itemsToList) === 0,\n    ),\n);\n\nlet resizeObserver: ResizeObserver | undefined;\nif (isClient && window.ResizeObserver) {\n    resizeObserver = new window.ResizeObserver(onRefresh);\n}\n\n/** watch specific props which need to refresh the component */\nwatch(\n    [\n        () => props.itemsToList,\n        () => props.itemsToShow,\n        () => props.arrowsHover,\n        () => props.repeat,\n    ],\n    () => onRefresh(),\n);\n\nconst windowWidth = ref(0);\n\nfunction onRefresh(): void {\n    activeIndex.value = 0;\n    // set HTML element with\n    windowWidth.value = window.innerWidth;\n    // trigger re creation of settings based on props\n    nextTick(() => triggerRef(settings));\n}\n\nonMounted(() => {\n    if (isClient) {\n        if (window.ResizeObserver && resizeObserver && rootRef.value)\n            resizeObserver.observe(rootRef.value);\n\n        // set HTML element with\n        windowWidth.value = window.innerWidth;\n\n        // a prefers-reduced-motion user setting must always override autoplay\n        const hasReducedMotion = window.matchMedia(\n            \"(prefers-reduced-motion: reduce)\",\n        );\n        if (!hasReducedMotion?.matches) startTimer();\n    }\n});\n\nonBeforeUnmount(() => {\n    if (isClient) {\n        if (window.ResizeObserver && resizeObserver)\n            resizeObserver.disconnect();\n\n        onDragEnd();\n        pauseTimer();\n    }\n});\n\nconst settings = computed<typeof props>(() => {\n    const breakpoints = Object.keys(props.breakpoints)\n        .map(Number)\n        .sort((a, b) => b - a);\n\n    const breakpoint = breakpoints.find(\n        (breakpoint) => windowWidth.value >= breakpoint,\n    );\n\n    const settings = toRaw(\n        breakpoint ? { ...props, ...props.breakpoints[breakpoint] } : props,\n    );\n\n    // prevent empty values\n    if (!settings.itemsToList) settings.itemsToList = 1;\n    if (!settings.itemsToShow) settings.itemsToShow = 1;\n    return readonly(settings);\n});\n\nconst itemWidth = computed(() => {\n    // Ensure component is mounted\n    if (!windowWidth.value || !rootRef.value) return 0;\n\n    const rect = rootRef.value.getBoundingClientRect();\n    return rect.width / settings.value.itemsToShow;\n});\n\n// #region --- Switch Events ---\n\nconst hasArrows = computed(\n    () =>\n        (settings.value.arrowsHover && isHovered.value) ||\n        !settings.value.arrowsHover,\n);\n\nconst hasPrev = computed(() => settings.value.repeat || activeIndex.value > 0);\n\nfunction onPrev(): void {\n    switchTo(activeIndex.value - settings.value.itemsToList);\n}\n\nconst hasNext = computed(\n    () =>\n        settings.value.repeat ||\n        activeIndex.value < total.value - settings.value.itemsToList,\n);\n\nfunction onNext(): void {\n    switchTo(activeIndex.value + settings.value.itemsToList);\n}\n\n/** Go to the first viable item */\nfunction onHomePressed(): void {\n    switchTo(0);\n}\n\n/** Go to the last viable item */\nfunction onEndPressed(): void {\n    switchTo(total.value - settings.value.itemsToList);\n}\n\n/**\n * Show the slide by index\n * @param index the real index of the slide\n */\nfunction switchTo(index: number = 0): void {\n    if (settings.value.repeat) index = mod(index, total.value);\n    index = bound(index, 0, total.value - 1);\n\n    activeIndex.value = index;\n    emits(\"change\", index);\n}\n\n/** Set focus on a tab item. */\nfunction onChange(item: ProviderItem): void {\n    switchTo(item.index);\n}\n\n// #endregion --- Switch Events ---\n\n// #region --- Autoplay Feature ---\n\nconst isHovered = ref(false);\nlet timer: ReturnType<typeof setTimeout> | undefined;\n/** deactive autoplay feature */\nconst isAutoplayPaused = ref(false);\n\nfunction onMouseEnter(): void {\n    isHovered.value = true;\n    if (props.autoplay && props.pauseHover) pauseTimer();\n}\n\nfunction onMouseLeave(): void {\n    isHovered.value = false;\n    if (props.autoplay && props.pauseHover) startTimer();\n}\n\n/** When autoplay is changed, start or pause timer accordingly */\nwatch(\n    () => props.autoplay,\n    (status) => {\n        if (status) startTimer();\n        else pauseTimer();\n    },\n);\n\n/** Since the timer can get paused at the end, if repeat is changed we need to restart it */\nwatch(\n    () => props.repeat,\n    (status) => {\n        if (status) startTimer();\n    },\n);\n\nfunction onToggleAutoplay(): void {\n    if (!isAutoplayPaused.value) {\n        isAutoplayPaused.value = true;\n        pauseTimer();\n    } else {\n        isAutoplayPaused.value = false;\n        startTimer();\n    }\n}\n\nfunction startTimer(): void {\n    if (!props.autoplay || timer) return;\n    if (isAutoplayPaused.value) return;\n    timer = setInterval(() => {\n        if (!props.repeat && !hasNext.value) pauseTimer();\n        else onNext();\n    }, props.interval);\n}\n\nfunction pauseTimer(): void {\n    if (timer) {\n        clearInterval(timer);\n        timer = undefined;\n    }\n}\n\n// #endregion --- Autoplay Feature ---\n\n// #region --- Drag & Drop Feature ---\n\nconst dragX = ref();\nconst delta = ref(0);\n\nconst isDragging = computed(() => isDefined(dragX.value));\n\nconst translation = computed(\n    () =>\n        -bound(\n            delta.value + activeIndex.value * itemWidth.value,\n            0,\n            (childItems.value.length - settings.value.itemsToShow) *\n                itemWidth.value,\n        ),\n);\n\n/** handle drag event */\nfunction onDragStart(event: TouchEvent | MouseEvent): void {\n    if (\n        isDragging.value ||\n        !settings.value.dragable ||\n        ((event as MouseEvent).button !== 0 && event.type !== \"touchstart\")\n    )\n        return;\n\n    delta.value = 0;\n    // get dragging start x value\n    dragX.value = !!(event as TouchEvent).touches\n        ? (event as TouchEvent).touches[0].clientX\n        : (event as MouseEvent).clientX;\n\n    // stop timer when dragging starts\n    pauseTimer();\n}\n\nfunction onDragOver(event: TouchEvent | MouseEvent): void {\n    if (!isDragging.value) return;\n\n    const dragEndX = !!(event as TouchEvent).touches\n        ? (\n              (event as TouchEvent).changedTouches[0] ||\n              (event as TouchEvent).touches[0]\n          ).clientX\n        : (event as MouseEvent).clientX;\n    // calc transition delta value\n    delta.value = dragX.value - dragEndX;\n}\n\nfunction onDragEnd(): void {\n    if (!isDragging.value) return;\n    // switch slide\n    const signCheck = sign(delta.value);\n    const results = Math.round(Math.abs(delta.value / itemWidth.value) + 0.15); // Hack\n    switchTo(activeIndex.value + signCheck * results);\n\n    // cleanup\n    delta.value = 0;\n    dragX.value = undefined;\n\n    // atart timer after dragging ends\n    startTimer();\n}\n\n// #endregion --- Drag & Drop Feature ---\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-carousel\"],\n    [\n        \"overlayClass\",\n        \"o-carousel__overlay\",\n        null,\n        computed(() => props.overlay),\n    ],\n);\n\nconst wrapperClasses = defineClasses([\"wrapperClass\", \"o-carousel__wrapper\"]);\n\nconst itemsClasses = defineClasses(\n    [\"itemsClass\", \"o-carousel__items\"],\n    [\"itemsDraggingClass\", \"o-carousel__items--dragging\", null, isDragging],\n);\n\nconst prevIconClasses = defineClasses(\n    [\"iconClass\", \"o-carousel__icon\"],\n    [\"iconPrevClass\", \"o-carousel__icon-prev\"],\n);\n\nconst nextIconClasses = defineClasses(\n    [\"iconClass\", \"o-carousel__icon\"],\n    [\"iconNextClass\", \"o-carousel__icon-next\"],\n);\n\nconst autoplayIconClasses = defineClasses(\n    [\"iconClass\", \"o-carousel__icon\"],\n    [\"iconAutoplayClass\", \"o-carousel__icon-autoplay\"],\n);\n\nconst indicatorsClasses = defineClasses(\n    [\"indicatorsClass\", \"o-carousel__indicators\"],\n    [\n        \"indicatorsInsideClass\",\n        \"o-carousel__indicators--inside\",\n        null,\n        computed(() => !!props.indicatorInside),\n    ],\n    [\n        \"indicatorsPositionClass\",\n        \"o-carousel__indicators--\",\n        computed(() => props.indicatorPosition),\n        computed(() => !!props.indicatorPosition),\n    ],\n);\n\nconst indicatorClasses = defineClasses([\n    \"indicatorClass\",\n    \"o-carousel__indicator\",\n]);\n\nconst indicatorItemClasses = defineClasses(\n    [\"indicatorItemClass\", \"o-carousel__indicator__item\"],\n    [\n        \"indicatorItemStyleClass\",\n        \"o-carousel__indicator__item--\",\n        computed(() => props.indicatorStyle),\n        computed(() => !!props.indicatorStyle),\n    ],\n);\n\nconst indicatorItemActiveClasses = defineClasses([\n    \"indicatorItemActiveClass\",\n    \"o-carousel__indicator__item--active\",\n]);\n\nfunction indicatorItemAppliedClasses(item: ProviderItem): ClassBind[] {\n    const activeClasses =\n        activeIndex.value === item.index\n            ? indicatorItemActiveClasses.value\n            : [];\n\n    return [...indicatorItemClasses.value, ...activeClasses];\n}\n</script>\n\n<template>\n    <div\n        ref=\"rootElement\"\n        data-oruga=\"carousel\"\n        :class=\"rootClasses\"\n        role=\"region\"\n        aria-roledescription=\"carousel\"\n        @mouseover=\"onMouseEnter\"\n        @mouseleave=\"onMouseLeave\"\n        @focusin=\"onMouseEnter\"\n        @focusout=\"onMouseLeave\"\n        @keydown.left=\"onPrev\"\n        @keydown.right=\"onNext\"\n        @keydown.home.prevent=\"onHomePressed\"\n        @keydown.end.prevent=\"onEndPressed\">\n        <div :class=\"wrapperClasses\">\n            <!--\n                @slot Override the pause/resume button\n                @binding {boolean} autoplay if autoplay is active\n                @binding {(): void} toggle toggle autoplay\n            -->\n            <slot\n                name=\"pause\"\n                :autoplay=\"!isAutoplayPaused\"\n                :toggle=\"onToggleAutoplay\">\n                <template v-if=\"autoplay\">\n                    <o-icon\n                        :class=\"autoplayIconClasses\"\n                        :pack=\"iconPack\"\n                        :icon=\"\n                            !isAutoplayPaused\n                                ? iconAutoplayPause\n                                : iconAutoplayResume\n                        \"\n                        :size=\"iconSize\"\n                        both\n                        role=\"button\"\n                        tabindex=\"0\"\n                        :aria-label=\"\n                            !isAutoplayPaused\n                                ? ariaAutoplayPauseLabel\n                                : ariaAutoplayResumeLabel\n                        \"\n                        @click=\"onToggleAutoplay\"\n                        @keydown.enter.prevent=\"onToggleAutoplay\"\n                        @keydown.space.prevent=\"onToggleAutoplay\" />\n                </template>\n            </slot>\n\n            <!--\n                @slot Override the arrows\n                @binding {boolean} has-prev has prev arrow button \n                @binding {boolean} has-next has next arrow button \n                @binding {(): void} prev switch to prev item function\n                @binding {(): void} next switch to next item function\n            -->\n            <slot\n                name=\"arrow\"\n                :has-prev=\"hasPrev\"\n                :prev=\"onPrev\"\n                :has-next=\"hasNext\"\n                :next=\"onNext\">\n                <template v-if=\"arrows\">\n                    <o-icon\n                        v-show=\"hasArrows && hasPrev\"\n                        :class=\"prevIconClasses\"\n                        :pack=\"iconPack\"\n                        :icon=\"iconPrev\"\n                        :size=\"iconSize\"\n                        both\n                        role=\"button\"\n                        tabindex=\"0\"\n                        :aria-label=\"ariaPreviousLabel\"\n                        @click=\"onPrev\"\n                        @keydown.enter.prevent=\"onPrev\"\n                        @keydown.space.prevent=\"onPrev\" />\n                    <o-icon\n                        v-show=\"hasArrows && hasNext\"\n                        :class=\"nextIconClasses\"\n                        :pack=\"iconPack\"\n                        :icon=\"iconNext\"\n                        :size=\"iconSize\"\n                        both\n                        role=\"button\"\n                        tabindex=\"0\"\n                        :aria-label=\"ariaNextLabel\"\n                        @click=\"onNext\"\n                        @keydown.enter.prevent=\"onNext\"\n                        @keydown.space.prevent=\"onNext\" />\n                </template>\n            </slot>\n\n            <div\n                :class=\"itemsClasses\"\n                :style=\"'transform:translateX(' + translation + 'px)'\"\n                aria-roledescription=\"carousel-slide\"\n                aria-atomic=\"false\"\n                :aria-live=\"autoplay ? 'off' : 'polite'\"\n                @dragend=\"onDragEnd\"\n                @dragover=\"onDragOver\"\n                @touchmove=\"onDragOver\"\n                @touchend=\"onDragEnd\">\n                <!--\n                    @slot Display carousel item\n                -->\n                <slot />\n            </div>\n        </div>\n\n        <!--\n            @slot Override the indicators\n            @binding {number} active active index \n            @binding {(idx: number): void} switch-to switch to item function\n        -->\n        <slot name=\"indicators\" :active=\"activeIndex\" :switch-to=\"switchTo\">\n            <div\n                v-if=\"indicators\"\n                :class=\"indicatorsClasses\"\n                role=\"tablist\"\n                aria-label=\"Slides\">\n                <div\n                    v-for=\"item in indicatorItems\"\n                    :id=\"`carousel-${item.identifier}`\"\n                    :key=\"item.index\"\n                    :class=\"indicatorClasses\"\n                    role=\"tab\"\n                    :tabindex=\"modelValue === item.index ? '0' : '-1'\"\n                    :aria-label=\"`Slide ${item.identifier}`\"\n                    :aria-controls=\"`carouselpanel-${item.identifier}`\"\n                    :aria-selected=\"modelValue === item.index\"\n                    @click=\"onChange(item)\"\n                    @keydown.enter=\"onChange(item)\"\n                    @keydown.space=\"onChange(item)\">\n                    <!--\n                            @slot Override the indicator elements\n                            @binding {index} index indicator index \n                        -->\n                    <slot :index=\"item.index\" name=\"indicator\">\n                        <span :class=\"indicatorItemAppliedClasses(item)\" />\n                    </slot>\n                </div>\n            </div>\n        </slot>\n\n        <template v-if=\"overlay\">\n            <!-- @slot Overlay element -->\n            <slot name=\"overlay\" />\n        </template>\n    </div>\n</template>\n","<script setup lang=\"ts\">\nimport { computed } from \"vue\";\n\nimport { defineClasses, useProviderChild } from \"@/composables\";\n\nimport type { CarouselComponent } from \"./types\";\nimport type { CarouselItemProps } from \"./props\";\n\n/**\n * A Slideshow item used by the carousel.\n * @displayName Carousel Item\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OCarouselItem\",\n    configField: \"carousel\",\n});\n\nconst props = withDefaults(defineProps<CarouselItemProps>(), {\n    override: undefined,\n    clickable: false,\n});\n\n/** inject functionalities and data from the parent component */\nconst { parent, item } = useProviderChild<CarouselComponent>();\n\nconst isActive = computed(() => parent.value.activeIndex === item.value.index);\n\nconst itemStyle = computed(() => ({ width: `${parent.value.itemWidth}px` }));\n\nfunction onClick(event: Event): void {\n    if (isActive.value) parent.value.onClick(event);\n    if (props.clickable) parent.value.setActive(item.value.index);\n}\n\n// --- Computed Component Classes ---\n\nconst itemClasses = defineClasses(\n    [\"itemClass\", \"o-carousel__item\"],\n    [\"itemActiveClass\", \"o-carousel__item--active\", null, isActive],\n    [\n        \"itemClickableClass\",\n        \"o-carousel__item--clickable\",\n        null,\n        computed(() => props.clickable),\n    ],\n);\n</script>\n\n<template>\n    <div\n        :id=\"`carouselpanel-${item.identifier}`\"\n        data-oruga=\"carousel-item\"\n        :data-id=\"`carousel-${item.identifier}`\"\n        :class=\"itemClasses\"\n        :style=\"itemStyle\"\n        :role=\"parent.indicators ? 'tabpanel' : 'group'\"\n        :aria-labelledby=\"`carousel-${item.identifier}`\"\n        aria-roledescription=\"slide\"\n        :aria-label=\"`${item.index + 1} of ${parent.total}`\"\n        draggable=\"true\"\n        @click=\"onClick\"\n        @keydown.enter=\"onClick\"\n        @keydown.space=\"onClick\"\n        @dragstart=\"parent.onDrag\"\n        @touchstart=\"parent.onDrag\">\n        <!--\n            @slot Default content\n        -->\n        <slot />\n    </div>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Carousel from \"./Carousel.vue\";\nimport CarouselItem from \"./CarouselItem.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export carousel plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Carousel);\n        registerComponent(app, CarouselItem);\n    },\n} as Plugin;\n\n/** export carousel components */\nexport { Carousel as OCarousel, CarouselItem as OCarouselItem };\n","<script setup lang=\"ts\" generic=\"T\">\nimport { computed, useAttrs, useId, useSlots, useTemplateRef } from \"vue\";\n\nimport { getDefault } from \"@/utils/config\";\nimport { defineClasses, useInputHandler } from \"@/composables\";\n\nimport { injectField } from \"../field/fieldInjection\";\n\nimport type { CheckboxProps } from \"./props\";\n\n/**\n * Select a single or grouped options.\n * @displayName Checkbox\n * @style _checkbox.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OCheckbox\",\n    configField: \"checkbox\",\n    inheritAttrs: false,\n});\n\nconst props = withDefaults(defineProps<CheckboxProps<T>>(), {\n    override: undefined,\n    modelValue: undefined,\n    id: () => useId(),\n    variant: () => getDefault(\"checkbox.variant\"),\n    size: () => getDefault(\"checkbox.size\"),\n    label: undefined,\n    indeterminate: false,\n    required: false,\n    disabled: false,\n    name: undefined,\n    nativeValue: undefined,\n    trueValue: undefined,\n    falseValue: undefined,\n    autocomplete: () => getDefault(\"checkbox.autocomplete\", \"off\"),\n    useHtml5Validation: () => getDefault(\"useHtml5Validation\", true),\n    customValidity: \"\",\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {T | T[]} updated modelValue prop\n     */\n    \"update:model-value\": [value: T | T[]];\n    /**\n     * on input change event\n     * @param value {T | T[]} input value\n     * @param event {Event} native event\n     */\n    input: [value: T | T[], event: Event];\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    focus: [event: Event];\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    blur: [event: Event];\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    invalid: [event: Event];\n}>();\n\nconst inputRef = useTemplateRef(\"inputElement\");\n\n// use form input functionalities\nconst { onBlur, onFocus, onInvalid, setFocus } = useInputHandler(\n    inputRef,\n    emits,\n    props,\n);\n\n// inject parent field component if used inside one\nconst { parentField } = injectField();\n\n// set field labelId or create a unique label id if a label is given\nconst labelId =\n    !!parentField.value || !!props.label || !!useSlots().default\n        ? parentField.value?.labelId || useId()\n        : undefined;\n\n// if no `label` is given and `id` is given set as `for` property on o-field wrapper\nif (!props.label && props.id) parentField.value?.setInputId(props.id);\n\nconst vmodel = defineModel<T | T[]>({ default: undefined });\n\nconst isChecked = computed(\n    () =>\n        vmodel.value === (props.trueValue ?? true) ||\n        (Array.isArray(vmodel.value) &&\n            vmodel.value.includes(props.nativeValue as T)),\n);\n\nfunction onInput(event: Event): void {\n    emits(\"input\", vmodel.value, event);\n}\n\n// --- Computed Component Classes ---\n\nconst attrs = useAttrs();\n\nconst inputBind = computed(() => ({\n    ...parentField.value?.inputAttrs,\n    ...attrs,\n}));\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-checkbox\"],\n    [\n        \"sizeClass\",\n        \"o-checkbox--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\n        \"variantClass\",\n        \"o-checkbox--\",\n        computed(() => props.variant),\n        computed(() => !!props.variant),\n    ],\n    [\n        \"disabledClass\",\n        \"o-checkbox--disabled\",\n        null,\n        computed(() => props.disabled),\n    ],\n    [\"checkedClass\", \"o-checkbox--checked\", null, isChecked],\n    [\n        \"indeterminateClass\",\n        \"o-checkbox--indeterminate\",\n        null,\n        computed(() => props.indeterminate),\n    ],\n);\n\nconst inputClasses = defineClasses([\"inputClass\", \"o-checkbox__input\"]);\n\nconst labelClasses = defineClasses([\"labelClass\", \"o-checkbox__label\"]);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: setFocus, value: vmodel });\n</script>\n\n<template>\n    <div data-oruga=\"checkbox\" :class=\"rootClasses\">\n        <input\n            v-bind=\"inputBind\"\n            :id=\"id\"\n            ref=\"inputElement\"\n            v-model=\"vmodel\"\n            type=\"checkbox\"\n            data-oruga-input=\"checkbox\"\n            :class=\"inputClasses\"\n            :name=\"name\"\n            :value=\"nativeValue\"\n            :true-value=\"trueValue ?? true\"\n            :false-value=\"falseValue ?? false\"\n            :required=\"required\"\n            :indeterminate=\"indeterminate\"\n            :disabled=\"disabled\"\n            :autocomplete=\"autocomplete\"\n            :aria-checked=\"indeterminate ? 'mixed' : isChecked\"\n            :aria-labelledby=\"labelId\"\n            @blur=\"onBlur\"\n            @focus=\"onFocus\"\n            @invalid=\"onInvalid\"\n            @change=\"onInput\" />\n\n        <label\n            v-if=\"label || $slots.default\"\n            :id=\"labelId\"\n            :for=\"id\"\n            :class=\"labelClasses\">\n            <!--\n                @slot Content slot, default is label prop\n            -->\n            <slot>{{ label }}</slot>\n        </label>\n    </div>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Checkbox from \"./Checkbox.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export checkbox plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Checkbox);\n    },\n} as Plugin;\n\n/** export table components */\nexport { Checkbox as OCheckbox };\n","<script setup lang=\"ts\">\nimport { computed, useId } from \"vue\";\n\nimport { getDefault } from \"@/utils/config\";\nimport { defineClasses } from \"@/composables\";\n\nimport type { CollapseProps } from \"./props\";\n\n/**\n * An easy way to toggle what you want.\n * @displayName Collapse\n * @style _collapse.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OCollapse\",\n    configField: \"collapse\",\n});\n\nconst props = withDefaults(defineProps<CollapseProps>(), {\n    override: undefined,\n    open: true,\n    expanded: false,\n    animation: () => getDefault(\"collapse.animation\", \"fade\"),\n    position: () => getDefault(\"collapse.position\", \"top\"),\n    contentId: () => useId(),\n    triggerId: () => useId(),\n});\n\nconst emits = defineEmits<{\n    /**\n     * open prop two-way binding\n     * @param value {boolean} updated open prop\n     */\n    \"update:open\": [value: boolean];\n    /** on collapse opened */\n    open: [];\n    /** on collapse closed */\n    close: [];\n}>();\n\nconst isOpen = defineModel<boolean>(\"open\", { default: true });\n\n/** Toggle and emit events */\nfunction toggle(): void {\n    isOpen.value = !isOpen.value;\n    if (isOpen.value) emits(\"open\");\n    else emits(\"close\");\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-collapse\"],\n    [\n        \"positionClass\",\n        \"o-collapse--\",\n        computed(() => props.position),\n        computed(() => !!props.position),\n    ],\n);\n\nconst triggerClasses = defineClasses(\n    [\"triggerClass\", \"o-collapse__trigger\"],\n    [\n        \"expandedClass\",\n        \"o-collapse__trigger--expanded\",\n        null,\n        computed(() => props.expanded),\n    ],\n);\n\nconst contentClasses = defineClasses([\"contentClass\", \"o-collapse__content\"]);\n</script>\n\n<template>\n    <div data-oruga=\"collapse\" :class=\"rootClasses\">\n        <div\n            :id=\"triggerId\"\n            :class=\"triggerClasses\"\n            role=\"button\"\n            tabindex=\"0\"\n            :aria-controls=\"contentId\"\n            :aria-expanded=\"isOpen\"\n            @click=\"toggle\"\n            @keydown.enter=\"toggle\"\n            @keydown.space=\"toggle\">\n            <!--\n                @slot Define the collapse trigger\n                @binding {boolean} open collapse open state \n             -->\n            <slot name=\"trigger\" :open=\"isOpen\" />\n        </div>\n\n        <Transition :name=\"animation\">\n            <div\n                v-show=\"isOpen\"\n                :id=\"contentId\"\n                :class=\"contentClasses\"\n                :aria-labelledby=\"triggerId\">\n                <!--\n                    @slot Default content\n                -->\n                <slot />\n            </div>\n        </Transition>\n    </div>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Collapse from \"./Collapse.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export collapse plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Collapse);\n    },\n} as Plugin;\n\n/** export collapse components */\nexport { Collapse as OCollapse };\n","<script setup lang=\"ts\" generic=\"T, IsMultiple extends boolean = false\">\nimport {\n    computed,\n    watch,\n    nextTick,\n    useAttrs,\n    useId,\n    useTemplateRef,\n} from \"vue\";\n\nimport OIcon from \"../icon/Icon.vue\";\n\nimport { getDefault } from \"@/utils/config\";\nimport { isDefined, isTrueish } from \"@/utils/helpers\";\nimport {\n    defineClasses,\n    isGroupOption,\n    normalizeOptions,\n    useInputHandler,\n    useSequentialId,\n} from \"@/composables\";\n\nimport { injectField } from \"../field/fieldInjection\";\n\nimport type { SelectProps } from \"./props\";\n\n/**\n * Select an item in a list. Use with Field to access all functionalities.\n * @displayName Select\n * @style _select.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OSelect\",\n    configField: \"select\",\n    inheritAttrs: false,\n});\n\ntype ModelValue = SelectProps<T, IsMultiple>[\"modelValue\"];\n\nconst props = withDefaults(defineProps<SelectProps<T, IsMultiple>>(), {\n    override: undefined,\n    modelValue: undefined,\n    // multiple: false,\n    options: undefined,\n    size: () => getDefault(\"select.size\"),\n    variant: () => getDefault(\"select.variant\"),\n    placeholder: undefined,\n    disabled: false,\n    required: false,\n    expanded: false,\n    rounded: false,\n    nativeSize: undefined,\n    iconPack: () => getDefault(\"select.iconPack\"),\n    icon: () => getDefault(\"select.icon\"),\n    iconClickable: false,\n    iconRight: () => getDefault(\"select.iconRight\"),\n    iconRightClickable: false,\n    iconRightVariant: undefined,\n    id: () => useId(),\n    useHtml5Validation: () => getDefault(\"useHtml5Validation\", true),\n    customValidation: \"\",\n    autocomplete: () => getDefault(\"select.autocomplete\", \"off\"),\n    statusIcon: () => getDefault(\"statusIcon\", true),\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {T | T[]} updated modelValue prop\n     */\n    \"update:model-value\": [value: ModelValue];\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    focus: [event: Event];\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    blur: [event: Event];\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    invalid: [event: Event];\n    /**\n     * on icon click event\n     * @param event {Event} native event\n     */\n    \"icon-click\": [event: Event];\n    /**\n     * on icon right click event\n     * @param event {Event} native event\n     */\n    \"icon-right-click\": [event: Event];\n}>();\n\nconst selectRef = useTemplateRef(\"selectElement\");\n\n// use form input functionality\nconst { checkHtml5Validity, onBlur, onFocus, onInvalid, setFocus, isValid } =\n    useInputHandler(selectRef, emits, props);\n\n// inject parent field component if used inside one\nconst { parentField, statusVariant, statusVariantIcon } = injectField();\n\n// if `id` is given set as `for` property on o-field wrapper\nif (props.id) parentField?.value?.setInputId(props.id);\n\nconst vmodel = defineModel<ModelValue>({\n    get: (value) =>\n        typeof value !== \"undefined\"\n            ? value\n            : ((props.multiple ? [] : \"\") as ModelValue),\n    set: (value) =>\n        typeof value !== \"undefined\"\n            ? value\n            : ((props.multiple ? [] : undefined) as ModelValue),\n    default: undefined,\n});\n\n/**\n * When v-model is changed:\n *  1. Set parent field filled state.\n *  2. Check html5 valdiation\n */\nwatch(\n    vmodel,\n    (value) => {\n        if (parentField?.value) parentField.value.setFilled(!!value);\n        if (!isValid.value) checkHtml5Validity();\n    },\n    { immediate: true, flush: \"post\" },\n);\n\n// create a unique id sequence\nconst { nextSequence } = useSequentialId();\n\n/** normalized programamtic options */\nconst normalizedOptions = computed(() =>\n    normalizeOptions<T>(props.options, nextSequence),\n);\n\nconst placeholderVisible = computed(\n    () =>\n        !isTrueish(props.multiple) &&\n        (!isDefined(vmodel.value) || vmodel.value === \"\"),\n);\n\n// --- Icon Feature ---\n\nconst hasIconRight = computed(\n    () =>\n        (!!props.iconRight && !isTrueish(props.multiple)) ||\n        (props.statusIcon && !!statusVariantIcon.value),\n);\n\nconst rightIcon = computed(() =>\n    props.iconRight ? props.iconRight : statusVariantIcon.value,\n);\n\nconst rightIconVariant = computed(() =>\n    props.iconRight\n        ? props.iconRightVariant || props.variant\n        : statusVariant.value,\n);\n\nfunction iconClick(emit, event: Event): void {\n    emits(emit, event);\n    nextTick(() => setFocus());\n}\n\nfunction leftIconClick(event: Event): void {\n    if (props.iconClickable) iconClick(\"icon-click\", event);\n}\n\nfunction rightIconClick(event: Event): void {\n    if (props.iconRightClickable) iconClick(\"icon-right-click\", event);\n}\n\n// --- Computed Component Classes ---\n\nconst attrs = useAttrs();\n\nconst inputBind = computed(() => ({\n    ...parentField?.value?.inputAttrs,\n    ...attrs,\n}));\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-select\"],\n    [\n        \"sizeClass\",\n        \"o-select--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\n        \"variantClass\",\n        \"o-select--\",\n        computed(() => statusVariant.value || props.variant),\n        computed(() => !!statusVariant.value || !!props.variant),\n    ],\n    [\n        \"expandedClass\",\n        \"o-select--expanded\",\n        null,\n        computed(() => props.expanded),\n    ],\n    [\n        \"disabledClass\",\n        \"o-select--disabled\",\n        null,\n        computed(() => isTrueish(props.disabled)),\n    ],\n    [\n        \"roundedClass\",\n        \"o-select--rounded\",\n        null,\n        computed(() => isTrueish(props.rounded)),\n    ],\n    [\"hasIconRightClass\", \"o-select--icon-right\", null, hasIconRight],\n    [\n        \"multipleClass\",\n        \"o-select--multiple\",\n        null,\n        computed(() => isTrueish(props.multiple)),\n    ],\n);\n\nconst selectClasses = defineClasses(\n    [\"selectClass\", \"o-select__input\"],\n    [\n        \"iconLeftSpaceClass\",\n        \"o-select__input--iconspace-left\",\n        null,\n        computed(() => !!props.icon),\n    ],\n    [\n        \"iconRightSpaceClass\",\n        \"o-select__input--iconspace-right\",\n        null,\n        hasIconRight,\n    ],\n    [\n        \"placeholderClass\",\n        \"o-select__input--placeholder\",\n        null,\n        placeholderVisible,\n    ],\n    [\n        \"arrowedClass\",\n        \"o-select__input--arrowed\",\n        null,\n        computed(() => !hasIconRight.value && !isTrueish(props.multiple)),\n    ],\n);\n\nconst iconLeftClasses = defineClasses([\"iconLeftClass\", \"o-select__icon-left\"]);\n\nconst iconRightClasses = defineClasses([\n    \"iconRightClass\",\n    \"o-select__icon-right\",\n]);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: setFocus, value: vmodel });\n</script>\n\n<template>\n    <div data-oruga=\"select\" :class=\"rootClasses\">\n        <o-icon\n            v-if=\"icon\"\n            :class=\"iconLeftClasses\"\n            :clickable=\"iconClickable\"\n            :icon=\"icon\"\n            :pack=\"iconPack\"\n            :size=\"size\"\n            @click=\"leftIconClick($event)\" />\n\n        <select\n            v-bind=\"inputBind\"\n            :id=\"id\"\n            ref=\"selectElement\"\n            v-model=\"vmodel\"\n            data-oruga-input=\"select\"\n            :class=\"selectClasses\"\n            :autocomplete=\"autocomplete\"\n            :multiple=\"props.multiple\"\n            :size=\"nativeSize\"\n            :disabled=\"disabled\"\n            :required=\"required\"\n            @blur=\"onBlur\"\n            @focus=\"onFocus\"\n            @invalid=\"onInvalid\">\n            <template v-if=\"placeholder || $slots.placeholder\">\n                <option v-if=\"placeholderVisible\" value=\"\" disabled hidden>\n                    <!--\n                        @slot Override the placeholder\n                    -->\n                    <slot name=\"placeholder\">\n                        {{ placeholder }}\n                    </slot>\n                </option>\n            </template>\n\n            <!--\n                @slot Override the options, default is options prop\n            -->\n            <slot>\n                <template v-for=\"option in normalizedOptions\" :key=\"option.key\">\n                    <optgroup\n                        v-if=\"isGroupOption(option)\"\n                        v-show=\"!option.hidden\"\n                        v-bind=\"option.attrs\"\n                        :label=\"option.label\"\n                        :value=\"option.value\">\n                        <option\n                            v-for=\"_option in option.options\"\n                            v-show=\"!_option.hidden\"\n                            v-bind=\"_option.attrs\"\n                            :key=\"_option.key\"\n                            :value=\"_option.value\"\n                            :selected=\"option.value === vmodel\">\n                            {{ _option.label }}\n                        </option>\n                    </optgroup>\n\n                    <option\n                        v-else\n                        v-show=\"!option.hidden\"\n                        v-bind=\"option.attrs\"\n                        :value=\"option.value\"\n                        :selected=\"option.value === vmodel\">\n                        {{ option.label }}\n                    </option>\n                </template>\n            </slot>\n        </select>\n\n        <o-icon\n            v-if=\"hasIconRight\"\n            :class=\"iconRightClasses\"\n            :clickable=\"iconRightClickable\"\n            :icon=\"rightIcon\"\n            :pack=\"iconPack\"\n            :size=\"size\"\n            :variant=\"rightIconVariant\"\n            both\n            @click=\"rightIconClick\" />\n    </div>\n</template>\n","<script setup lang=\"ts\">\nimport {\n    computed,\n    useAttrs,\n    ref,\n    watch,\n    nextTick,\n    useTemplateRef,\n    type PropType,\n} from \"vue\";\n\nimport ODropdown from \"../dropdown/Dropdown.vue\";\nimport ODropdownItem from \"../dropdown/DropdownItem.vue\";\nimport OInput from \"../input/Input.vue\";\n\nimport { isDate, isDefined, isMobileAgent, isTrueish } from \"@/utils/helpers\";\nimport { isClient } from \"@/utils/ssr\";\nimport {\n    getActiveClasses,\n    useEventListener,\n    useInputHandler,\n} from \"@/composables\";\n\nimport { injectField } from \"../field/fieldInjection\";\n\nimport type { ClassBind, ComponentClass } from \"@/types\";\n\n/**\n * This is a internal used component.\n * Used by Datepicker and Timepicker.\n */\ndefineOptions({\n    name: \"OPickerWrapper\",\n});\n\nconst props = defineProps({\n    /** the internal input value */\n    value: {\n        type: [Date, Array] as PropType<Date | Date[] | undefined>,\n        default: undefined,\n    },\n    /** the active state of the dropdown */\n    active: { type: Boolean, default: false },\n    /** parent picker component props  */\n    pickerProps: { type: Object, required: true },\n    /** data-oruga attribute value */\n    dataOruga: { type: String, required: true },\n    /** format props value to input value */\n    formatter: {\n        type: Function as PropType<\n            (value: Date | Date[] | undefined, isNative: boolean) => string\n        >,\n        required: true,\n    },\n    /** parse input value to props value */\n    parser: {\n        type: Function as PropType<\n            (value: string, isNative: boolean) => Date | Date[] | undefined\n        >,\n        required: true,\n    },\n    type: { type: String, required: true },\n    step: { type: String, default: undefined },\n    min: { type: Date, default: undefined },\n    max: { type: Date, default: undefined },\n    stayOpen: { type: Boolean, default: false },\n    /** the DateTimeFormat object to watch for to update the parsed input value */\n    dtf: { type: Object, default: undefined },\n    rootClasses: { type: Array as PropType<ClassBind[]>, required: true },\n    dropdownClasses: { type: Array as PropType<ClassBind[]>, required: true },\n    boxClass: { type: Array as PropType<ComponentClass>, required: true },\n});\n\nconst emits = defineEmits<{\n    /**\n     * active prop two-way binding\n     * @param value {Date, Date[]} updated active prop\n     */\n    \"update:value\": [value: Date | Date[] | undefined];\n    /**\n     * active prop two-way binding\n     * @param value {boolean} updated active prop\n     */\n    \"update:active\": [value: boolean];\n    /** on input focus event */\n    focus: [event: Event];\n    /** on input blur event */\n    blur: [event: Event];\n    /** on input invalid event */\n    invalid: [event: Event];\n    /** on icon click event */\n    \"icon-click\": [event: Event];\n    /** on icon right click event */\n    \"icon-right-click\": [event: Event];\n    /** on dropdown left button press event */\n    left: [event: Event];\n    /** on dropdown right button press event */\n    right: [event: Event];\n}>();\n\nconst isMobileNative = computed(\n    () =>\n        !isTrueish(props.pickerProps.inline) &&\n        isTrueish(props.pickerProps.mobileNative) &&\n        isMobileAgent.any(),\n);\n\n// inject parent field component if used inside one\nconst { parentField } = injectField();\n\nconst dropdownRef = useTemplateRef(\"dropdownComponent\");\nconst inputRef = useTemplateRef(\"inputComponent\");\nconst nativeInputRef = useTemplateRef(\"nativeInputComponent\");\n\nconst elementRef = computed(() =>\n    isMobileNative.value ? nativeInputRef.value : inputRef.value,\n);\n\n// use form input functionality for native input\nconst {\n    input,\n    checkHtml5Validity,\n    setFocus,\n    onBlur,\n    onFocus,\n    onInvalid,\n    isValid,\n} = useInputHandler<HTMLInputElement>(elementRef, emits, props.pickerProps);\n\n/**\n * Show input as text for placeholder,\n * when placeholder and no native value is given.\n */\nconst initialNativeType =\n    !isDefined(props.pickerProps.placeholder) || isTrueish(props.value)\n        ? props.type\n        : \"text\";\n\n/** the v-model value of the input */\nconst inputValue = ref(\"\");\n\n/**\n * When v-model is changed:\n *  1. Update internal value.\n *  2. Close picker.\n *  3. If it's invalid, validate again.\n */\nwatch(\n    () => props.value,\n    (value) => {\n        // update internal value\n        inputValue.value = props.formatter(value, isMobileNative.value);\n\n        // toggle picker if not stay open\n        if (!isMobileNative.value && !props.stayOpen) togglePicker(false);\n        // validate if its invalid\n        if (!isValid.value) checkHtml5Validity();\n    },\n    { immediate: true },\n);\n\n// update the parsed input value when the dtf change\nwatch(\n    () => props.dtf,\n    () => setValue(inputValue.value),\n);\n\n/** Set the vmodel value and update the prop value */\nfunction setValue(value: string): void {\n    // parse to date\n    let date = props.parser(value, isMobileNative.value);\n\n    // check min/max dates\n    if (Array.isArray(date)) date = date.map(checkMinMaxDate);\n    else if (isDefined(date)) date = checkMinMaxDate(date);\n\n    nextTick(\n        () =>\n            // reparse to string for internal value\n            (inputValue.value = props.formatter(date, isMobileNative.value)),\n    );\n\n    // update the prop value\n    emits(\"update:value\", date);\n}\n\nfunction checkMinMaxDate(date: Date): Date {\n    if (!isDate(date)) return date;\n    if (props.min && date < props.min) date = props.min;\n    else if (props.max && date > props.max) date = props.max;\n    return date;\n}\n\nconst isActive = defineModel<boolean>(\"active\", { default: false });\n\nwatch(isActive, onActiveChange);\n\nconst triggers = computed(() =>\n    isTrueish(props.pickerProps.openOnFocus) ? [\"click\"] : [],\n);\n\nif (isClient) useEventListener(document, \"keyup\", onKeyPress);\n\n/** Keypress event that is bound to the document. */\nfunction onKeyPress(event: KeyboardEvent): void {\n    if (isActive.value && (event.key === \"Escape\" || event.key === \"Esc\"))\n        togglePicker(false);\n}\n\n// --- PICKER EVENT HANDLER ---\n\n/** Toggle picker */\nfunction togglePicker(active: boolean): void {\n    if (!dropdownRef.value) return;\n    if (active || isTrueish(props.pickerProps.closeOnClick))\n        nextTick(() => (isActive.value = active));\n}\n\n/** Avoid dropdown toggle when is already visible */\nfunction onInputClick(event): void {\n    if (isActive.value) event.stopPropagation();\n}\n\n/** Emit 'blur' event on dropdown is not active (closed) */\nfunction onActiveChange(value: boolean): void {\n    if (value) onFocus(new Event(\"focus\"));\n    else if (!value) onBlur(new Event(\"blur\"));\n}\n\n// --- NATIVE EVENT HANDLER ---\n\nfunction onChange(event: Event): void {\n    setValue((event.target as HTMLInputElement).value);\n}\n\nfunction onNativeClick(event: Event): void {\n    // do nothing if client is not mobile\n    if (!isMobileNative.value || !input.value) return;\n\n    // when input is not editable jet\n    if (input.value.type === \"text\") {\n        event.preventDefault();\n        event.stopPropagation();\n\n        // blur the current state to remove active native keyboards for type 'text'\n        input.value.blur();\n\n        setTimeout(() => {\n            if (!input.value) return;\n            // make the input editable\n            input.value.readOnly = false;\n            input.value.type = props.type;\n\n            // focus the underlaying input element again to open native keyboards for type 'date'\n            setFocus();\n        }, 50);\n    }\n}\n\nfunction onNativeFocus(event: Event): void {\n    // do nothing if client is not mobile\n    if (!isMobileNative.value || !input.value) return;\n\n    // when input is not editable jet\n    if (input.value.type === \"text\") {\n        // prevent focus\n        event.preventDefault();\n        event.stopPropagation();\n    }\n    // only emit focus event if editable\n    else onFocus(event);\n}\n\nfunction onNativeBlur(event: Event): void {\n    // do nothing if client is not mobile\n    if (!isMobileNative.value || !input.value) return;\n\n    // when the input does not have any value\n    if (!input.value.value) {\n        // make the input uneditable\n        input.value.readOnly = true;\n        input.value.type = \"text\";\n    }\n    // emit blur event\n    onBlur(event);\n}\n\nfunction onNativeChange(event: Event): void {\n    const value = (event.target as HTMLInputElement).value\n        ? (event.target as HTMLInputElement).value\n        : \"\";\n\n    // when the input does not have any value\n    if (!value && input.value) {\n        input.value.value = value;\n        input.value.blur();\n    }\n\n    setValue(value);\n}\n\n// --- Computed Component Classes ---\n\nconst attrs = useAttrs();\n\nconst inputBind = computed(() => ({\n    ...parentField?.value?.inputAttrs,\n    ...attrs,\n    inputClass: props.pickerProps.inputClass,\n    ...props.pickerProps.inputClasses,\n}));\n\nconst dropdownBind = computed(() => ({\n    \"root-class\": getActiveClasses(props.dropdownClasses),\n    \"teleport-class\": getActiveClasses(props.rootClasses),\n    ...props.pickerProps.dropdownClasses,\n}));\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: setFocus });\n</script>\n\n<template>\n    <div :data-oruga=\"dataOruga\" :class=\"rootClasses\" @click=\"onNativeClick\">\n        <o-dropdown\n            v-if=\"!isMobileNative\"\n            ref=\"dropdownComponent\"\n            v-bind=\"dropdownBind\"\n            v-model:active=\"isActive\"\n            :triggers=\"triggers\"\n            :position=\"pickerProps.position\"\n            :disabled=\"pickerProps.disabled\"\n            :inline=\"pickerProps.inline\"\n            :mobile-modal=\"pickerProps.mobileModal\"\n            :desktop-modal=\"pickerProps.desktopModal\"\n            :mobile-breakpoint=\"pickerProps.mobileBreakpoint\"\n            :teleport=\"pickerProps.teleport\">\n            <template v-if=\"!pickerProps.inline\" #trigger>\n                <slot name=\"trigger\">\n                    <o-input\n                        ref=\"inputComponent\"\n                        v-bind=\"inputBind\"\n                        v-model=\"inputValue\"\n                        :placeholder=\"pickerProps.placeholder\"\n                        :size=\"pickerProps.size\"\n                        :icon-pack=\"pickerProps.iconPack\"\n                        :icon=\"pickerProps.icon\"\n                        :icon-right=\"pickerProps.iconRight\"\n                        :icon-right-clickable=\"pickerProps.iconRightClickable\"\n                        :expanded=\"pickerProps.expanded\"\n                        :rounded=\"pickerProps.rounded\"\n                        :disabled=\"pickerProps.disabled\"\n                        :readonly=\"pickerProps.readonly\"\n                        autocomplete=\"off\"\n                        :use-html5-validation=\"false\"\n                        @invalid=\"onInvalid\"\n                        @click=\"onInputClick\"\n                        @keyup.enter=\"togglePicker(true)\"\n                        @change=\"onChange\"\n                        @focus=\"onFocus\"\n                        @blur=\"onBlur\"\n                        @icon-click=\"$emit('icon-click', $event)\"\n                        @icon-right-click=\"$emit('icon-right-click', $event)\" />\n                </slot>\n            </template>\n\n            <o-dropdown-item\n                override\n                tag=\"div\"\n                :item-class=\"boxClass\"\n                :disabled=\"pickerProps.disabled\"\n                :clickable=\"false\"\n                @keydown.left=\"$emit('left', $event)\"\n                @keydown.right=\"$emit('right', $event)\">\n                <slot />\n            </o-dropdown-item>\n        </o-dropdown>\n\n        <!-- Native Picker -->\n        <template v-else>\n            <slot name=\"trigger\">\n                <o-input\n                    ref=\"nativeInputComponent\"\n                    v-bind=\"inputBind\"\n                    v-model=\"inputValue\"\n                    :type=\"initialNativeType\"\n                    :min=\"formatter(min, true)\"\n                    :max=\"formatter(max, true)\"\n                    :step=\"step\"\n                    :placeholder=\"pickerProps.placeholder\"\n                    :size=\"pickerProps.size\"\n                    :icon-pack=\"pickerProps.iconPack\"\n                    :icon=\"pickerProps.icon\"\n                    :icon-right=\"pickerProps.iconRight\"\n                    :icon-right-clickable=\"pickerProps.iconRightClickable\"\n                    :rounded=\"pickerProps.rounded\"\n                    :disabled=\"pickerProps.disabled\"\n                    :readonly=\"initialNativeType == 'text'\"\n                    autocomplete=\"off\"\n                    :use-html5-validation=\"false\"\n                    @change=\"onNativeChange\"\n                    @focus=\"onNativeFocus\"\n                    @blur=\"onNativeBlur\"\n                    @invalid=\"onInvalid\"\n                    @icon-click=\"$emit('icon-click', $event)\"\n                    @icon-right-click=\"$emit('icon-right-click', $event)\" />\n            </slot>\n        </template>\n    </div>\n</template>\n","type MonthType =\n    | \"numeric\"\n    | \"2-digit\"\n    | \"long\"\n    | \"short\"\n    | \"narrow\"\n    | undefined;\n\n/**\n * Return month names according to a specified locale\n * @param  {String} locale A bcp47 localerouter. undefined will use the user browser locale\n * @param  {String} format long (ex. March), short (ex. Mar) or narrow (M)\n * @return {Array<String>} An array of month names\n */\nexport function getMonthNames(\n    locale?: string,\n    format: MonthType = \"long\",\n): string[] {\n    const dates: Date[] = [];\n    for (let i = 0; i < 12; i++) {\n        dates.push(new Date(2000, i, 15));\n    }\n    const dtf = new Intl.DateTimeFormat(locale, {\n        month: format,\n    });\n    return dates.map((d) => dtf.format(d));\n}\n\ntype WeekdayType = \"long\" | \"short\" | \"narrow\" | undefined;\n\n/**\n * Return weekday names according to a specified locale\n * @param  {String} locale A bcp47 localerouter. undefined will use the user browser locale\n * @param  {Number} first day of week index\n * @param  {String} format long (ex. Thursday), short (ex. Thu) or narrow (T)\n * @return {Array<String>} An array of weekday names\n */\nexport function getWeekdayNames(\n    locale?: string,\n    firstDayOfWeek: number = 0,\n    format: WeekdayType = \"narrow\",\n): string[] {\n    const dates: Date[] = [];\n    for (let i = 1, j = 0; j < 7; i++) {\n        const d = new Date(2000, 0, i);\n        const day = d.getDay();\n        if (day === firstDayOfWeek || j > 0) {\n            dates.push(d);\n            j++;\n        }\n    }\n    const dtf = new Intl.DateTimeFormat(locale, {\n        weekday: format,\n    });\n    return dates.map((d) => dtf.format(d));\n}\n\n/**\n * Accept a regex with group names and return an object\n * ex. matchWithGroups(/((?!=<year>)\\d+)\\/((?!=<month>)\\d+)\\/((?!=<day>)\\d+)/, '2000/12/25')\n * will return { year: 2000, month: 12, day: 25 }\n * @param  {String} includes injections of (?!={groupname}) for each group\n * @param  {String} the string to run regex\n * @return {Object} an object with a property for each group having the group's match as the value\n */\nexport function matchWithGroups(pattern: string, str: string): any {\n    const matches = str.match(pattern);\n    return (\n        // get the pattern as a string\n        pattern\n            .toString()\n            // suss out the groups\n            .match(/<(.+?)>/g)\n            // remove the braces\n            ?.map((group) => {\n                const groupMatches = group.match(/<(.+)>/);\n                if (!groupMatches || groupMatches.length <= 0) {\n                    return null;\n                }\n                const match = group.match(/<(.+)>/);\n                return match && match?.length > 1 ? match[1] : null;\n            })\n            // create an object with a property for each group having the group's match as the value\n            .reduce((acc, curr, index) => {\n                if (curr === null) return acc;\n                if (matches && matches.length > index) {\n                    acc[curr] = matches[index + 1];\n                } else {\n                    acc[curr] = null;\n                }\n                return acc;\n            }, {} as any)\n    );\n}\n\n/** Return array of all days in the week that the startingDate is within */\nexport function weekBuilder(\n    startingDate: number,\n    month: number,\n    year: number,\n    firstDayOfWeek: number,\n): Date[] {\n    const thisMonth = new Date(year, month);\n\n    const thisWeek: Date[] = [];\n\n    const dayOfWeek = new Date(year, month, startingDate).getDay();\n\n    const end =\n        dayOfWeek >= firstDayOfWeek\n            ? dayOfWeek - firstDayOfWeek\n            : 7 - firstDayOfWeek + dayOfWeek;\n\n    let daysAgo = 1;\n    for (let i = 0; i < end; i++) {\n        thisWeek.unshift(\n            new Date(\n                thisMonth.getFullYear(),\n                thisMonth.getMonth(),\n                startingDate - daysAgo,\n            ),\n        );\n        daysAgo++;\n    }\n\n    thisWeek.push(new Date(year, month, startingDate));\n\n    let daysForward = 1;\n    while (thisWeek.length < 7) {\n        thisWeek.push(new Date(year, month, startingDate + daysForward));\n        daysForward++;\n    }\n\n    return thisWeek;\n}\n\nexport function firstWeekOffset(year, dow, doy): number {\n    // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    const fwd = 7 + dow - doy;\n    // first-week day local weekday -- which local weekday is fwd\n    const firstJanuary = new Date(year, 0, fwd);\n    const fwdlw = (7 + firstJanuary.getDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n}\n\n/** Return the number of days in a specific year */\nexport function daysInYear(year): number {\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0 ? 366 : 365;\n}\n\n/** Return the number of weeks in a specific year */\nexport function weeksInYear(year, dow, doy): number {\n    const weekOffset = firstWeekOffset(year, dow, doy);\n    const weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n}\n","import { computed } from \"vue\";\nimport { matchWithGroups } from \"./utils\";\nimport { isTrueish } from \"@/utils/helpers\";\nimport type { DatepickerProps } from \"./props\";\n\n/** Time Format Feature */\nexport function useDatepickerMixins<R extends boolean, M extends boolean>(\n    props: DatepickerProps<R, M>,\n) {\n    /**\n     * Check that selected date is within earliest/latest params and\n     * is within a given month\n     */\n    function isDateSelectable(date: Date, month: number): boolean {\n        const validity: boolean[] = [];\n\n        if (props.minDate) validity.push(date >= props.minDate);\n        if (props.maxDate) validity.push(date <= props.maxDate);\n\n        if (props.nearbyMonthDays && !props.nearbySelectableMonthDays)\n            validity.push(date.getMonth() === month);\n\n        if (props.selectableDates) {\n            if (typeof props.selectableDates === \"function\") {\n                if (props.selectableDates(date)) return true;\n                else validity.push(false);\n            } else {\n                for (let i = 0; i < props.selectableDates.length; i++) {\n                    const enabledDate = props.selectableDates[i];\n                    if (\n                        date.getDate() === enabledDate.getDate() &&\n                        date.getFullYear() === enabledDate.getFullYear() &&\n                        date.getMonth() === enabledDate.getMonth()\n                    )\n                        return true;\n                    else validity.push(false);\n                }\n            }\n        }\n\n        if (props.unselectableDates) {\n            if (typeof props.unselectableDates === \"function\") {\n                validity.push(!props.unselectableDates(date));\n            } else {\n                for (let i = 0; i < props.unselectableDates.length; i++) {\n                    const disabledDate = props.unselectableDates[i];\n                    validity.push(\n                        date.getDate() !== disabledDate.getDate() ||\n                            date.getFullYear() !== disabledDate.getFullYear() ||\n                            date.getMonth() !== disabledDate.getMonth(),\n                    );\n                }\n            }\n        }\n\n        if (props.unselectableDaysOfWeek) {\n            for (let i = 0; i < props.unselectableDaysOfWeek.length; i++) {\n                const dayOfWeek = props.unselectableDaysOfWeek[i];\n                validity.push(date.getDay() !== dayOfWeek);\n            }\n        }\n\n        return validity.indexOf(false) < 0;\n    }\n\n    const isTypeMonth = computed(() => props.type === \"month\");\n\n    const localeOptions = computed(\n        () =>\n            new Intl.DateTimeFormat(props.locale, {\n                year: \"numeric\",\n                month: \"numeric\",\n            }).resolvedOptions() as Intl.DateTimeFormatOptions,\n    );\n\n    /** DateTime Format */\n    const dtf = computed(\n        () => new Intl.DateTimeFormat(props.locale /*, { timeZone: 'UTC' }*/),\n    );\n\n    /** DateTime Month Format */\n    const dtfMonth = computed(\n        () =>\n            new Intl.DateTimeFormat(props.locale, {\n                year: localeOptions.value.year || \"numeric\",\n                month: localeOptions.value.month || \"2-digit\",\n                // timeZone: 'UTC'\n            }),\n    );\n\n    const sampleTime = computed(() => {\n        const d = dateCreator();\n        d.setHours(10);\n        d.setSeconds(0);\n        d.setMinutes(0);\n        d.setMilliseconds(0);\n        return d;\n    });\n\n    function dateCreator(): Date {\n        return typeof props.creator === \"function\"\n            ? props.creator()\n            : new Date();\n    }\n\n    /** Format date into string */\n    function dateFormatter(date: typeof props.modelValue): string {\n        if (typeof props.formatter === \"function\") return props.formatter(date);\n\n        if (!date) return \"\";\n        const targetDates: Date[] = Array.isArray(date) ? date : [date];\n        if (!targetDates.length) return \"\";\n        const dates = targetDates.map((date) => {\n            const d = new Date(\n                date.getFullYear(),\n                date.getMonth(),\n                date.getDate(),\n                12,\n            );\n            return !isTypeMonth.value\n                ? dtf.value.format(d)\n                : dtfMonth.value.format(d);\n        });\n\n        return !isTrueish(props.multiple) && !isTrueish(props.range)\n            ? dates.join(\" - \")\n            : dates.join(\", \");\n    }\n\n    /** Parse a string into a date */\n    function dateParser(date: string): typeof props.modelValue {\n        if (typeof props.parser === \"function\") return props.parser(date);\n\n        if (!date) return undefined;\n        const isArray = isTrueish(props.multiple) || isTrueish(props.range);\n        const targetDates = !isArray ? [date] : date.split(\", \");\n        const dates = targetDates.map((date) => {\n            if (\n                dtf.value.formatToParts &&\n                typeof dtf.value.formatToParts === \"function\"\n            ) {\n                const formatRegex = (\n                    isTypeMonth.value ? dtfMonth.value : dtf.value\n                )\n                    .formatToParts(sampleTime.value)\n                    .map((part) => {\n                        if (part.type === \"literal\") return part.value;\n                        return `((?!=<${part.type}>)\\\\d+)`;\n                    })\n                    .join(\"\");\n                const dateGroups = matchWithGroups(formatRegex, date);\n\n                // We do a simple validation for the group.\n                // If it is not valid, it will fallback to Date.parse below\n                if (\n                    dateGroups.year &&\n                    dateGroups.year.length === 4 &&\n                    dateGroups.month &&\n                    dateGroups.month <= 12\n                ) {\n                    if (isTypeMonth.value)\n                        return new Date(dateGroups.year, dateGroups.month - 1);\n                    else if (dateGroups.day && dateGroups.day <= 31) {\n                        return new Date(\n                            dateGroups.year,\n                            dateGroups.month - 1,\n                            dateGroups.day,\n                            12,\n                        );\n                    }\n                }\n            }\n            // Fallback if formatToParts is not supported or if we were not able to parse a valid date\n            if (!isTypeMonth.value) return new Date(Date.parse(date));\n            const s = date.split(\"/\");\n            const year = s[0].length === 4 ? s[0] : s[1];\n            const month = s[0].length === 2 ? s[0] : s[1];\n            if (year && month) {\n                return new Date(\n                    parseInt(year, 10),\n                    parseInt(month, 10) - 1,\n                    1,\n                    0,\n                    0,\n                    0,\n                    0,\n                );\n            }\n        });\n        return (isArray ? dates : dates[0]) as typeof props.modelValue;\n    }\n\n    return {\n        dtf,\n        isDateSelectable,\n        dateCreator,\n        dateParser,\n        dateFormatter,\n    };\n}\n","<script\n    setup\n    lang=\"ts\"\n    generic=\"IsRange extends boolean, IsMultiple extends boolean\">\nimport {\n    computed,\n    watch,\n    nextTick,\n    ref,\n    effectScope,\n    onUnmounted,\n    type PropType,\n    type ComponentPublicInstance,\n} from \"vue\";\n\nimport { defineClasses } from \"@/composables\";\nimport { isTrueish } from \"@/utils/helpers\";\n\nimport { useDatepickerMixins } from \"./useDatepickerMixins\";\nimport { weeksInYear, firstWeekOffset } from \"./utils\";\n\nimport type { DatepickerEvent } from \"./types\";\nimport type { DatepickerProps } from \"./props\";\nimport type { ClassBind } from \"@/types\";\n\ndefineOptions({\n    name: \"ODatepickerTableRow\",\n    configField: \"datepicker\",\n});\n\nconst props = defineProps({\n    day: { type: Number, required: true },\n    week: { type: Array as PropType<Date[]>, required: true },\n    month: { type: Number, required: true },\n    selectedDate: {\n        type: [Date, Array] as PropType<Date | Date[]>,\n        default: undefined,\n    },\n    events: { type: Array as PropType<DatepickerEvent[]>, default: undefined },\n    hoveredDateRange: { type: Array as PropType<Date[]>, required: true },\n    pickerProps: {\n        type: Object as PropType<DatepickerProps<IsRange, IsMultiple>>,\n        required: true,\n    },\n});\n\nconst emits = defineEmits<{\n    select: [value: Date];\n    \"hover-enddate\": [value: Date];\n    \"change-focus\": [value: Date];\n    \"week-number-click\": [value: number];\n}>();\n\nconst { isDateSelectable, dateCreator } = useDatepickerMixins(\n    props.pickerProps,\n);\n\nconst hasEvents = computed(() => !!props.events?.length);\n\nconst dayRefs = ref(new Map());\n\nfunction setDayRef(\n    date: Date,\n    el: Element | ComponentPublicInstance | null,\n): void {\n    const refKey = `day-${date.getMonth()}-${date.getDate()}`;\n    if (el) dayRefs.value.set(refKey, el);\n}\n\nwatch(\n    () => props.day,\n    (day) => {\n        // if day is in week\n        if (props.week.map((d) => d.getDate()).includes(day))\n            nextTick(() => {\n                // $nextTick is needed when month is changed\n                const refKey = `day-${props.month}-${day}`;\n                const ref = dayRefs.value.get(refKey);\n                if (ref) ref.focus();\n            });\n    },\n);\n\nwatch(\n    () => props.month,\n    // clear day refs on month change\n    () => (dayRefs.value = new Map()),\n);\n\nfunction clickWeekNumber(week: number): void {\n    if (props.pickerProps.weekNumberClickable) emits(\"week-number-click\", week);\n}\n\nfunction getDayOfYear(input): number {\n    return (\n        Math.round(\n            (input.getTime() - new Date(input.getFullYear(), 0, 1).getTime()) /\n                864e5,\n        ) + 1\n    );\n}\n\nfunction getWeekNumber(mom): number {\n    const dow = props.pickerProps.firstDayOfWeek; // first day of week\n    // Rules for the first week : 1 for the 1st January, 4 for the 4th January\n    const doy = props.pickerProps.rulesForFirstWeek;\n    const weekOffset = firstWeekOffset(mom.getFullYear(), dow, doy);\n    const week = Math.floor((getDayOfYear(mom) - weekOffset - 1) / 7) + 1;\n    let resWeek;\n    let resYear;\n    if (week < 1) {\n        resYear = mom.getFullYear() - 1;\n        resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.getFullYear(), dow, doy)) {\n        resWeek = week - weeksInYear(mom.getFullYear(), dow, doy);\n        resYear = mom.getFullYear() + 1;\n    } else {\n        resYear = mom.getFullYear();\n        resWeek = week;\n    }\n    return resWeek;\n}\n\nfunction eventsDateMatch(day: Date): DatepickerEvent[] {\n    if (!props.events?.length) return [];\n    return props.events.filter((event) => event.date.getDay() === day.getDay());\n}\n\n// --- Event Handlers ---\n\nfunction onKeydown(event: KeyboardEvent, weekDay: Date): void {\n    let preventDefault = true;\n    switch (event.key) {\n        case \"Tab\": {\n            preventDefault = false;\n            break;\n        }\n        case \" \":\n        case \"Space\":\n        case \"Spacebar\":\n        case \"Enter\": {\n            selectDate(weekDay);\n            break;\n        }\n\n        case \"ArrowLeft\":\n        case \"Left\": {\n            changeFocus(weekDay, -1);\n            break;\n        }\n        case \"ArrowRight\":\n        case \"Right\": {\n            changeFocus(weekDay, 1);\n            break;\n        }\n        case \"ArrowUp\":\n        case \"Up\": {\n            changeFocus(weekDay, -7);\n            break;\n        }\n        case \"ArrowDown\":\n        case \"Down\": {\n            changeFocus(weekDay, 7);\n            break;\n        }\n    }\n    if (preventDefault) event.preventDefault();\n}\n\n/** Emit select event with chosen date as payload */\nfunction selectDate(date: Date): void {\n    if (props.pickerProps.disabled || props.pickerProps.readonly) return;\n    if (isDateSelectable(date, props.month)) emits(\"select\", date);\n}\n\nfunction changeFocus(day, inc): void {\n    const nextDay = new Date(day.getTime());\n    nextDay.setDate(day.getDate() + inc);\n    // if next day is out of range or not selectable, move to next selectable date\n    while (\n        (props.pickerProps.minDate && nextDay < props.pickerProps.minDate) ||\n        (props.pickerProps.maxDate && nextDay > props.pickerProps.maxDate) ||\n        !isDateSelectable(nextDay, nextDay.getMonth())\n    ) {\n        // revert day selection until selectable day is reached\n        nextDay.setDate(nextDay.getDate() - Math.sign(inc));\n    }\n    setRangeHoverEndDate(nextDay);\n    emits(\"change-focus\", nextDay);\n}\n\nfunction setRangeHoverEndDate(day): void {\n    if (isTrueish(props.pickerProps.range)) emits(\"hover-enddate\", day);\n}\n\n// --- Computed Component Classes ---\n\nfunction dateMatch(\n    dateOne: Date,\n    dateTwo?: Date | Date[],\n    multiple = false,\n): boolean {\n    // if either date is null or undefined, return false\n    // if using multiple flag, return false\n    if (!dateOne || !dateTwo || multiple) return false;\n\n    if (Array.isArray(dateTwo))\n        return dateTwo.some(\n            (date) =>\n                dateOne.getDate() === date.getDate() &&\n                dateOne.getFullYear() === date.getFullYear() &&\n                dateOne.getMonth() === date.getMonth(),\n        );\n\n    return (\n        dateOne.getDate() === dateTwo.getDate() &&\n        dateOne.getFullYear() === dateTwo.getFullYear() &&\n        dateOne.getMonth() === dateTwo.getMonth()\n    );\n}\n\nfunction dateWithin(\n    dateOne: Date,\n    dates?: Date | Date[],\n    multiple = false,\n): boolean {\n    if (!Array.isArray(dates) || multiple) return false;\n    return dateOne > dates[0] && dateOne < dates[1];\n}\n\nconst scope = effectScope();\n\n// stop all scope effects\nonUnmounted(() => scope.stop());\n\n/** Build cellClasses for cell using validations */\nfunction cellClasses(day: Date): ClassBind[] {\n    const classes = defineClasses(\n        [\n            \"tableCellSelectedClass\",\n            \"o-datepicker__table__cell--selected\",\n            null,\n            dateMatch(day, props.selectedDate) ||\n                dateWithin(\n                    day,\n                    props.selectedDate,\n                    isTrueish(props.pickerProps.multiple),\n                ),\n        ],\n        [\n            \"tableCellFirstSelectedClass\",\n            \"o-datepicker__table__cell--first-selected\",\n            null,\n            dateMatch(\n                day,\n                Array.isArray(props.selectedDate)\n                    ? props.selectedDate[0]\n                    : undefined,\n                isTrueish(props.pickerProps.multiple),\n            ),\n        ],\n        [\n            \"tableCellWithinSelectedClass\",\n            \"o-datepicker__table__cell--within-selected\",\n            null,\n            dateWithin(\n                day,\n                props.selectedDate,\n                isTrueish(props.pickerProps.multiple),\n            ),\n        ],\n        [\n            \"tableCellLastSelectedClass\",\n            \"o-datepicker__table__cell--last-selected\",\n            null,\n            dateMatch(\n                day,\n                Array.isArray(props.selectedDate)\n                    ? props.selectedDate[1]\n                    : undefined,\n                isTrueish(props.pickerProps.multiple),\n            ),\n        ],\n        [\n            \"tableCellFirstHoveredClass\",\n            \"o-datepicker__table__cell--first-hovered\",\n            null,\n            dateMatch(\n                day,\n                Array.isArray(props.hoveredDateRange)\n                    ? props.hoveredDateRange[0]\n                    : undefined,\n            ),\n        ],\n        [\n            \"tableCellWithinHoveredClass\",\n            \"o-datepicker__table__cell--within-hovered\",\n            null,\n            dateWithin(day, props.hoveredDateRange),\n        ],\n        [\n            \"tableCellLastHoveredClass\",\n            \"o-datepicker__table__cell--last-hovered\",\n            null,\n            dateMatch(\n                day,\n                Array.isArray(props.hoveredDateRange)\n                    ? props.hoveredDateRange[1]\n                    : undefined,\n            ),\n        ],\n        [\n            \"tableCellTodayClass\",\n            \"o-datepicker__table__cell--today\",\n            null,\n            dateMatch(day, dateCreator()),\n        ],\n        [\n            \"tableCellSelectableClass\",\n            \"o-datepicker__table__cell--selectable\",\n            null,\n            isDateSelectable(day, props.month) &&\n                !props.pickerProps.disabled &&\n                !props.pickerProps.readonly,\n        ],\n        [\n            \"tableCellUnselectableClass\",\n            \"o-datepicker__table__cell--unselectable\",\n            null,\n            !isDateSelectable(day, props.month) || props.pickerProps.disabled,\n        ],\n        [\n            \"tableCellInvisibleClass\",\n            \"o-datepicker__table__cell--invisible\",\n            null,\n            !props.pickerProps.nearbyMonthDays &&\n                day.getMonth() !== props.month,\n        ],\n        [\n            \"tableCellNearbyClass\",\n            \"o-datepicker__table__cell--nearby\",\n            null,\n            props.pickerProps.nearbySelectableMonthDays &&\n                day.getMonth() !== props.month,\n        ],\n        // pass effect scope for rectivity binding\n        { scope },\n    );\n\n    return [\n        ...tableCellClasses.value,\n        ...cellEventsClass.value,\n        ...classes.value,\n    ];\n}\n\nfunction eventClasses(event: DatepickerEvent): ClassBind[] {\n    const classes = defineClasses(\n        [\"tableEventClass\", \"o-datepicker__table__event\"],\n        [\n            \"tableEventVariantClass\",\n            \"o-datepicker__table__event--\",\n            event.type,\n            !!event.type,\n        ],\n        [\n            \"tableEventIndicatorClass\",\n            \"o-datepicker__table__event--\",\n            props.pickerProps.indicators,\n            !!props.pickerProps.indicators,\n        ],\n        // pass effect scope for rectivity binding\n        { scope },\n    );\n    return classes.value;\n}\n\nconst tableRowClasses = defineClasses(\n    [\"tableRowClass\", \"o-datepicker__table__row\"],\n    // passing the picker props will add reactivity to property changes\n    { props: props.pickerProps },\n);\n\nconst tableCellClasses = defineClasses(\n    [\"tableCellClass\", \"o-datepicker__table__cell\"],\n    // passing the picker props will add reactivity to property changes\n    { props: props.pickerProps },\n);\n\nconst tableEventsClasses = defineClasses(\n    [\"tableEventsClass\", \"o-datepicker__table__events\"],\n    // passing the picker props will add reactivity to property changes\n    { props: props.pickerProps },\n);\n\nconst cellEventsClass = defineClasses(\n    [\n        \"tableCellEventsClass\",\n        \"o-datepicker__table__cell--events\",\n        null,\n        hasEvents,\n    ],\n    // passing the picker props will add reactivity to property changes\n    { props: props.pickerProps },\n);\n</script>\n\n<template>\n    <div :class=\"tableRowClasses\">\n        <div\n            v-if=\"pickerProps.showWeekNumber\"\n            :class=\"tableCellClasses\"\n            :style=\"{\n                cursor: pickerProps.weekNumberClickable ? 'pointer' : 'auto',\n            }\"\n            :tabindex=\"pickerProps.weekNumberClickable ? 0 : undefined\"\n            role=\"button\"\n            @click.prevent=\"clickWeekNumber(getWeekNumber(week[6]))\"\n            @keydown.enter.prevent=\"clickWeekNumber(getWeekNumber(week[6]))\">\n            <span>{{ getWeekNumber(week[6]) }}</span>\n        </div>\n\n        <template v-for=\"(weekDay, idx) in week\" :key=\"idx\">\n            <div\n                v-if=\"\n                    !pickerProps.disabled &&\n                    !pickerProps.readonly &&\n                    isDateSelectable(weekDay, month)\n                \"\n                :ref=\"(el) => setDayRef(weekDay, el)\"\n                :class=\"cellClasses(weekDay)\"\n                role=\"button\"\n                :tabindex=\"\n                    day === weekDay.getDate() && month === weekDay.getMonth()\n                        ? undefined\n                        : 0\n                \"\n                @click.prevent=\"selectDate(weekDay)\"\n                @mouseenter=\"setRangeHoverEndDate(weekDay)\"\n                @focus=\"setRangeHoverEndDate(weekDay)\"\n                @keydown.enter.prevent=\"onKeydown($event, weekDay)\">\n                <span>{{ weekDay.getDate() }}</span>\n                <div\n                    v-if=\"eventsDateMatch(weekDay).length\"\n                    :class=\"tableEventsClasses\">\n                    <div\n                        v-for=\"(event, index) in eventsDateMatch(weekDay)\"\n                        :key=\"index\"\n                        :class=\"eventClasses(event)\" />\n                </div>\n            </div>\n\n            <div v-else :class=\"cellClasses(weekDay)\">\n                <span>{{ weekDay.getDate() }}</span>\n            </div>\n        </template>\n    </div>\n</template>\n","<script\n    setup\n    lang=\"ts\"\n    generic=\"IsRange extends boolean, IsMultiple extends boolean\">\nimport { computed, ref, type PropType } from \"vue\";\n\nimport ODatepickerTableRow from \"./DatepickerTableRow.vue\";\n\nimport { isTrueish, isDefined } from \"@/utils/helpers\";\nimport { defineClasses } from \"@/composables\";\n\nimport { useDatepickerMixins } from \"./useDatepickerMixins\";\nimport { weekBuilder } from \"./utils\";\n\nimport type { DatepickerEvent, FocusedDate } from \"./types\";\nimport type { DatepickerProps } from \"./props\";\n\ndefineOptions({\n    name: \"ODatepickerTable\",\n    configField: \"datepicker\",\n});\n\nconst props = defineProps({\n    modelValue: {\n        type: [Date, Array] as PropType<Date | Date[]>,\n        default: undefined,\n    },\n    focusedDate: { type: Object as PropType<FocusedDate>, required: true },\n    dayNames: { type: Array as PropType<string[]>, required: true },\n    monthNames: { type: Array as PropType<string[]>, required: true },\n    pickerProps: {\n        type: Object as PropType<DatepickerProps<IsRange, IsMultiple>>,\n        required: true,\n    },\n});\n\nconst emits = defineEmits<{\n    /** modelValue prop two-way binding */\n    \"update:model-value\": [value: Date | Date[]];\n    /** focusedDate prop two-way binding */\n    \"update:focusedDate\": [value: FocusedDate];\n    \"range-start\": [value: Date];\n    \"range-end\": [value: Date];\n    \"week-number-click\": [value: number];\n}>();\n\nconst { isDateSelectable } = useDatepickerMixins(props.pickerProps);\n\nconst focusedDateModel = defineModel<FocusedDate>(\"focusedDate\", {\n    required: true,\n});\n\nconst selectedBeginDate = ref<Date>();\nconst selectedEndDate = ref<Date>();\nconst hoveredEndDate = ref<Date>();\n\nconst visibleDayNames = computed(() => {\n    const visibleDayNames: string[] = [];\n    let index = props.pickerProps.firstDayOfWeek || 0;\n    while (visibleDayNames.length < props.dayNames.length) {\n        const currentDayName = props.dayNames[index % props.dayNames.length];\n        visibleDayNames.push(currentDayName);\n        index++;\n    }\n    if (props.pickerProps.showWeekNumber) visibleDayNames.unshift(\"\");\n    return visibleDayNames;\n});\n\n/** Return array of all events in the specified month */\nconst eventsInThisMonth = computed(() => {\n    if (!props.pickerProps.events) return [];\n    return props.pickerProps.events\n        .map((event) =>\n            !event.date && event instanceof Date ? { date: event } : event,\n        )\n        .filter(\n            (event) =>\n                event.date.getMonth() === focusedDateModel.value.month &&\n                event.date.getFullYear() === focusedDateModel.value.year,\n        );\n});\n\n/** Return array of all weeks in the specified month */\nconst weeksInThisMonth = computed<Date[][]>(() => {\n    validateFocusedDay();\n    const month = focusedDateModel.value.month;\n    const year = focusedDateModel.value.year;\n    const weeksInThisMonth: Date[][] = [];\n\n    let startingDay = 1;\n\n    while (weeksInThisMonth.length < 6) {\n        const newWeek = weekBuilder(\n            startingDay,\n            month,\n            year,\n            props.pickerProps.firstDayOfWeek || 0,\n        );\n        weeksInThisMonth.push(newWeek);\n        startingDay += 7;\n    }\n\n    return weeksInThisMonth;\n});\n\nfunction eventsInThisWeek(week: Date[]): DatepickerEvent[] {\n    if (!props.pickerProps.events) return [];\n    return eventsInThisMonth.value.filter((event) => {\n        const stripped = new Date(event.date);\n        stripped.setHours(0, 0, 0, 0);\n        const timed = stripped.getTime();\n        return week.some((weekDate) => weekDate.getTime() === timed);\n    });\n}\n\nconst hoveredDateRange = computed<Date[]>(() => {\n    if (!isTrueish(props.pickerProps.range) || selectedEndDate.value) return [];\n\n    return (\n        (hoveredEndDate.value || 0) < (selectedBeginDate.value || 0)\n            ? [hoveredEndDate.value, selectedBeginDate.value]\n            : [selectedBeginDate.value, hoveredEndDate.value]\n    ).filter(isDefined);\n});\n\nfunction validateFocusedDay(): void {\n    const currentDate = new Date(\n        focusedDateModel.value.year,\n        focusedDateModel.value.month,\n        focusedDateModel.value.day,\n    );\n    if (isDateSelectable(currentDate, focusedDateModel.value.month)) return;\n\n    let day = 0;\n    // Number of days in the current month\n    const monthDays = new Date(\n        focusedDateModel.value.year,\n        focusedDateModel.value.month + 1,\n        0,\n    ).getDate();\n    let firstFocusable: Date | undefined;\n    while (!firstFocusable && ++day < monthDays) {\n        const date = new Date(\n            focusedDateModel.value.year,\n            focusedDateModel.value.month,\n            day,\n        );\n        if (isDateSelectable(date, focusedDateModel.value.month)) {\n            firstFocusable = currentDate;\n            focusedDateModel.value = {\n                day: date.getDate(),\n                month: date.getMonth(),\n                year: date.getFullYear(),\n            };\n        }\n    }\n}\n\n// --- Event Handlers ---\n\n/** Emit input event with selected date as payload for v-model in parent */\nfunction onSelectedDate(date: Date): void {\n    if (props.pickerProps.disabled) return;\n    else if (isTrueish(props.pickerProps.range)) handleSelectRangeDate(date);\n    else if (isTrueish(props.pickerProps.multiple))\n        handleSelectMultipleDates(date);\n    else emits(\"update:model-value\", date);\n}\n\n/*\n * If both begin and end dates are set, reset the end date and set the begin date.\n * If only begin date is selected, emit an array of the begin date and the new date.\n * If not set, only set the begin date.\n */\nfunction handleSelectRangeDate(date: Date): void {\n    if (selectedBeginDate.value && selectedEndDate.value) {\n        selectedBeginDate.value = date;\n        selectedEndDate.value = undefined;\n        emits(\"range-start\", date);\n    } else if (selectedBeginDate.value && !selectedEndDate.value) {\n        if (selectedBeginDate.value > date) {\n            selectedEndDate.value = selectedBeginDate.value;\n            selectedBeginDate.value = date;\n        } else {\n            selectedEndDate.value = date;\n        }\n        emits(\"range-end\", date);\n        emits(\"update:model-value\", [\n            selectedBeginDate.value,\n            selectedEndDate.value,\n        ]);\n    } else {\n        selectedBeginDate.value = date;\n        emits(\"range-start\", date);\n    }\n}\n\n/*\n * If selected date already exists list of selected dates, remove it from the list\n * Otherwise, add date to list of selected dates\n */\nfunction handleSelectMultipleDates(date: Date): void {\n    let multipleSelectedDates = Array.isArray(props.modelValue)\n        ? props.modelValue\n        : [];\n    const multipleSelect = multipleSelectedDates.filter(\n        (selectedDate) =>\n            selectedDate.getDate() === date.getDate() &&\n            selectedDate.getFullYear() === date.getFullYear() &&\n            selectedDate.getMonth() === date.getMonth(),\n    );\n    if (multipleSelect.length) {\n        multipleSelectedDates = multipleSelectedDates.filter(\n            (selectedDate) =>\n                selectedDate.getDate() !== date.getDate() ||\n                selectedDate.getFullYear() !== date.getFullYear() ||\n                selectedDate.getMonth() !== date.getMonth(),\n        );\n    } else {\n        multipleSelectedDates = [...multipleSelectedDates, date];\n    }\n    emits(\"update:model-value\", multipleSelectedDates);\n}\n\nfunction onRangeHoverEndDate(date: Date): void {\n    hoveredEndDate.value = date;\n}\n\nfunction onChangeFocus(date: Date): void {\n    focusedDateModel.value = {\n        day: date.getDate(),\n        month: date.getMonth(),\n        year: date.getFullYear(),\n    };\n}\n\n// --- Computed Component Classes ---\n\nconst tableClasses = defineClasses(\n    [\"tableClass\", \"o-datepicker__table\"],\n    // passing the picker props will add reactivity to property changes\n    { props: props.pickerProps },\n);\n\nconst tableHeadClasses = defineClasses(\n    [\"tableHeadClass\", \"o-datepicker__table__head\"],\n    // passing the picker props will add reactivity to property changes\n    { props: props.pickerProps },\n);\n\nconst tableCellClasses = defineClasses(\n    [\"tableCellClass\", \"o-datepicker__table__cell\"],\n    // passing the picker props will add reactivity to property changes\n    { props: props.pickerProps },\n);\n\nconst tableHeadCellClasses = defineClasses(\n    [\"tableHeadCellClass\", \"o-datepicker__table__head-cell\"],\n    // passing the picker props will add reactivity to property changes\n    { props: props.pickerProps },\n);\n\nconst tableBodyClasses = defineClasses(\n    [\"tableBodyClass\", \"o-datepicker__table__body\"],\n    // passing the picker props will add reactivity to property changes\n    { props: props.pickerProps },\n);\n</script>\n\n<template>\n    <section :class=\"tableClasses\">\n        <header :class=\"tableHeadClasses\">\n            <div\n                v-for=\"(day, index) in visibleDayNames\"\n                :key=\"index\"\n                :class=\"[...tableCellClasses, ...tableHeadCellClasses]\">\n                <span>{{ day }}</span>\n            </div>\n        </header>\n        <div :class=\"tableBodyClasses\">\n            <o-datepicker-table-row\n                v-for=\"(week, index) in weeksInThisMonth\"\n                :key=\"index\"\n                :selected-date=\"modelValue\"\n                :day=\"focusedDateModel.day\"\n                :week=\"week\"\n                :month=\"focusedDateModel.month\"\n                :events=\"eventsInThisWeek(week)\"\n                :hovered-date-range=\"hoveredDateRange\"\n                :picker-props=\"props.pickerProps\"\n                @select=\"onSelectedDate\"\n                @hover-enddate=\"onRangeHoverEndDate\"\n                @change-focus=\"onChangeFocus\"\n                @week-number-click=\"$emit('week-number-click', $event)\" />\n        </div>\n    </section>\n</template>\n","<script\n    setup\n    lang=\"ts\"\n    generic=\"IsRange extends boolean, IsMultiple extends boolean\">\nimport {\n    computed,\n    ref,\n    nextTick,\n    watch,\n    effectScope,\n    onUnmounted,\n    type PropType,\n    type ComponentPublicInstance,\n} from \"vue\";\n\nimport { isDefined, isTrueish } from \"@/utils/helpers\";\nimport { defineClasses } from \"@/composables\";\n\nimport { useDatepickerMixins } from \"./useDatepickerMixins\";\n\nimport type { DatepickerEvent, FocusedDate } from \"./types\";\nimport type { DatepickerProps } from \"./props\";\nimport type { ClassBind } from \"@/types\";\n\ndefineOptions({\n    name: \"ODatepickerMonth\",\n    configField: \"datepicker\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    modelValue: {\n        type: [Date, Array] as PropType<Date | Date[]>,\n        default: undefined,\n    },\n    monthNames: { type: Array as PropType<string[]>, required: true },\n    focusedDate: { type: Object as PropType<FocusedDate>, required: true },\n    pickerProps: {\n        type: Object as PropType<DatepickerProps<IsRange, IsMultiple>>,\n        required: true,\n    },\n});\n\nconst emits = defineEmits<{\n    /** modelValue prop two-way binding */\n    \"update:model-value\": [value: Date | Date[]];\n    /** focusedDate prop two-way binding */\n    \"update:focusedDate\": [value: FocusedDate];\n    \"range-start\": [value: Date];\n    \"range-end\": [value: Date];\n}>();\n\nconst { dateCreator } = useDatepickerMixins(props.pickerProps);\n\nconst selectedBeginDate = ref<Date>();\nconst selectedEndDate = ref<Date>();\nconst hoveredEndDate = ref<Date>();\n\nconst hasEvents = computed(() => !!props.pickerProps.events?.length);\n\nconst monthRefs = ref(new Map());\n\nfunction setMonthRef(\n    date: Date,\n    el: Element | ComponentPublicInstance | null,\n): void {\n    const refKey = `month-${date.getMonth()}`;\n    if (el) monthRefs.value.set(refKey, el);\n}\n\nwatch(\n    () => props.focusedDate.month,\n    (month) => {\n        const refKey = `month-${month}`;\n        nextTick(() => {\n            // $nextTick is needed when month is changed\n            const ref = monthRefs.value.get(refKey);\n            if (ref?.length > 0 && ref[0]) {\n                ref[0].focus();\n            }\n        });\n    },\n);\n\n/** Return array of all events in the specified month */\nconst eventsInThisYear = computed(() => {\n    if (!props.pickerProps.events) return [];\n\n    return props.pickerProps.events\n        .map((event) => {\n            if (!event.date && event instanceof Date) event = { date: event };\n            if (!event.type) event.type = \"is-primary\";\n            return event;\n        })\n        .filter((event) => event.date.getFullYear() === props.focusedDate.year);\n});\n\nconst monthDates = computed(() => {\n    const year = props.focusedDate.year;\n    const months: Date[] = [];\n    for (let i = 0; i < 12; i++) {\n        const d = new Date(year, i, 1);\n        d.setHours(0, 0, 0, 0);\n        months.push(d);\n    }\n    return months;\n});\n\nconst hoveredDateRange = computed(() => {\n    if (!isTrueish(props.pickerProps.range) || !selectedEndDate.value)\n        return [];\n\n    return (\n        hoveredEndDate.value &&\n        selectedBeginDate.value &&\n        hoveredEndDate.value < selectedBeginDate.value\n            ? [hoveredEndDate.value, selectedBeginDate.value]\n            : [selectedBeginDate.value, hoveredEndDate.value]\n    ).filter(isDefined);\n});\n\nfunction eventsDateMatch(day): DatepickerEvent[] {\n    if (!eventsInThisYear.value.length) return [];\n    return eventsInThisYear.value.filter(\n        (event) => event.date.getMonth() === day.getMonth(),\n    );\n}\n\nfunction isDateSelectable(date: Date): boolean {\n    const validity: boolean[] = [];\n\n    if (props.pickerProps.minDate)\n        validity.push(date >= props.pickerProps.minDate);\n    if (props.pickerProps.maxDate)\n        validity.push(date <= props.pickerProps.maxDate);\n\n    validity.push(date.getFullYear() === props.focusedDate.year);\n\n    if (props.pickerProps.selectableDates) {\n        if (typeof props.pickerProps.selectableDates === \"function\") {\n            if (props.pickerProps.selectableDates(date)) return true;\n            else validity.push(false);\n        } else {\n            for (let i = 0; i < props.pickerProps.selectableDates.length; i++) {\n                const enabledDate = props.pickerProps.selectableDates[i];\n                if (\n                    date.getFullYear() === enabledDate.getFullYear() &&\n                    date.getMonth() === enabledDate.getMonth()\n                )\n                    return true;\n                else validity.push(false);\n            }\n        }\n    }\n\n    if (props.pickerProps.unselectableDates) {\n        if (typeof props.pickerProps.unselectableDates === \"function\") {\n            validity.push(!props.pickerProps.unselectableDates(date));\n        } else {\n            for (\n                let i = 0;\n                i < props.pickerProps.unselectableDates.length;\n                i++\n            ) {\n                const disabledDate = props.pickerProps.unselectableDates[i];\n                validity.push(\n                    date.getFullYear() !== disabledDate.getFullYear() ||\n                        date.getMonth() !== disabledDate.getMonth(),\n                );\n            }\n        }\n    }\n\n    if (props.pickerProps.unselectableDaysOfWeek) {\n        for (\n            let i = 0;\n            i < props.pickerProps.unselectableDaysOfWeek.length;\n            i++\n        ) {\n            const dayOfWeek = props.pickerProps.unselectableDaysOfWeek[i];\n            validity.push(date.getDay() !== dayOfWeek);\n        }\n    }\n\n    return validity.indexOf(false) < 0;\n}\n\n// --- Event Handlers ---\n\nfunction onKeydown(event: KeyboardEvent, weekDay: Date): void {\n    let preventDefault = true;\n    switch (event.key) {\n        case \"Tab\": {\n            preventDefault = false;\n            break;\n        }\n        case \" \":\n        case \"Space\":\n        case \"Spacebar\":\n        case \"Enter\": {\n            selectDate(weekDay);\n            break;\n        }\n\n        case \"ArrowLeft\":\n        case \"Left\": {\n            changeFocus(weekDay, -1);\n            break;\n        }\n        case \"ArrowRight\":\n        case \"Right\": {\n            changeFocus(weekDay, 1);\n            break;\n        }\n        case \"ArrowUp\":\n        case \"Up\": {\n            changeFocus(weekDay, -7);\n            break;\n        }\n        case \"ArrowDown\":\n        case \"Down\": {\n            changeFocus(weekDay, 7);\n            break;\n        }\n    }\n    if (preventDefault) event.preventDefault();\n}\n\n/*\n * Emit update:modelValue event with selected date as payload for v-model in parent\n */\nfunction selectDate(date: Date): void {\n    if (props.pickerProps.disabled || props.pickerProps.readonly) return;\n    if (!isDateSelectable(date)) return;\n\n    if (isTrueish(props.pickerProps.range)) handleSelectRangeDate(date);\n    else if (isTrueish(props.pickerProps.multiple))\n        handleSelectMultipleDates(date);\n    else emits(\"update:model-value\", date);\n}\n\n/*\n * If both begin and end dates are set, reset the end date and set the begin date.\n * If only begin date is selected, emit an array of the begin date and the new date.\n * If not set, only set the begin date.\n */\nfunction handleSelectRangeDate(date: Date): void {\n    if (selectedBeginDate.value && selectedEndDate.value) {\n        selectedBeginDate.value = date;\n        selectedEndDate.value = undefined;\n        emits(\"range-start\", date);\n    } else if (selectedBeginDate.value && !selectedEndDate.value) {\n        if (selectedBeginDate.value > date) {\n            selectedEndDate.value = selectedBeginDate.value;\n            selectedBeginDate.value = date;\n        } else {\n            selectedEndDate.value = date;\n        }\n        emits(\"range-end\", date);\n        emits(\"update:model-value\", [\n            selectedBeginDate.value,\n            selectedEndDate.value,\n        ]);\n    } else {\n        selectedBeginDate.value = date;\n        emits(\"range-start\", date);\n    }\n}\n\nconst multipleSelectedDates = computed(() =>\n    isTrueish(props.pickerProps.multiple) && props.modelValue\n        ? props.modelValue\n        : [],\n);\n\nfunction handleSelectMultipleDates(date: Date): void {\n    if (!Array.isArray(props.modelValue)) return;\n    let multipleSelectedDates = props.modelValue;\n\n    const multipleSelect = multipleSelectedDates.filter(\n        (selectedDate) =>\n            selectedDate.getDate() === date.getDate() &&\n            selectedDate.getFullYear() === date.getFullYear() &&\n            selectedDate.getMonth() === date.getMonth(),\n    );\n    if (multipleSelect.length) {\n        multipleSelectedDates = multipleSelectedDates.filter(\n            (selectedDate) =>\n                selectedDate.getDate() !== date.getDate() ||\n                selectedDate.getFullYear() !== date.getFullYear() ||\n                selectedDate.getMonth() !== date.getMonth(),\n        );\n    } else {\n        multipleSelectedDates.push(date);\n    }\n    emits(\"update:model-value\", multipleSelectedDates);\n}\n\nfunction changeFocus(month: Date, inc: number): void {\n    month.setMonth(month.getMonth() + inc);\n    const focused = {\n        day: month.getDate(),\n        month: month.getMonth(),\n        year: month.getFullYear(),\n    };\n    emits(\"update:focusedDate\", focused);\n}\n\nfunction onRangeHoverEndDate(day: Date): void {\n    if (isTrueish(props.pickerProps.range)) hoveredEndDate.value = day;\n}\n\n// --- Computed Component Classes ---\n\nfunction dateMatch(dateOne, dateTwo, multiple = false): boolean {\n    // if either date is null or undefined, return false\n    if (!dateOne || !dateTwo || multiple) return false;\n    if (Array.isArray(dateTwo))\n        return dateTwo.some(\n            (date) =>\n                dateOne.getFullYear() === date.getFullYear() &&\n                dateOne.getMonth() === date.getMonth(),\n        );\n    return (\n        dateOne.getFullYear() === dateTwo.getFullYear() &&\n        dateOne.getMonth() === dateTwo.getMonth()\n    );\n}\n\nfunction dateWithin(dateOne, dates, multiple = false): boolean {\n    if (!Array.isArray(dates) || multiple) return false;\n    return dateOne > dates[0] && dateOne < dates[1];\n}\n\nfunction dateMultipleSelected(dateOne, dates, multiple = false): boolean {\n    if (!Array.isArray(dates) || !multiple) return false;\n    return dates.some(\n        (date) =>\n            dateOne.getDate() === date.getDate() &&\n            dateOne.getFullYear() === date.getFullYear() &&\n            dateOne.getMonth() === date.getMonth(),\n    );\n}\n\nconst monthClasses = defineClasses(\n    [\"monthClass\", \"o-datepicker__month\"],\n    // passing the picker props will add reactivity to property changes\n    { props: props.pickerProps },\n);\n\nconst monthTableClasses = defineClasses(\n    [\"monthTableClass\", \"o-datepicker__month__table\"],\n    // passing the picker props will add reactivity to property changes\n    { props: props.pickerProps },\n);\n\nconst monthCellClasses = defineClasses(\n    [\"monthCellClass\", \"o-datepicker__month__cell\"],\n    [\n        \"monthCellEventsClass\",\n        \"o-datepicker__month__cell--events\",\n        null,\n        hasEvents,\n    ],\n    // passing the picker props will add reactivity to property changes\n    { props: props.pickerProps },\n);\n\n// Registers a dispose callback on the current active effect scope.\nconst scope = effectScope();\n\n// stop all scope effects\nonUnmounted(() => scope.stop());\n\n/**\n * Build classes for cell using validations\n */\nfunction cellClasses(day: Date): ClassBind[] {\n    const classes = defineClasses(\n        [\n            \"monthCellSelectedClass\",\n            \"o-datepicker__month__cell--selected\",\n            null,\n            dateMatch(\n                day,\n                props.modelValue,\n                isTrueish(props.pickerProps.multiple),\n            ) ||\n                dateWithin(\n                    day,\n                    props.modelValue,\n                    isTrueish(props.pickerProps.multiple),\n                ) ||\n                dateMultipleSelected(\n                    day,\n                    multipleSelectedDates.value,\n                    isTrueish(props.pickerProps.multiple),\n                ),\n        ],\n        [\n            \"monthCellFirstSelectedClass\",\n            \"o-datepicker__month__cell--first-selected\",\n            null,\n            dateMatch(\n                day,\n                Array.isArray(props.modelValue) && props.modelValue[0],\n                isTrueish(props.pickerProps.multiple),\n            ),\n        ],\n        [\n            \"monthCellWithinSelectedClass\",\n            \"o-datepicker__month__cell--within-selected\",\n            null,\n            dateWithin(\n                day,\n                props.modelValue,\n                isTrueish(props.pickerProps.multiple),\n            ),\n        ],\n        [\n            \"monthCellLastSelectedClass\",\n            \"o-datepicker__month__cell--last-selected\",\n            null,\n            dateMatch(\n                day,\n                Array.isArray(props.modelValue) && props.modelValue[1],\n                isTrueish(props.pickerProps.multiple),\n            ),\n        ],\n        [\n            \"monthCellWithinHoveredRangeClass\",\n            \"o-datepicker__month__cell--within-hovered-range\",\n            null,\n            hoveredDateRange.value &&\n                hoveredDateRange.value.length === 2 &&\n                (dateMatch(day, hoveredDateRange.value) ||\n                    dateWithin(day, hoveredDateRange.value)),\n        ],\n        [\n            \"monthCellFirstHoveredClass\",\n            \"o-datepicker__month__cell--first-hovered\",\n            null,\n            dateMatch(\n                day,\n                Array.isArray(hoveredDateRange.value) &&\n                    hoveredDateRange.value[0],\n            ),\n        ],\n        [\n            \"monthCellWithinHoveredClass\",\n            \"o-datepicker__month__cell--within-hovered\",\n            null,\n            dateWithin(day, hoveredDateRange.value),\n        ],\n        [\n            \"monthCellLastHoveredClass\",\n            \"o-datepicker__month__cell--last-hovered\",\n            null,\n            dateMatch(\n                day,\n                Array.isArray(hoveredDateRange.value) &&\n                    hoveredDateRange.value[1],\n            ),\n        ],\n        [\n            \"monthCellTodayClass\",\n            \"o-datepicker__month__cell--today\",\n            null,\n            dateMatch(day, dateCreator()),\n        ],\n        [\n            \"monthCellSelectableclass\",\n            \"o-datepicker__month__cell--selectable\",\n            null,\n            isDateSelectable(day) &&\n                !props.pickerProps.disabled &&\n                !props.pickerProps.readonly,\n        ],\n        [\n            \"monthCellUnselectableClass\",\n            \"o-datepicker__month__cell--unselectable\",\n            null,\n            !isDateSelectable(day) || props.pickerProps.disabled,\n        ],\n        // pass effect scope for rectivity binding\n        { scope },\n    );\n    return [...monthCellClasses.value, ...classes.value];\n}\n\nconst monthEventsClasses = defineClasses(\n    [\"monthEventsClass\", \"o-datepicker__month__events\"],\n    // passing the picker props will add reactivity to property changes\n    { props: props.pickerProps },\n);\n\n/**\n * Build classes for event\n */\nfunction eventClasses(event: DatepickerEvent): ClassBind[] {\n    const classes = defineClasses(\n        [\"monthEventClass\", \"o-datepicker__month__event\"],\n        [\n            \"monthEventTypeClass\",\n            \"o-datepicker__month__event--\",\n            event.type,\n            !!event.type,\n        ],\n        [\n            \"monthEventIndicatorClass\",\n            \"o-datepicker__month__event--\",\n            props.pickerProps.indicators,\n            !!props.pickerProps.indicators,\n        ],\n        // pass effect scope for rectivity binding\n        { scope },\n    );\n    return classes.value;\n}\n</script>\n\n<template>\n    <section :class=\"monthClasses\">\n        <div :class=\"monthTableClasses\">\n            <template v-for=\"(date, idx) in monthDates\" :key=\"idx\">\n                <div\n                    v-if=\"\n                        !pickerProps.disabled &&\n                        !pickerProps.readonly &&\n                        isDateSelectable(date)\n                    \"\n                    :ref=\"(el) => setMonthRef(date, el)\"\n                    :class=\"cellClasses(date)\"\n                    role=\"button\"\n                    :tabindex=\"\n                        focusedDate.month === date.getMonth() ? undefined : 0\n                    \"\n                    @click.prevent=\"selectDate(date)\"\n                    @mouseenter=\"onRangeHoverEndDate(date)\"\n                    @focus=\"onRangeHoverEndDate(date)\"\n                    @keydown.prevent=\"onKeydown($event, date)\">\n                    {{ monthNames[date.getMonth()] }}\n                    <div\n                        v-if=\"eventsDateMatch(date).length\"\n                        :class=\"monthEventsClasses\">\n                        <div\n                            v-for=\"(event, index) in eventsDateMatch(date)\"\n                            :key=\"index\"\n                            :class=\"eventClasses(event)\" />\n                    </div>\n                </div>\n\n                <div v-else :class=\"cellClasses(date)\">\n                    {{ monthNames[date.getMonth()] }}\n                    <div\n                        v-if=\"eventsDateMatch(date).length\"\n                        :class=\"monthEventsClasses\">\n                        <div\n                            v-for=\"(event, index) in eventsDateMatch(date)\"\n                            :key=\"index\"\n                            :class=\"eventClasses(event)\" />\n                    </div>\n                </div>\n            </template>\n        </div>\n    </section>\n</template>\n","<script\n    setup\n    lang=\"ts\"\n    generic=\"\n        IsRange extends boolean = false,\n        IsMultiple extends boolean = false\n    \">\nimport { computed, ref, watch, useTemplateRef } from \"vue\";\n\nimport OButton from \"../button/Button.vue\";\nimport OSelect from \"../select/Select.vue\";\nimport OPickerWrapper from \"../utils/PickerWrapper.vue\";\nimport ODatepickerTable from \"./DatepickerTable.vue\";\nimport ODatepickerMonth from \"./DatepickerMonth.vue\";\n\nimport { getDefault } from \"@/utils/config\";\nimport { isDate, pad } from \"@/utils/helpers\";\nimport { defineClasses, getActiveClasses, useMatchMedia } from \"@/composables\";\n\nimport { useDatepickerMixins } from \"./useDatepickerMixins\";\nimport { getMonthNames, getWeekdayNames } from \"./utils\";\n\nimport type { OptionsPropItem } from \"@/types\";\nimport type { FocusedDate } from \"./types\";\nimport type { DatepickerProps } from \"./props\";\n\n/**\n * An input with a simple dropdown/modal for selecting a date, uses native datepicker for mobile.\n * @displayName Datepicker\n * @style _datepicker.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"ODatepicker\",\n    configField: \"datepicker\",\n});\n\ntype ModelValue = DatepickerProps<IsRange, IsMultiple>[\"modelValue\"];\n\nconst props = withDefaults(\n    defineProps<DatepickerProps<IsRange, IsMultiple>>(),\n    {\n        override: undefined,\n        modelValue: undefined,\n        // range: false,\n        // multiple: false,\n        active: false,\n        type: \"date\",\n        dayNames: () => getDefault(\"datepicker.dayNames\"),\n        monthNames: () => getDefault(\"datepicker.monthNames\"),\n        size: () => getDefault(\"datepicker.size\"),\n        focusedDate: undefined,\n        events: undefined,\n        indicators: \"dots\",\n        minDate: undefined,\n        maxDate: undefined,\n        expanded: false,\n        rounded: false,\n        inline: false,\n        placeholder: undefined,\n        readonly: false,\n        disabled: false,\n        openOnFocus: () => getDefault(\"datepicker.openOnFocus\", true),\n        closeOnClick: () => getDefault(\"datepicker.closeOnClick\", true),\n        locale: () => getDefault(\"locale\"),\n        formatter: getDefault(\"datepicker.formatter\"),\n        parser: getDefault(\"datepicker.parser\"),\n        creator: getDefault(\"datepicker.creator\"),\n        selectableDates: undefined,\n        unselectableDates: undefined,\n        unselectableDaysOfWeek: () =>\n            getDefault(\"datepicker.unselectableDaysOfWeek\"),\n        nearbyMonthDays: () => getDefault(\"datepicker.nearbyMonthDays\", true),\n        nearbySelectableMonthDays: () =>\n            getDefault(\"datepicker.nearbySelectableMonthDays\", false),\n        showWeekNumber: () => getDefault(\"datepicker.showWeekNumber\", false),\n        weekNumberClickable: () =>\n            getDefault(\"datepicker.weekNumberClickable\", false),\n        firstDayOfWeek: () => getDefault(\"datepicker.firstDayOfWeek\", 0),\n        rulesForFirstWeek: 4,\n        yearsRange: () => getDefault(\"datepicker.yearsRange\", [-100, 10]),\n        position: undefined,\n        iconPack: () => getDefault(\"datepicker.iconPack\"),\n        icon: () => getDefault(\"datepicker.icon\"),\n        iconRight: () => getDefault(\"datepicker.iconRight\"),\n        iconRightClickable: false,\n        iconPrev: () => getDefault(\"datepicker.iconPrev\", \"chevron-left\"),\n        iconNext: () => getDefault(\"datepicker.iconNext\", \"chevron-right\"),\n        desktopModal: () => getDefault(\"datepicker.desktopModal\", false),\n        mobileModal: () => getDefault(\"datepicker.mobileModal\", true),\n        mobileNative: () => getDefault(\"datepicker.mobileNative\", false),\n        mobileBreakpoint: () => getDefault(\"datepicker.mobileBreakpoint\"),\n        teleport: () => getDefault(\"datepicker.teleport\", false),\n        useHtml5Validation: () => getDefault(\"useHtml5Validation\", true),\n        customValidity: \"\",\n        ariaNextLabel: () =>\n            getDefault(\"datepicker.ariaNextLabel\", \"Next Page\"),\n        ariaPreviousLabel: () =>\n            getDefault(\"datepicker.ariaNextLabel\", \"Previous Page\"),\n        ariaSelectMonthLabel: () =>\n            getDefault(\"datepicker.ariaSelectMonthLabel\", \"Select Month\"),\n        ariaSelectYearLabel: () =>\n            getDefault(\"datepicker.ariaSelectYearLabel\", \"Select Year\"),\n        inputClasses: () => getDefault(\"datepicker.inputClasses\"),\n        dropdownClasses: () => getDefault(\"datepicker.dropdownClasses\"),\n        selectClasses: () => getDefault(\"datepicker.selectClasses\"),\n    },\n);\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {Date | Date[]} updated modelValue prop\n     */\n    \"update:model-value\": [value: ModelValue];\n    /**\n     * active prop two-way binding\n     * @param value {boolean} updated active prop\n     */\n    \"update:active\": [value: boolean];\n    /**\n     * on range start is selected event\n     * @param value {Date} range start date\n     */\n    \"range-start\": [value: Date];\n    /**\n     * on range end is selected event\n     * @param value {Date} range end date\n     */\n    \"range-end\": [value: Date];\n    /**\n     * on month change event\n     * @param value {number} month number\n     */\n    \"change-month\": [value: number];\n    /**\n     * on year change event\n     * @param value {number} year number\n     */\n    \"change-year\": [value: number];\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    focus: [event: Event];\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    blur: [event: Event];\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    invalid: [event: Event];\n    /**\n     * on icon click event\n     * @param event {Event} native event\n     */\n    \"icon-click\": [event: Event];\n    /**\n     * on icon right click event\n     * @param event {Event} native event\n     */\n    \"icon-right-click\": [event: Event];\n}>();\n\nconst { dtf, dateCreator, dateFormatter, dateParser } =\n    useDatepickerMixins(props);\n\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\n\nconst pickerRef = useTemplateRef(\"pickerComponent\");\n\n// the modelvalue of selected date, use v-model to make it two-way binding\nconst vmodel = defineModel<ModelValue>({ default: undefined });\n\n// the active state of the dropdown, use v-model:active to make it two-way binding\nconst isActive = defineModel<boolean>(\"active\", { default: false });\n\nconst isTypeMonth = computed(() => props.type === \"month\");\n\n/**\n * When v-model is changed:\n *   1. Update internal value.\n */\nwatch(\n    () => props.modelValue,\n    (value: ModelValue) => {\n        const isArray = Array.isArray(value);\n        const currentDate: Date = isArray\n            ? value.length\n                ? value[value.length - 1]\n                : dateCreator()\n            : value\n              ? value\n              : dateCreator();\n        if (\n            !isArray ||\n            (isArray &&\n                Array.isArray(vmodel.value) &&\n                value.length > vmodel.value.length)\n        )\n            // update internal state\n            focusedDateData.value = {\n                day: currentDate.getDate(),\n                month: currentDate.getMonth(),\n                year: currentDate.getFullYear(),\n            };\n    },\n);\n\nwatch(\n    () => props.focusedDate,\n    (value) => {\n        if (value) {\n            focusedDateData.value = {\n                day: value.getDate(),\n                month: value.getMonth(),\n                year: value.getFullYear(),\n            };\n        }\n    },\n);\n\nconst _initialDate: Date =\n    (Array.isArray(props.modelValue)\n        ? props.modelValue[0]\n        : props.modelValue) ||\n    props.focusedDate ||\n    dateCreator();\n\nif (\n    !props.modelValue &&\n    props.maxDate &&\n    props.maxDate.getFullYear() < _initialDate.getFullYear()\n) {\n    _initialDate.setFullYear(props.maxDate.getFullYear());\n}\n\nconst focusedDateData = ref<FocusedDate>({\n    day: _initialDate.getDate(),\n    month: _initialDate.getMonth(),\n    year: _initialDate.getFullYear(),\n});\n\n/*\n * Emit input event on month and/or year change\n */\nwatch(\n    () => focusedDateData.value.month,\n    (value) => emits(\"change-month\", value),\n);\nwatch(\n    () => focusedDateData.value.year,\n    (value) => emits(\"change-year\", value),\n);\n\nconst computedMonthNames = computed(() =>\n    Array.isArray(props.monthNames)\n        ? props.monthNames\n        : getMonthNames(props.locale),\n);\n\nconst listOfMonths = computed<OptionsPropItem<number>[]>(() => {\n    let minMonth = 0;\n    let maxMonth = 12;\n    if (\n        props.minDate &&\n        focusedDateData.value.year === props.minDate.getFullYear()\n    ) {\n        minMonth = props.minDate.getMonth();\n    }\n    if (\n        props.maxDate &&\n        focusedDateData.value.year === props.maxDate.getFullYear()\n    ) {\n        maxMonth = props.maxDate.getMonth();\n    }\n    return computedMonthNames.value.map((name, index) => ({\n        label: name,\n        value: index,\n        attrs: { disabled: index < minMonth || index > maxMonth },\n    }));\n});\n\nconst computedDayNames = computed(() =>\n    Array.isArray(props.dayNames)\n        ? props.dayNames\n        : getWeekdayNames(props.locale),\n);\n\n/*\n * Returns an array of years for the year dropdown. If earliest/latest\n * dates are set by props, range of years will fall within those dates.\n */\nconst listOfYears = computed<OptionsPropItem<number>[]>(() => {\n    let latestYear = _initialDate.getFullYear() + props.yearsRange[1];\n    if (props.maxDate && props.maxDate.getFullYear() < latestYear) {\n        latestYear = Math.max(\n            props.maxDate.getFullYear(),\n            focusedDateData.value.year,\n        );\n    }\n\n    let earliestYear = _initialDate.getFullYear() + props.yearsRange[0];\n    if (props.minDate && props.minDate.getFullYear() > earliestYear) {\n        earliestYear = Math.min(\n            props.minDate.getFullYear(),\n            focusedDateData.value.year,\n        );\n    }\n\n    return Array.from(\n        { length: latestYear - earliestYear + 1 || 1 },\n        (value, index) => earliestYear + index,\n    )\n        .reverse()\n        .map((year) => ({\n            label: String(year),\n            value: year,\n        }));\n});\n\nconst showPrev = computed<boolean>(() => {\n    if (!props.minDate) return true;\n    if (isTypeMonth.value)\n        return focusedDateData.value.year > props.minDate.getFullYear();\n\n    const dateToCheck = new Date(\n        focusedDateData.value.year,\n        focusedDateData.value.month,\n    );\n    const date = new Date(\n        props.minDate.getFullYear(),\n        props.minDate.getMonth(),\n    );\n    return dateToCheck > date;\n});\n\n/**\n * Either decrement month by 1 if not January or decrement year by 1\n * and set month to 11 (December) or decrement year when 'month'\n */\nfunction prev(): void {\n    if (props.disabled) return;\n\n    if (isTypeMonth.value) {\n        focusedDateData.value.year -= 1;\n    } else {\n        if (focusedDateData.value.month > 0) {\n            focusedDateData.value.month -= 1;\n        } else {\n            focusedDateData.value.month = 11;\n            focusedDateData.value.year -= 1;\n        }\n    }\n}\n\nconst showNext = computed<boolean>(() => {\n    if (!props.maxDate) return true;\n    if (isTypeMonth.value)\n        return focusedDateData.value.year < props.maxDate.getFullYear();\n\n    const dateToCheck = new Date(\n        focusedDateData.value.year,\n        focusedDateData.value.month,\n    );\n    const date = new Date(\n        props.maxDate.getFullYear(),\n        props.maxDate.getMonth(),\n    );\n    return dateToCheck < date;\n});\n\n/**\n * Either increment month by 1 if not December or increment year by 1\n * and set month to 0 (January) or increment year when 'month'\n */\nfunction next(): void {\n    if (props.disabled) return;\n    if (isTypeMonth.value) {\n        focusedDateData.value.year += 1;\n    } else {\n        if (focusedDateData.value.month < 11) {\n            focusedDateData.value.month += 1;\n        } else {\n            focusedDateData.value.month = 0;\n            focusedDateData.value.year += 1;\n        }\n    }\n}\n\n// --- Formatter / Parser ---\n\n/** Format date into string */\nfunction format(value: Date | Date[] | undefined, isNative: boolean): string {\n    if (isNative) return formatNative(value);\n\n    // define function prop\n    const date = (Array.isArray(value) ? [...value] : value) as ModelValue;\n\n    return dateFormatter(date);\n}\n\nfunction formatNative(value: Date | Date[] | undefined): string {\n    if (Array.isArray(value)) value = value[0];\n\n    // return empty string if no value is given or value can't parse to proper date\n    if (!value) return \"\";\n    const date = new Date(value);\n    if (!isDate(date)) return \"\";\n\n    if (isTypeMonth.value) {\n        // Format date into string 'YYYY-MM'\n        const year = date.getFullYear();\n        const month = date.getMonth() + 1;\n        return year + \"-\" + pad(month);\n    } else {\n        // Format date into string 'YYYY-MM-DD'\n        const year = date.getFullYear();\n        const month = date.getMonth() + 1;\n        const day = date.getDate();\n        return year + \"-\" + pad(month) + \"-\" + pad(day);\n    }\n}\n\n/** Parse string into date */\nfunction parse(value: string, isNative: boolean): Date | Date[] | undefined {\n    if (isNative) return parseNative(value);\n\n    const date = dateParser(value);\n\n    const isValid =\n        isDate(date) ||\n        (Array.isArray(date) &&\n            date.length === 2 &&\n            isDate(date[0]) &&\n            isDate(date[1]));\n\n    return isValid ? date : undefined;\n}\n\n/** Parse date from string */\nfunction parseNative(value: string): Date | undefined {\n    const s = value ? value.split(\"-\") : [];\n    if (s.length !== 3) return undefined;\n    const year = parseInt(s[0], 10);\n    const month = parseInt(s[1]) - 1;\n    const day = parseInt(s[2]);\n    return new Date(year, month, day);\n}\n\n// --- Event Handler ---\n\n/** move to the previous focused date */\nfunction prevDate(): void {\n    if (props.disabled) return;\n\n    if (isTypeMonth.value) {\n        focusedDateData.value.year -= 1;\n    } else {\n        const date = new Date(\n            focusedDateData.value.year,\n            focusedDateData.value.month,\n            focusedDateData.value.day,\n        );\n        date.setDate(date.getDate() - 1);\n        focusedDateData.value.day = date.getDate();\n        focusedDateData.value.month = date.getMonth();\n        focusedDateData.value.year = date.getFullYear();\n\n        // todo: show selected hovered date\n        // vmodel.value = date as ModelValue;\n    }\n}\n\n/** move to the next focused date */\nfunction nextDate(): void {\n    if (props.disabled) return;\n\n    if (isTypeMonth.value) {\n        focusedDateData.value.year += 1;\n    } else {\n        const date = new Date(\n            focusedDateData.value.year,\n            focusedDateData.value.month,\n            focusedDateData.value.day,\n        );\n        date.setDate(date.getDate() + 1);\n        focusedDateData.value.day = date.getDate();\n        focusedDateData.value.month = date.getMonth();\n        focusedDateData.value.year = date.getFullYear();\n\n        // todo: show selected hovered date\n        // vmodel.value = date as ModelValue;\n    }\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-datepicker\"],\n    [\n        \"sizeClass\",\n        \"o-datepicker--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\"mobileClass\", \"o-datepicker--mobile\", null, isMobile],\n    [\n        \"expandedClass\",\n        \"o-datepicker--expanded\",\n        null,\n        computed(() => props.expanded),\n    ],\n);\n\nconst boxClasses = defineClasses([\"boxClass\", \"o-datepicker__box\"]);\nconst boxClassBind = computed(() => getActiveClasses(boxClasses));\n\nconst headerClasses = defineClasses([\"headerClass\", \"o-datepicker__header\"]);\n\nconst prevButtonClasses = defineClasses([\n    \"prevButtonClass\",\n    \"o-datepicker__header__previous\",\n]);\n\nconst nextButtonClasses = defineClasses([\n    \"nextButtonClass\",\n    \"o-datepicker__header__next\",\n]);\n\nconst listsClasses = defineClasses([\n    \"listsClass\",\n    \"o-datepicker__header__list\",\n]);\n\nconst footerClasses = defineClasses([\"footerClass\", \"o-datepicker__footer\"]);\n\nconst pickerDropdownClasses = defineClasses([\n    \"dropdownClass\",\n    \"o-datepicker__dropdown\",\n]);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: () => pickerRef.value?.focus(), value: vmodel });\n</script>\n\n<template>\n    <OPickerWrapper\n        ref=\"pickerComponent\"\n        v-model:active=\"isActive\"\n        v-model:value=\"vmodel\"\n        data-oruga=\"datepicker\"\n        :picker-props=\"props\"\n        :formatter=\"format\"\n        :parser=\"parse\"\n        :type=\"!isTypeMonth ? 'date' : 'month'\"\n        :max=\"maxDate\"\n        :min=\"minDate\"\n        :stay-open=\"props.multiple\"\n        :root-classes=\"rootClasses\"\n        :dropdown-classes=\"pickerDropdownClasses\"\n        :box-class=\"boxClassBind\"\n        :dtf=\"dtf\"\n        @focus=\"$emit('focus', $event)\"\n        @blur=\"$emit('blur', $event)\"\n        @invalid=\"$emit('invalid', $event)\"\n        @left=\"prevDate\"\n        @right=\"nextDate\"\n        @icon-click=\"$emit('icon-click', $event)\"\n        @icon-right-click=\"$emit('icon-right-click', $event)\">\n        <template v-if=\"$slots.trigger\" #trigger>\n            <!--\n                @slot Override the trigger\n            -->\n            <slot name=\"trigger\" />\n        </template>\n\n        <header :class=\"headerClasses\">\n            <!--\n                @slot Override the header\n            -->\n            <slot name=\"header\">\n                <OButton\n                    v-if=\"!disabled\"\n                    :class=\"prevButtonClasses\"\n                    :disabled=\"!showPrev\"\n                    :icon-pack=\"iconPack\"\n                    :icon-left=\"iconPrev\"\n                    :size=\"size\"\n                    :aria-label=\"ariaPreviousLabel\"\n                    @click.prevent=\"prev\"\n                    @keydown.enter.prevent=\"prev\"\n                    @keydown.space.prevent=\"prev\" />\n\n                <OButton\n                    v-if=\"!disabled\"\n                    :class=\"nextButtonClasses\"\n                    :disabled=\"!showNext\"\n                    :icon-pack=\"iconPack\"\n                    :icon-left=\"iconNext\"\n                    :size=\"size\"\n                    :aria-label=\"ariaNextLabel\"\n                    @click.prevent=\"next\"\n                    @keydown.enter.prevent=\"next\"\n                    @keydown.space.prevent=\"next\" />\n\n                <div :class=\"listsClasses\">\n                    <o-select\n                        v-if=\"!isTypeMonth\"\n                        v-bind=\"selectClasses\"\n                        v-model=\"focusedDateData.month\"\n                        :disabled=\"disabled\"\n                        :size=\"size\"\n                        :options=\"listOfMonths\"\n                        :aria-label=\"ariaSelectMonthLabel\"\n                        :use-html5-validation=\"false\"\n                        @keydown.left.stop.prevent=\"prev\"\n                        @keydown.right.stop.prevent=\"next\" />\n\n                    <o-select\n                        v-bind=\"selectClasses\"\n                        v-model=\"focusedDateData.year\"\n                        :disabled=\"disabled\"\n                        :size=\"size\"\n                        :options=\"listOfYears\"\n                        :aria-label=\"ariaSelectYearLabel\"\n                        :use-html5-validation=\"false\"\n                        @keydown.left.stop.prevent=\"prev\"\n                        @keydown.right.stop.prevent=\"next\"\n                        @keydown.up.stop.prevent=\"focusedDateData.year += 1\"\n                        @keydown.down.stop.prevent=\"\n                            focusedDateData.year -= 1\n                        \" />\n                </div>\n            </slot>\n        </header>\n\n        <!--\n            @slot Override the body\n        -->\n        <slot name=\"body\">\n            <o-datepicker-month\n                v-if=\"isTypeMonth\"\n                v-model=\"vmodel\"\n                v-model:focused-date=\"focusedDateData\"\n                :month-names=\"computedMonthNames\"\n                :picker-props=\"props\"\n                @range-start=\"(date) => $emit('range-start', date)\"\n                @range-end=\"(date) => $emit('range-end', date)\" />\n\n            <o-datepicker-table\n                v-else\n                v-model=\"vmodel\"\n                v-model:focused-date=\"focusedDateData\"\n                :day-names=\"computedDayNames\"\n                :month-names=\"computedMonthNames\"\n                :picker-props=\"props\"\n                @range-start=\"(date) => $emit('range-start', date)\"\n                @range-end=\"(date) => $emit('range-end', date)\" />\n        </slot>\n\n        <footer v-if=\"$slots.footer\" :class=\"footerClasses\">\n            <!--\n                @slot Define an additional footer\n            -->\n            <slot name=\"footer\" />\n        </footer>\n    </OPickerWrapper>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Datepicker from \"./Datepicker.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export datepicker specific types */\nexport type { DatepickerEvent, FocusedDate } from \"./types\";\n\n/** export datepicker plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Datepicker);\n    },\n} as Plugin;\n\n/** export datepicker components */\nexport { Datepicker as ODatepicker };\n","import { computed } from \"vue\";\nimport { matchWithGroups } from \"../datepicker/utils\";\nimport type { TimepickerProps } from \"./props\";\n\nconst AM = \"AM\" as const;\nconst PM = \"PM\" as const;\nconst HOUR_FORMAT_24 = \"24\" as const;\nconst HOUR_FORMAT_12 = \"12\" as const;\n\n/** Time Format Feature */\nexport function useTimepickerMixins(props: TimepickerProps) {\n    const localeOptions = computed(\n        () =>\n            new Intl.DateTimeFormat(props.locale, {\n                hour: \"numeric\",\n                minute: \"numeric\",\n                second: props.enableSeconds ? \"numeric\" : undefined,\n            }).resolvedOptions() as Intl.DateTimeFormatOptions,\n    );\n\n    const isHourFormat24 = computed(\n        () =>\n            (props.hourFormat && props.hourFormat === HOUR_FORMAT_24) ||\n            (!props.hourFormat && !localeOptions.value.hour12),\n    );\n\n    const dtf = computed(\n        () =>\n            new Intl.DateTimeFormat(props.locale, {\n                hour: localeOptions.value.hour || \"numeric\",\n                minute: localeOptions.value.minute || \"numeric\",\n                second: props.enableSeconds\n                    ? localeOptions.value.second || \"numeric\"\n                    : undefined,\n                hourCycle: !isHourFormat24.value ? \"h12\" : \"h23\",\n            }),\n    );\n\n    const sampleTime = computed(() => {\n        const d = timeCreator();\n        d.setHours(10);\n        d.setSeconds(0);\n        d.setMinutes(0);\n        d.setMilliseconds(0);\n        return d;\n    });\n\n    const amString = computed(() => {\n        if (\n            dtf.value.formatToParts &&\n            typeof dtf.value.formatToParts === \"function\"\n        ) {\n            const d = new Date(sampleTime.value);\n            d.setHours(10);\n            const dayPeriod = dtf.value\n                .formatToParts(d)\n                .find((part) => part.type === \"dayPeriod\");\n            if (dayPeriod) return dayPeriod.value;\n        }\n        return AM;\n    });\n\n    const pmString = computed(() => {\n        if (\n            dtf.value.formatToParts &&\n            typeof dtf.value.formatToParts === \"function\"\n        ) {\n            const d = new Date(sampleTime.value);\n            d.setHours(20);\n            const dayPeriod = dtf.value\n                .formatToParts(d)\n                .find((part) => part.type === \"dayPeriod\");\n            if (dayPeriod) {\n                return dayPeriod.value;\n            }\n        }\n        return PM;\n    });\n\n    const meridiens = computed(() => [amString.value, pmString.value]);\n\n    const hourLiteral = computed(() => {\n        if (\n            dtf.value.formatToParts &&\n            typeof dtf.value.formatToParts === \"function\"\n        ) {\n            const d = new Date(sampleTime.value);\n            const parts = dtf.value.formatToParts(d);\n            const literal = parts.find(\n                (part, idx) => idx > 0 && parts[idx - 1].type === \"hour\",\n            );\n            if (literal) return literal.value;\n        }\n        return \":\";\n    });\n\n    const minuteLiteral = computed(() => {\n        if (\n            dtf.value.formatToParts &&\n            typeof dtf.value.formatToParts === \"function\"\n        ) {\n            const d = new Date(sampleTime.value);\n            const parts = dtf.value.formatToParts(d);\n            const literal = parts.find(\n                (part, idx) => idx > 0 && parts[idx - 1].type === \"minute\",\n            );\n            if (literal) return literal.value;\n        }\n        return \":\";\n    });\n\n    const secondLiteral = computed(() => {\n        if (\n            dtf.value.formatToParts &&\n            typeof dtf.value.formatToParts === \"function\"\n        ) {\n            const d = new Date(sampleTime.value);\n            const parts = dtf.value.formatToParts(d);\n            const literal = parts.find(\n                (part, idx) => idx > 0 && parts[idx - 1].type === \"second\",\n            );\n            if (literal) return literal.value;\n        }\n        return undefined;\n    });\n\n    function timeCreator(): Date {\n        return typeof props.creator === \"function\"\n            ? props.creator()\n            : new Date();\n    }\n\n    function timeFormatter(time: typeof props.modelValue): string {\n        if (typeof props.formatter === \"function\") return props.formatter(time);\n\n        if (!time) return \"00:00\";\n        return dtf.value.format(time);\n    }\n\n    function timeParser(time: string): typeof props.modelValue {\n        if (typeof props.parser === \"function\") return props.parser(time);\n\n        if (!time) return undefined;\n\n        if (\n            dtf.value.formatToParts &&\n            typeof dtf.value.formatToParts === \"function\"\n        ) {\n            const formatRegex = dtf.value\n                .formatToParts(sampleTime.value)\n                .map((part) => {\n                    if (part.type === \"literal\") {\n                        return part.value.replace(/ /g, \"\\\\s?\");\n                    } else if (part.type === \"dayPeriod\") {\n                        return `((?!=<${part.type}>)(${amString.value}|${\n                            pmString.value\n                        }|${AM}|${PM}|${AM.toLowerCase()}|${PM.toLowerCase()})?)`;\n                    }\n                    return `((?!=<${part.type}>)\\\\d+)`;\n                })\n                .join(\"\");\n            const timeGroups = matchWithGroups(formatRegex, time);\n\n            // We do a simple validation for the group.\n            // If it is not valid, it will fallback to Date.parse below\n            timeGroups.hour = timeGroups.hour\n                ? parseInt(timeGroups.hour, 10)\n                : null;\n            timeGroups.minute = timeGroups.minute\n                ? parseInt(timeGroups.minute, 10)\n                : null;\n            timeGroups.second = timeGroups.second\n                ? parseInt(timeGroups.second, 10)\n                : null;\n            if (\n                timeGroups.hour &&\n                timeGroups.hour >= 0 &&\n                timeGroups.hour < 24 &&\n                timeGroups.minute &&\n                timeGroups.minute >= 0 &&\n                timeGroups.minute < 59\n            ) {\n                if (\n                    timeGroups.dayPeriod &&\n                    (timeGroups.dayPeriod.toLowerCase() ===\n                        pmString.value.toLowerCase() ||\n                        timeGroups.dayPeriod.toLowerCase() ===\n                            PM.toLowerCase()) &&\n                    timeGroups.hour < 12\n                ) {\n                    timeGroups.hour += 12;\n                }\n                const date = new Date(sampleTime.value);\n                date.setHours(timeGroups.hour);\n                date.setMinutes(timeGroups.minute);\n                date.setSeconds(timeGroups.second || 0);\n                return date;\n            }\n        }\n\n        // Fallback if formatToParts is not supported or if we were not able to parse a valid date\n        let am = false;\n        if (props.hourFormat === HOUR_FORMAT_12) {\n            const dateString12 = time.split(\" \");\n            time = dateString12[0];\n            am = dateString12[1] === amString.value || dateString12[1] === AM;\n        }\n        const timeSplit = time.split(\":\");\n        let hours = parseInt(timeSplit[0], 10);\n        const minutes = parseInt(timeSplit[1], 10);\n        const seconds =\n            props.enableSeconds && timeSplit.length >= 3\n                ? parseInt(timeSplit[2], 10)\n                : 0;\n        if (\n            isNaN(hours) ||\n            hours < 0 ||\n            hours > 23 ||\n            (props.hourFormat === HOUR_FORMAT_12 &&\n                (hours < 1 || hours > 12)) ||\n            isNaN(minutes) ||\n            minutes < 0 ||\n            minutes > 59\n        ) {\n            return undefined;\n        }\n        const date = new Date(sampleTime.value);\n        date.setSeconds(seconds);\n        date.setMinutes(minutes);\n        if (props.hourFormat === HOUR_FORMAT_12) {\n            if (am && hours === 12) {\n                hours = 0;\n            } else if (!am && hours !== 12) {\n                hours += 12;\n            }\n        }\n        date.setHours(hours);\n        return new Date(date.getTime());\n    }\n\n    return {\n        dtf,\n        timeCreator,\n        timeFormatter,\n        timeParser,\n        pmString,\n        amString,\n        meridiens,\n        isHourFormat24,\n        hourLiteral,\n        minuteLiteral,\n        secondLiteral,\n    };\n}\n","<script setup lang=\"ts\">\nimport { computed, ref, useTemplateRef, watch } from \"vue\";\n\nimport OSelect from \"../select/Select.vue\";\nimport OPickerWrapper from \"../utils/PickerWrapper.vue\";\n\nimport { getDefault } from \"@/utils/config\";\nimport { isDate, isDefined, pad } from \"@/utils/helpers\";\nimport { defineClasses, useMatchMedia, getActiveClasses } from \"@/composables\";\n\nimport { useTimepickerMixins } from \"./useTimepickerMixins\";\n\nimport type { OptionsItem } from \"@/types\";\nimport type { TimepickerProps } from \"./props\";\n\n/**\n * An input with a simple dropdown/modal for selecting a time, uses native timepicker for mobile.\n * @displayName Timepicker\n * @style _timepicker.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OTimepicker\",\n    configField: \"timepicker\",\n});\n\ntype ModelValue = TimepickerProps[\"modelValue\"];\n\nconst props = withDefaults(defineProps<TimepickerProps>(), {\n    override: undefined,\n    modelValue: undefined,\n    active: false,\n    minTime: undefined,\n    maxTime: undefined,\n    inline: false,\n    placeholder: undefined,\n    expanded: false,\n    rounded: false,\n    readonly: false,\n    disabled: false,\n    size: () => getDefault(\"timepicker.size\"),\n    hourFormat: undefined,\n    incrementHours: 1,\n    incrementMinutes: 1,\n    incrementSeconds: 1,\n    openOnFocus: () => getDefault(\"timepicker.openOnFocus\", true),\n    closeOnClick: () => getDefault(\"timepicker.closeOnClick\", true),\n    enableSeconds: false,\n    defaultMinutes: undefined,\n    defaultSeconds: undefined,\n    locale: () => getDefault(\"locale\"),\n    formatter: getDefault(\"timepicker.formatter\"),\n    parser: getDefault(\"timepicker.parser\"),\n    creator: getDefault(\"timepicker.creator\"),\n    unselectableTimes: undefined,\n    resetOnMeridianChange: false,\n    position: undefined,\n    iconPack: () => getDefault(\"timepicker.iconPack\"),\n    icon: () => getDefault(\"timepicker.icon\"),\n    iconRight: () => getDefault(\"timepicker.iconRight\"),\n    iconRightClickable: false,\n    desktopModal: () => getDefault(\"timepicker.desktopModal\", false),\n    mobileModal: () => getDefault(\"timepicker.mobileModal\", true),\n    mobileNative: () => getDefault(\"timepicker.mobileNative\", true),\n    mobileBreakpoint: () => getDefault(\"timepicker.mobileBreakpoint\"),\n    teleport: () => getDefault(\"timepicker.teleport\", false),\n    useHtml5Validation: () => getDefault(\"useHtml5Validation\", true),\n    customValidity: \"\",\n    inputClasses: () => getDefault(\"timepicker.inputClasses\"),\n    dropdownClasses: () => getDefault(\"timepicker.dropdownClasses\"),\n    ariaSelectSecondsLabel: () =>\n        getDefault(\"timepicker.ariaSelectSecondLabel\", \"Select Second\"),\n    ariaSelectMinutesLabel: () =>\n        getDefault(\"timepicker.ariaSelectMinuteLabel\", \"Select Minute\"),\n    ariaSelectHoursLabel: () =>\n        getDefault(\"timepicker.ariaSelectHourLabel\", \"Select Hour\"),\n    selectClasses: () => getDefault(\"timepicker.selectClasses\"),\n});\n\ndefineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {Date} updated modelValue prop\n     */\n    \"update:model-value\": [value: Date];\n    /**\n     * active prop two-way binding\n     * @param value {boolean} updated active prop\n     */\n    \"update:active\": [value: boolean];\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    focus: [event: Event];\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    blur: [event: Event];\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    invalid: [event: Event];\n    /**\n     * on icon click event\n     * @param event {Event} native event\n     */\n    \"icon-click\": [event: Event];\n    /**\n     * on icon right click event\n     * @param event {Event} native event\n     */\n    \"icon-right-click\": [event: Event];\n}>();\n\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\n\nconst {\n    dtf,\n    timeCreator,\n    timeFormatter,\n    timeParser,\n    pmString,\n    amString,\n    meridiens,\n    isHourFormat24,\n    hourLiteral,\n    minuteLiteral,\n    secondLiteral,\n} = useTimepickerMixins(props);\n\nconst pickerRef = useTemplateRef(\"pickerComponent\");\n\n// the modelvalue of selected date, use v-model to make it two-way binding\nconst vmodel = defineModel<ModelValue>({ default: undefined });\n\n// the active state of the dropdown, use v-model:active to make it two-way binding\nconst isActive = defineModel<boolean>(\"active\", { default: false });\n\nconst hoursSelected = ref<number>();\nconst minutesSelected = ref<number>();\nconst secondsSelected = ref<number>();\nconst meridienSelected = ref<string>();\n\nwatch(\n    () => props.modelValue,\n    (value) => updateValue(value),\n    { immediate: true },\n);\n\n/** Update internal value. */\nfunction updateValue(value: Date | Date[] | undefined): void {\n    if (Array.isArray(value)) return updateValue(value[0]);\n    if (vmodel.value !== value) vmodel.value = value;\n    if (value) {\n        // update internal state\n        hoursSelected.value = value.getHours();\n        minutesSelected.value = value.getMinutes();\n        secondsSelected.value = value.getSeconds();\n        meridienSelected.value =\n            value.getHours() >= 12 ? pmString.value : amString.value;\n    } else {\n        // reset internal state\n        hoursSelected.value = undefined;\n        minutesSelected.value = undefined;\n        secondsSelected.value = undefined;\n        meridienSelected.value = amString.value;\n    }\n}\n\nconst step = computed(() => (props.enableSeconds ? \"1\" : undefined));\n\nwatch(\n    () => props.hourFormat,\n    () => {\n        if (isDefined(hoursSelected.value))\n            meridienSelected.value =\n                (hoursSelected.value || 0) >= 12\n                    ? pmString.value\n                    : amString.value;\n    },\n);\n\nwatch(\n    () => props.locale,\n    (value) => {\n        // see updateInternalState default\n        if (!value) meridienSelected.value = amString.value;\n    },\n);\n\nfunction formatNumber(value: number, prependZero: boolean): string {\n    return isHourFormat24.value || prependZero ? pad(value) : String(value);\n}\n\nconst hours = computed<OptionsItem<number>[]>(() => {\n    if (!props.incrementHours || props.incrementHours < 1)\n        throw new Error(\"Hour increment cannot be null or less than 1.\");\n    const hours: OptionsItem<number>[] = [];\n    const numberOfHours = isHourFormat24.value ? 24 : 12;\n    for (let i = 0; i < numberOfHours; i += props.incrementHours) {\n        let value = i;\n        let label = value;\n        if (!isHourFormat24.value) {\n            value = i + 1;\n            label = value;\n            if (meridienSelected.value === amString.value) {\n                if (value === 12) value = 0;\n            } else if (meridienSelected.value === pmString.value) {\n                if (value !== 12) value += 12;\n            }\n        }\n        hours.push({\n            label: formatNumber(label, false),\n            value: value,\n        });\n    }\n    return hours;\n});\n\nconst minutes = computed<OptionsItem<number>[]>(() => {\n    if (!props.incrementMinutes || props.incrementMinutes < 1)\n        throw new Error(\"Minute increment cannot be null or less than 1.\");\n    const minutes: OptionsItem<number>[] = [];\n    for (let i = 0; i < 60; i += props.incrementMinutes) {\n        minutes.push({\n            label: formatNumber(i, true),\n            value: i,\n        });\n    }\n    return minutes;\n});\n\nconst seconds = computed<OptionsItem<number>[]>(() => {\n    if (!props.incrementSeconds || props.incrementSeconds < 1)\n        throw new Error(\"Second increment cannot be null or less than 1.\");\n    const seconds: OptionsItem<number>[] = [];\n    for (let i = 0; i < 60; i += props.incrementSeconds) {\n        seconds.push({\n            label: formatNumber(i, true),\n            value: i,\n        });\n    }\n    return seconds;\n});\n\nfunction isHourDisabled(hour: number): boolean {\n    let disabled = false;\n    if (props.minTime) {\n        const minHours = props.minTime.getHours();\n        const noMinutesAvailable = minutes.value.every((minute) => {\n            return isMinuteDisabledForHour(hour, minute.value);\n        });\n        disabled = hour < minHours || noMinutesAvailable;\n    }\n    if (props.maxTime) {\n        if (!disabled) {\n            const maxHours = props.maxTime.getHours();\n            disabled = hour > maxHours;\n        }\n    }\n\n    if (props.unselectableTimes && !disabled) {\n        if (typeof props.unselectableTimes === \"function\") {\n            const date = new Date();\n            date.setHours(hour);\n            date.setMinutes(minutesSelected.value || 0);\n            date.setSeconds(secondsSelected.value || 0);\n            return props.unselectableTimes(date);\n        } else {\n            const unselectable = props.unselectableTimes.filter((time) => {\n                if (props.enableSeconds && isDefined(secondsSelected.value)) {\n                    return (\n                        time.getHours() === hour &&\n                        time.getMinutes() === minutesSelected.value &&\n                        time.getSeconds() === secondsSelected.value\n                    );\n                } else if (isDefined(minutesSelected.value)) {\n                    return (\n                        time.getHours() === hour &&\n                        time.getMinutes() === minutesSelected.value\n                    );\n                }\n                return false;\n            });\n            if (unselectable.length > 0) {\n                disabled = true;\n            } else {\n                disabled = minutes.value.every((minute) => {\n                    return (\n                        (props.unselectableTimes as Date[]).filter((time) => {\n                            return (\n                                time.getHours() === hour &&\n                                time.getMinutes() === minute.value\n                            );\n                        }).length > 0\n                    );\n                });\n            }\n        }\n    }\n    return disabled;\n}\n\nfunction isMinuteDisabledForHour(hour: number, minute: number): boolean {\n    let disabled = false;\n    if (props.minTime) {\n        const minHours = props.minTime.getHours();\n        const minMinutes = props.minTime.getMinutes();\n        disabled = hour === minHours && minute < minMinutes;\n    }\n    if (props.maxTime) {\n        if (!disabled) {\n            const maxHours = props.maxTime.getHours();\n            const maxMinutes = props.maxTime.getMinutes();\n            disabled = hour === maxHours && minute > maxMinutes;\n        }\n    }\n    return disabled;\n}\n\nfunction isMinuteDisabled(minute: number): boolean {\n    if (hoursSelected.value === undefined) return false;\n\n    let disabled =\n        isHourDisabled(hoursSelected.value) ||\n        isMinuteDisabledForHour(hoursSelected.value, minute);\n\n    if (props.unselectableTimes && !disabled) {\n        if (typeof props.unselectableTimes === \"function\") {\n            const date = new Date();\n            date.setHours(hoursSelected.value);\n            date.setMinutes(minute);\n            date.setSeconds(secondsSelected.value || 0);\n            return props.unselectableTimes(date);\n        } else {\n            const unselectable = props.unselectableTimes.filter((time) => {\n                if (props.enableSeconds && isDefined(secondsSelected.value)) {\n                    return (\n                        time.getHours() === hoursSelected.value &&\n                        time.getMinutes() === minute &&\n                        time.getSeconds() === secondsSelected.value\n                    );\n                } else {\n                    return (\n                        time.getHours() === hoursSelected.value &&\n                        time.getMinutes() === minute\n                    );\n                }\n            });\n            disabled = unselectable.length > 0;\n        }\n    }\n    return disabled;\n}\n\nfunction isSecondDisabled(second: number): boolean {\n    if (!isDefined(minutesSelected.value)) return false;\n    let disabled = false;\n\n    if (isMinuteDisabled(minutesSelected.value)) {\n        disabled = true;\n    } else {\n        if (props.minTime) {\n            const minHours = props.minTime.getHours();\n            const minMinutes = props.minTime.getMinutes();\n            const minSeconds = props.minTime.getSeconds();\n            disabled =\n                hoursSelected.value === minHours &&\n                minutesSelected.value === minMinutes &&\n                second < minSeconds;\n        }\n        if (props.maxTime) {\n            if (!disabled) {\n                const maxHours = props.maxTime.getHours();\n                const maxMinutes = props.maxTime.getMinutes();\n                const maxSeconds = props.maxTime.getSeconds();\n                disabled =\n                    hoursSelected.value === maxHours &&\n                    minutesSelected.value === maxMinutes &&\n                    second > maxSeconds;\n            }\n        }\n    }\n    if (props.unselectableTimes && !disabled) {\n        if (typeof props.unselectableTimes === \"function\") {\n            const date = new Date();\n            date.setHours(hoursSelected.value || 0);\n            date.setMinutes(minutesSelected.value);\n            date.setSeconds(second);\n            return props.unselectableTimes(date);\n        } else {\n            const unselectable = props.unselectableTimes.filter((time) => {\n                return (\n                    time.getHours() === hoursSelected.value &&\n                    time.getMinutes() === minutesSelected.value &&\n                    time.getSeconds() === second\n                );\n            });\n            disabled = unselectable.length > 0;\n        }\n    }\n    return disabled;\n}\n\nfunction isMeridienDisabled(meridienString: string): boolean {\n    const offset = meridienString == \"AM\" ? 0 : 12;\n    for (let i = 0; i < 12; i++) {\n        if (!isHourDisabled(i + offset)) return false;\n    }\n    return true;\n}\n\nfunction updateDateSelected(\n    hours: number,\n    minutes: number,\n    seconds: number,\n    meridiens,\n): void {\n    if (\n        isDefined(hours) &&\n        isDefined(minutes) &&\n        ((!isDefined(isHourFormat24.value) && isDefined(meridiens)) ||\n            isDefined(isHourFormat24.value))\n    ) {\n        let time: Date;\n        if (vmodel.value) {\n            time = new Date(vmodel.value);\n        } else {\n            time = timeCreator();\n            time.setMilliseconds(0);\n        }\n        time.setHours(hours);\n        time.setMinutes(minutes);\n        time.setSeconds(seconds);\n        if (!isNaN(time.getTime())) {\n            vmodel.value = new Date(time.getTime());\n        }\n    }\n}\n\n// --- Formatter / Parser ---\n\n/** Format date into string */\nfunction format(value: Date | Date[] | undefined, isNative: boolean): string {\n    if (Array.isArray(value)) return format(value[0], isNative);\n    if (isNative) return formatNative(value);\n\n    return timeFormatter(value);\n}\n\n/** Format date into string 'HH-MM-SS'*/\nfunction formatNative(value: Date | Date[] | undefined): string {\n    if (Array.isArray(value)) return formatNative(value[0]);\n\n    // return empty string if no value is given or value can't parse to proper date\n    if (!value) return \"\";\n    const date = new Date(value);\n    if (!isDate(date)) return \"\";\n\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n    const seconds = date.getSeconds();\n    return (\n        formatNumber(hours, true) +\n        \":\" +\n        formatNumber(minutes, true) +\n        \":\" +\n        formatNumber(seconds, true)\n    );\n}\n\n/** Parse string into date */\nfunction parse(value: string, isNative: boolean): Date | undefined {\n    if (isNative) return parseNative(value);\n\n    const date = timeParser(value);\n    return isDate(date) ? date : undefined;\n}\n\n/** Parse time from string */\nfunction parseNative(date: string): Date | undefined {\n    if (!date) return undefined;\n\n    let time: Date;\n    if (vmodel.value) {\n        time = new Date(vmodel.value);\n    } else {\n        time = timeCreator();\n        time.setMilliseconds(0);\n    }\n    const t = date.split(\":\");\n    time.setHours(parseInt(t[0], 10));\n    time.setMinutes(parseInt(t[1], 10));\n    time.setSeconds(t[2] ? parseInt(t[2], 10) : 0);\n    return new Date(time.getTime());\n}\n\n// --- Event Handler ---\n\nfunction onMeridienChange(value: string): void {\n    if (isDefined(hoursSelected.value) && props.resetOnMeridianChange) {\n        hoursSelected.value = undefined;\n        minutesSelected.value = undefined;\n        secondsSelected.value = undefined;\n        vmodel.value = undefined;\n    } else if (isDefined(hoursSelected.value)) {\n        if (value === pmString.value) hoursSelected.value += 12;\n        else if (value === amString.value) hoursSelected.value -= 12;\n    }\n    updateDateSelected(\n        hoursSelected.value || 0,\n        minutesSelected.value || 0,\n        props.enableSeconds ? secondsSelected.value || 0 : 0,\n        value,\n    );\n}\n\nfunction onHoursChange(value: string): void {\n    if (!minutesSelected.value && typeof props.defaultMinutes !== \"undefined\")\n        minutesSelected.value = props.defaultMinutes;\n    if (!secondsSelected.value && typeof props.defaultSeconds !== \"undefined\")\n        secondsSelected.value = props.defaultSeconds;\n\n    updateDateSelected(\n        parseInt(value, 10),\n        minutesSelected.value || 0,\n        props.enableSeconds ? secondsSelected.value || 0 : 0,\n        meridienSelected.value,\n    );\n}\n\nfunction onMinutesChange(value: string): void {\n    if (!secondsSelected.value && props.defaultSeconds)\n        secondsSelected.value = props.defaultSeconds;\n\n    updateDateSelected(\n        hoursSelected.value || 0,\n        parseInt(value, 10),\n        props.enableSeconds ? secondsSelected.value || 0 : 0,\n        meridienSelected.value,\n    );\n}\n\nfunction onSecondsChange(value: string): void {\n    updateDateSelected(\n        hoursSelected.value || 0,\n        minutesSelected.value || 0,\n        parseInt(value, 10),\n        meridienSelected.value,\n    );\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-timepicker\"],\n    [\n        \"sizeClass\",\n        \"o-timepicker--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\"mobileClass\", \"o-timepicker--mobile\", null, isMobile],\n);\n\nconst separatorClasses = defineClasses([\n    \"separatorClass\",\n    \"o-timepicker__separtor\",\n]);\n\nconst footerClasses = defineClasses([\"footerClass\", \"o-timepicker__footer\"]);\n\nconst pickerDropdownClasses = defineClasses([\n    \"dropdownClass\",\n    \"o-timepicker__dropdown\",\n]);\n\nconst boxClasses = defineClasses([\"boxClass\", \"o-timepicker__box\"]);\nconst boxClassBind = computed(() => getActiveClasses(boxClasses));\n\nconst selectSelectClasses = defineClasses([\n    \"selectClasses.selectClass\",\n    \"o-timepicker__select\",\n]);\n\nconst selectPlaceholderClasses = defineClasses([\n    \"selectClasses.placeholderClass\",\n    \"o-timepicker__select-placeholder\",\n]);\n\nconst selectBind = computed(() => ({\n    \"select-class\": getActiveClasses(selectSelectClasses),\n    \"placeholder-class\": getActiveClasses(selectPlaceholderClasses),\n    ...props.selectClasses,\n}));\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: () => pickerRef.value?.focus(), value: vmodel });\n</script>\n\n<template>\n    <OPickerWrapper\n        ref=\"pickerComponent\"\n        v-model:active=\"isActive\"\n        :value=\"vmodel\"\n        data-oruga=\"timepicker\"\n        :picker-props=\"props\"\n        :formatter=\"format\"\n        :parser=\"parse\"\n        type=\"time\"\n        :max=\"maxTime\"\n        :min=\"minTime\"\n        :step=\"step\"\n        :root-classes=\"rootClasses\"\n        :dropdown-classes=\"pickerDropdownClasses\"\n        :box-class=\"boxClassBind\"\n        :dtf=\"dtf\"\n        @update:value=\"updateValue\"\n        @focus=\"$emit('focus', $event)\"\n        @blur=\"$emit('blur', $event)\"\n        @invalid=\"$emit('invalid', $event)\"\n        @icon-click=\"$emit('icon-click', $event)\"\n        @icon-right-click=\"$emit('icon-right-click', $event)\">\n        <template v-if=\"$slots.trigger\" #trigger>\n            <!--\n                @slot Override the trigger\n            -->\n            <slot name=\"trigger\" />\n        </template>\n\n        <o-select\n            v-bind=\"selectBind\"\n            v-model=\"hoursSelected\"\n            :options=\"hours\"\n            override\n            :disabled=\"disabled\"\n            placeholder=\"00\"\n            :aria-label=\"ariaSelectHoursLabel\"\n            :use-html5-validation=\"false\"\n            @change=\"onHoursChange($event.target.value)\" />\n\n        <span :class=\"separatorClasses\">{{ hourLiteral }}</span>\n\n        <o-select\n            v-bind=\"selectBind\"\n            v-model=\"minutesSelected\"\n            override\n            :disabled=\"disabled\"\n            placeholder=\"00\"\n            :aria-label=\"ariaSelectMinutesLabel\"\n            :use-html5-validation=\"false\"\n            @change=\"onMinutesChange($event.target.value)\">\n            <option\n                v-for=\"minute in minutes\"\n                :key=\"minute.value\"\n                :value=\"minute.value\"\n                :disabled=\"isMinuteDisabled(minute.value)\">\n                {{ minute.label }}\n            </option>\n        </o-select>\n\n        <template v-if=\"enableSeconds\">\n            <span :class=\"separatorClasses\">{{ minuteLiteral }}</span>\n\n            <o-select\n                v-bind=\"selectBind\"\n                v-model=\"secondsSelected\"\n                override\n                :disabled=\"disabled\"\n                placeholder=\"00\"\n                :aria-label=\"ariaSelectSecondsLabel\"\n                :use-html5-validation=\"false\"\n                @change=\"onSecondsChange($event.target.value)\">\n                <option\n                    v-for=\"second in seconds\"\n                    :key=\"second.value\"\n                    :value=\"second.value\"\n                    :disabled=\"isSecondDisabled(second.value)\">\n                    {{ second.label }}\n                </option>\n            </o-select>\n\n            <span :class=\"separatorClasses\">{{ secondLiteral }}</span>\n        </template>\n\n        <o-select\n            v-if=\"!isHourFormat24\"\n            v-bind=\"selectBind\"\n            v-model=\"meridienSelected\"\n            override\n            :disabled=\"disabled\"\n            :use-html5-validation=\"false\"\n            @change=\"onMeridienChange($event.target.value)\">\n            <option\n                v-for=\"meridien in meridiens\"\n                :key=\"meridien\"\n                :value=\"meridien\"\n                :disabled=\"isMeridienDisabled(meridien)\">\n                {{ meridien }}\n            </option>\n        </o-select>\n\n        <footer v-if=\"$slots.footer\" :class=\"footerClasses\">\n            <!--\n                @slot Define an additional content on footer\n            -->\n            <slot name=\"footer\" />\n        </footer>\n    </OPickerWrapper>\n</template>\n","import { computed } from \"vue\";\nimport { matchWithGroups } from \"../datepicker/utils\";\nimport type { DatetimepickerProps } from \"./props\";\n\nconst AM = \"AM\" as const;\nconst PM = \"PM\" as const;\nconst HOUR_FORMAT_24 = \"24\" as const;\n\n/** Time Format Feature */\nexport function useDateimepickerMixins(props: DatetimepickerProps) {\n    const localeOptions = computed(\n        () =>\n            new Intl.DateTimeFormat(props.locale, {\n                year: \"numeric\",\n                month: \"numeric\",\n                day: \"numeric\",\n                hour: \"numeric\",\n                minute: \"numeric\",\n                second: props.timepicker?.enableSeconds ? \"numeric\" : undefined,\n            }).resolvedOptions() as Intl.DateTimeFormatOptions,\n    );\n\n    const isHourFormat24 = computed(\n        () =>\n            (props.timepicker?.hourFormat &&\n                props.timepicker.hourFormat === HOUR_FORMAT_24) ||\n            (!props.timepicker?.hourFormat && !localeOptions.value.hour12),\n    );\n\n    const dtf = computed(\n        () =>\n            new Intl.DateTimeFormat(props.locale, {\n                year: localeOptions.value.year || \"numeric\",\n                month: localeOptions.value.month || \"numeric\",\n                day: localeOptions.value.day || \"numeric\",\n                hour: localeOptions.value.hour || \"numeric\",\n                minute: localeOptions.value.minute || \"numeric\",\n                second: props.timepicker?.enableSeconds\n                    ? localeOptions.value.second || \"numeric\"\n                    : undefined,\n                hourCycle: !isHourFormat24.value ? \"h12\" : \"h23\",\n            }),\n    );\n\n    const amString = computed(() => {\n        if (\n            dtf.value.formatToParts &&\n            typeof dtf.value.formatToParts === \"function\"\n        ) {\n            const d = datetimeCreator();\n            d.setHours(10);\n            const dayPeriod = dtf.value\n                .formatToParts(d)\n                .find((part) => part.type === \"dayPeriod\");\n            if (dayPeriod) return dayPeriod.value;\n        }\n        return AM;\n    });\n\n    const pmString = computed(() => {\n        if (\n            dtf.value.formatToParts &&\n            typeof dtf.value.formatToParts === \"function\"\n        ) {\n            const d = datetimeCreator();\n            d.setHours(20);\n            const dayPeriod = dtf.value\n                .formatToParts(d)\n                .find((part) => part.type === \"dayPeriod\");\n            if (dayPeriod) return dayPeriod.value;\n        }\n        return PM;\n    });\n\n    function datetimeCreator(): Date {\n        return typeof props.creator === \"function\"\n            ? props.creator()\n            : new Date();\n    }\n\n    function datetimeFormatter(date: Date): string {\n        if (typeof props.formatter === \"function\") return props.formatter(date);\n\n        if (!date) return \"\";\n        return dtf.value.format(date);\n    }\n\n    function datetimeParser(date: string): Date | undefined {\n        if (typeof props.parser === \"function\") return props.parser(date);\n\n        if (!date) return undefined;\n        if (\n            dtf.value.formatToParts &&\n            typeof dtf.value.formatToParts === \"function\"\n        ) {\n            const dayPeriods = [\n                AM,\n                PM,\n                AM.toLowerCase(),\n                PM.toLowerCase(),\n                amString.value,\n                pmString.value,\n            ];\n            const parts = dtf.value.formatToParts(new Date());\n            const formatRegex = parts\n                .map((part, idx) => {\n                    if (part.type === \"literal\") {\n                        if (\n                            idx + 1 < parts.length &&\n                            parts[idx + 1].type === \"hour\"\n                        ) {\n                            return `[^\\\\d]+`;\n                        }\n                        return part.value.replace(/ /g, \"\\\\s?\");\n                    } else if (part.type === \"dayPeriod\") {\n                        return `((?!=<${part.type}>)(${dayPeriods.join(\n                            \"|\",\n                        )})?)`;\n                    }\n                    return `((?!=<${part.type}>)\\\\d+)`;\n                })\n                .join(\"\");\n            const datetimeGroups = matchWithGroups(formatRegex, date);\n\n            // We do a simple validation for the group.\n            // If it is not valid, it will fallback to Date.parse below\n            if (\n                datetimeGroups.year &&\n                datetimeGroups.year.length === 4 &&\n                datetimeGroups.month &&\n                datetimeGroups.month <= 12 &&\n                datetimeGroups.day &&\n                datetimeGroups.day <= 31 &&\n                datetimeGroups.hour &&\n                datetimeGroups.hour >= 0 &&\n                datetimeGroups.hour < 24 &&\n                datetimeGroups.minute &&\n                datetimeGroups.minute >= 0 &&\n                datetimeGroups.minute <= 59\n            ) {\n                return new Date(\n                    datetimeGroups.year,\n                    datetimeGroups.month - 1,\n                    datetimeGroups.day,\n                    datetimeGroups.hour,\n                    datetimeGroups.minute,\n                    datetimeGroups.second || 0,\n                );\n            }\n        }\n\n        // Fallback if formatToParts is not supported or if we were not able to parse a valid date\n        return new Date(Date.parse(date));\n    }\n\n    return {\n        dtf,\n        datetimeCreator,\n        datetimeFormatter,\n        datetimeParser,\n    };\n}\n","<script setup lang=\"ts\">\nimport { computed, ref, useTemplateRef, watch } from \"vue\";\n\nimport ODatepicker from \"../datepicker/Datepicker.vue\";\nimport OTimepicker from \"../timepicker/Timepicker.vue\";\nimport OInput from \"../input/Input.vue\";\n\nimport { getDefault } from \"@/utils/config\";\nimport { isDate, isMobileAgent, pad } from \"@/utils/helpers\";\nimport { defineClasses, useInputHandler } from \"@/composables\";\n\nimport { useDateimepickerMixins } from \"./useDatetimepickerMixin\";\n\nimport type { DatepickerProps } from \"../datepicker/props\";\nimport type { TimepickerProps } from \"../timepicker/props\";\nimport type { DatetimepickerProps } from \"./props\";\n\n/**\n * An input with a simple dropdown/modal for selecting a date and time, uses native datetimepicker for mobile.\n * @displayName Datetimepicker\n * @style _datetimepicker.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"ODatetimepicker\",\n    configField: \"datetimepicker\",\n    inheritAttrs: false,\n});\n\ntype ModelValue = DatetimepickerProps[\"modelValue\"];\n\nconst props = withDefaults(defineProps<DatetimepickerProps>(), {\n    override: undefined,\n    modelValue: undefined,\n    active: false,\n    datepicker: undefined,\n    timepicker: undefined,\n    minDatetime: undefined,\n    maxDatetime: undefined,\n    size: () => getDefault(\"datetimepicker.size\"),\n    expanded: false,\n    rounded: false,\n    placeholder: undefined,\n    readonly: false,\n    disabled: false,\n    inline: false,\n    openOnFocus: () => getDefault(\"datetimepicker.openOnFocus\", true),\n    locale: () => getDefault(\"locale\"),\n    formatter: getDefault(\"datetimepicker.dateFormatter\"),\n    parser: getDefault(\"datetimepicker.dateParser\"),\n    creator: getDefault(\"datetimepicker.datetimeCreator\"),\n    position: undefined,\n    iconPack: () => getDefault(\"datetimepicker.iconPack\"),\n    icon: () => getDefault(\"datetimepicker.icon\"),\n    iconRight: () => getDefault(\"datetimepicker.iconRight\"),\n    iconRightClickable: false,\n    desktopModal: () => getDefault(\"datetimepicker.desktopModal\", false),\n    mobileModal: () => getDefault(\"datetimepicker.mobileModal\", true),\n    mobileNative: () => getDefault(\"datetimepicker.mobileNative\", true),\n    teleport: () => getDefault(\"datetimepicker.teleport\", false),\n    useHtml5Validation: () => getDefault(\"useHtml5Validation\", true),\n    customValidity: \"\",\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {Date} updated modelValue prop\n     */\n    \"update:model-value\": [value: Date];\n    /**\n     * active prop two-way binding\n     * @param value {boolean} updated active prop\n     */\n    \"update:active\": [value: boolean];\n    /**\n     * on range start is selected event\n     * @param value {Date} range start date\n     */\n    \"range-start\": [value: Date];\n    /**\n     * on range end is selected event\n     * @param value {Date} range end date\n     */\n    \"range-end\": [value: Date];\n    /**\n     * on month change event\n     * @param value {number} month number\n     */\n    \"change-month\": [value: number];\n    /**\n     * on year change event\n     * @param value {number} year number\n     */\n    \"change-year\": [value: number];\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    focus: [event: Event];\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    blur: [event: Event];\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    invalid: [event: Event];\n    /**\n     * on icon click event\n     * @param event {Event} native event\n     */\n    \"icon-click\": [event: Event];\n    /**\n     * on icon right click event\n     * @param event {Event} native event\n     */\n    \"icon-right-click\": [event: Event];\n}>();\n\nconst datepickerRef = useTemplateRef(\"datepickerComponent\");\nconst nativeInputRef = useTemplateRef(\"nativeInputComponent\");\n\nconst timepickerProps = ref<TimepickerProps | undefined>(props.timepicker);\nwatch(\n    () => props.timepicker,\n    (value) => (timepickerProps.value = value),\n    { deep: true },\n);\nconst datepickerProps = ref<DatepickerProps | undefined>(props.datepicker);\nwatch(\n    () => props.datepicker,\n    (value) => (datepickerProps.value = value),\n    { deep: true },\n);\n\nconst isMobileNative = computed(\n    () => props.mobileNative && isMobileAgent.any(),\n);\n\nconst elementRef = computed(() =>\n    isMobileNative.value ? nativeInputRef.value : datepickerRef.value,\n);\n\n// use form input functionality for native input\nconst { setFocus, onBlur, onFocus, onInvalid } = useInputHandler(\n    elementRef,\n    emits,\n    props,\n);\n\nconst { datetimeFormatter, datetimeParser } = useDateimepickerMixins(props);\n\n// the active state of the dropdown, use v-model:active to make it two-way binding\nconst isActive = defineModel<boolean>(\"active\", { default: false });\n\n// the modelvalue of selected date, use v-model to make it two-way binding\nconst vmodel = defineModel<ModelValue>({ default: undefined });\n\nfunction updateVModel(value: Date | Date[] | undefined): void {\n    if (Array.isArray(value)) return updateVModel(value[0]);\n    if (!value) {\n        vmodel.value = undefined;\n        return;\n    }\n\n    let date = new Date(value.getTime());\n    if (props.modelValue) {\n        // restore time part\n        if (\n            (value.getDate() !== props.modelValue.getDate() ||\n                value.getMonth() !== props.modelValue.getMonth() ||\n                value.getFullYear() !== props.modelValue.getFullYear()) &&\n            value.getHours() === 0 &&\n            value.getMinutes() === 0 &&\n            value.getSeconds() === 0\n        ) {\n            date.setHours(\n                props.modelValue.getHours(),\n                props.modelValue.getMinutes(),\n                props.modelValue.getSeconds(),\n                0,\n            );\n        }\n    }\n    // check min and max range\n    if (props.minDatetime && date < props.minDatetime) {\n        date = props.minDatetime;\n    } else if (props.maxDatetime && date > props.maxDatetime) {\n        date = props.maxDatetime;\n    }\n    vmodel.value = new Date(date.getTime());\n}\n\nconst minDate = computed(() => {\n    if (!props.minDatetime) return datepickerProps.value?.minDate;\n    return new Date(\n        props.minDatetime.getFullYear(),\n        props.minDatetime.getMonth(),\n        props.minDatetime.getDate(),\n        0,\n        0,\n        0,\n        0,\n    );\n});\n\nconst maxDate = computed(() => {\n    if (!props.maxDatetime) return datepickerProps.value?.maxDate;\n    return new Date(\n        props.maxDatetime.getFullYear(),\n        props.maxDatetime.getMonth(),\n        props.maxDatetime.getDate(),\n        0,\n        0,\n        0,\n        0,\n    );\n});\n\n// Only enable min/max time if local (not necessarily UTC) date portion matches\nconst minTime = computed(() => {\n    if (\n        !props.minDatetime ||\n        vmodel.value === null ||\n        typeof vmodel.value === \"undefined\" ||\n        vmodel.value.getFullYear() != props.minDatetime.getFullYear() ||\n        vmodel.value.getMonth() != props.minDatetime.getMonth() ||\n        vmodel.value.getDate() != props.minDatetime.getDate()\n    ) {\n        return timepickerProps.value?.minTime;\n    }\n    return props.minDatetime;\n});\n\nconst maxTime = computed(() => {\n    if (\n        !props.maxDatetime ||\n        vmodel.value === null ||\n        typeof vmodel.value === \"undefined\" ||\n        vmodel.value.getFullYear() != props.maxDatetime.getFullYear() ||\n        vmodel.value.getMonth() != props.maxDatetime.getMonth() ||\n        vmodel.value.getDate() != props.maxDatetime.getDate()\n    ) {\n        return timepickerProps.value?.maxTime;\n    }\n    return props.maxDatetime;\n});\n\nconst datepickerSize = computed(\n    () => datepickerProps.value?.size || props.size,\n);\n\nconst timepickerSize = computed(\n    () => timepickerProps.value?.size || props.size,\n);\n\nconst timepickerDisabled = computed(\n    () => timepickerProps.value?.disabled || props.disabled,\n);\n\n// --- Formatter / Parser ---\n\n/** Format date into string */\nfunction format(value: Date): string {\n    return datetimeFormatter(value);\n}\n\n/** Parse string into date */\nfunction parse(value: string): Date | undefined {\n    const date = datetimeParser(value);\n\n    return isDate(date) ? date : undefined;\n}\n\nfunction formatNative(value: ModelValue): string {\n    const date = value ? new Date(value) : undefined;\n    if (date && isDate(date)) {\n        const year = date.getFullYear();\n        const month = date.getMonth() + 1;\n        const day = date.getDate();\n        const hours = date.getHours();\n        const minutes = date.getMinutes();\n        const seconds = date.getSeconds();\n        return (\n            year +\n            \"-\" +\n            pad(month) +\n            \"-\" +\n            pad(day) +\n            \"T\" +\n            pad(hours) +\n            \":\" +\n            pad(minutes) +\n            \":\" +\n            pad(seconds)\n        );\n    }\n    return \"\";\n}\n\n// --- Event Handler ---\n\n/** Parse date from string */\nfunction onChangeNativePicker(event: Event): void {\n    const date = (event.target as HTMLInputElement).value;\n    const s = date ? date.split(/\\D/) : [];\n    if (s.length >= 5) {\n        const year = parseInt(s[0], 10);\n        const month = parseInt(s[1], 10) - 1;\n        const day = parseInt(s[2], 10);\n        const hours = parseInt(s[3], 10);\n        const minutes = parseInt(s[4], 10);\n        // Seconds are omitted intentionally; they are unsupported by input\n        // type=datetime-local and cause the control to fail native validation\n        updateVModel(new Date(year, month, day, hours, minutes));\n    } else {\n        updateVModel(undefined);\n    }\n}\n\n// --- Computed Component Classes ---\n\nconst datepickerWrapperClasses = defineClasses([\n    \"datepickerWrapperClass\",\n    \"o-datetimepicker__date\",\n]);\n\nconst timepickerWrapperClasses = defineClasses([\n    \"timepickerWrapperClass\",\n    \"o-datetimepicker__time\",\n]);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: setFocus, value: vmodel });\n</script>\n\n<template>\n    <o-datepicker\n        v-if=\"!isMobileNative || inline\"\n        ref=\"datepickerComponent\"\n        v-bind=\"{ ...$attrs, ...datepicker }\"\n        v-model:active=\"isActive\"\n        :model-value=\"vmodel\"\n        data-oruga=\"datetimepicker\"\n        :class=\"datepickerWrapperClasses\"\n        :rounded=\"rounded\"\n        :open-on-focus=\"openOnFocus\"\n        :position=\"position\"\n        :inline=\"inline\"\n        :readonly=\"readonly\"\n        :expanded=\"expanded\"\n        :close-on-click=\"false\"\n        :formatter=\"format\"\n        :parser=\"parse\"\n        :min-date=\"minDate\"\n        :max-date=\"maxDate\"\n        :icon=\"icon\"\n        :icon-right=\"iconRight\"\n        :icon-right-clickable=\"iconRightClickable\"\n        :icon-pack=\"iconPack\"\n        :size=\"datepickerSize\"\n        :placeholder=\"placeholder\"\n        :range=\"false\"\n        :multiple=\"false\"\n        :disabled=\"disabled\"\n        :desktop-modal=\"desktopModal\"\n        :mobile-modal=\"mobileModal\"\n        :mobile-native=\"isMobileNative\"\n        :locale=\"locale\"\n        :teleport=\"teleport\"\n        :use-html5-validation=\"false\"\n        @update:model-value=\"updateVModel\"\n        @focus=\"onFocus\"\n        @blur=\"onBlur\"\n        @invalid=\"onInvalid\"\n        @change-month=\"$emit('change-month', $event)\"\n        @change-year=\"$emit('change-year', $event)\"\n        @icon-click=\"$emit('icon-click', $event)\"\n        @icon-right-click=\"$emit('icon-right-click', $event)\">\n        <template #footer>\n            <div :class=\"timepickerWrapperClasses\">\n                <o-timepicker\n                    v-bind=\"timepicker\"\n                    v-model=\"vmodel\"\n                    inline\n                    :readonly=\"readonly\"\n                    :min-time=\"minTime\"\n                    :max-time=\"maxTime\"\n                    :size=\"timepickerSize\"\n                    :disabled=\"timepickerDisabled\"\n                    :mobile-native=\"isMobileNative\"\n                    :locale=\"locale\" />\n            </div>\n\n            <template v-if=\"$slots.footer\">\n                <!--\n                    @slot Define an additional footer\n                -->\n                <slot name=\"footer\" />\n            </template>\n        </template>\n    </o-datepicker>\n\n    <!-- Native Picker -->\n    <o-input\n        v-else\n        v-bind=\"$attrs\"\n        ref=\"nativeInputComponent\"\n        type=\"datetime-local\"\n        autocomplete=\"off\"\n        :value=\"formatNative(vmodel)\"\n        :max=\"formatNative(maxDate)\"\n        :min=\"formatNative(minDate)\"\n        :placeholder=\"placeholder\"\n        :size=\"datepickerSize\"\n        :icon-pack=\"iconPack\"\n        :icon=\"icon\"\n        :rounded=\"rounded\"\n        :disabled=\"disabled\"\n        :readonly=\"false\"\n        :use-html5-validation=\"false\"\n        @change=\"onChangeNativePicker\"\n        @focus=\"onFocus\"\n        @blur=\"onBlur\"\n        @invalid=\"onInvalid\" />\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Datetimepicker from \"./Datetimepicker.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export datetimepicker plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Datetimepicker);\n    },\n} as Plugin;\n\n/** export datetimepicker components */\nexport { Datetimepicker as ODatetimepicker };\n","import type { App, Plugin } from \"vue\";\n\nimport Dropdown from \"./Dropdown.vue\";\nimport DropdownItem from \"./DropdownItem.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export dropdown plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Dropdown);\n        registerComponent(app, DropdownItem);\n    },\n} as Plugin;\n\n/** export dropdown components */\nexport { Dropdown as ODropdown, DropdownItem as ODropdownItem };\n","<script setup lang=\"ts\">\nimport {\n    computed,\n    ref,\n    useSlots,\n    watch,\n    useId,\n    useTemplateRef,\n    type VNodeArrayChildren,\n} from \"vue\";\n\nimport { getDefault } from \"@/utils/config\";\nimport { isVNodeEmpty } from \"@/utils/helpers\";\nimport { defineClasses, useMatchMedia } from \"@/composables\";\n\nimport { injectField, provideField, type FieldData } from \"./fieldInjection\";\n\nimport type { FieldProps } from \"./props\";\n\n/**\n * Fields are used to add functionality to controls and to attach/group components and elements together.\n * @displayName Field\n * @style _field.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OField\",\n    configField: \"field\",\n});\n\nconst props = withDefaults(defineProps<FieldProps>(), {\n    override: undefined,\n    variant: undefined,\n    label: undefined,\n    labelSize: () => getDefault(\"field.labelsize\"),\n    labelFor: undefined,\n    labelId: () => useId(),\n    message: undefined,\n    messageTag: () => getDefault(\"field.messageTag\", \"p\"),\n    messageId: () => useId(),\n    grouped: false,\n    addons: false,\n    multiline: false,\n    horizontal: false,\n    mobileBreakpoint: () => getDefault(\"field.mobileBreakpoint\"),\n});\n\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\n\n/** the unique id for the input to associate the label with */\nconst inputId = ref(props.labelFor);\nwatch(\n    () => props.labelFor,\n    (v) => (inputId.value = v),\n);\n\n/** set internal variant when prop change */\nconst fieldVariant = ref(props.variant);\nwatch(\n    () => props.variant,\n    (v) => (fieldVariant.value = v),\n);\n\n/** set internal message when prop change */\nconst fieldMessage = ref(props.message);\nwatch(\n    () => props.message,\n    (v) => (fieldMessage.value = v),\n);\n\n/** set parent message if we use Field in Field */\nwatch(fieldMessage, (value) => {\n    if (parentField.value && parentField.value.hasInnerField) {\n        if (!parentField.value.variant)\n            parentField.value.setVariant(fieldVariant.value);\n        if (!parentField.value.message) parentField.value.setMessage(value);\n    }\n});\n\n/** this can be set from inputs to update the focus state */\nconst isFocused = ref(false);\n/** this can be set from inputs to update the filled state */\nconst isFilled = ref(false);\n/** this can be set from sub fields to update the has inner field state */\nconst hasInnerField = ref(false);\n\n// inject parent field component if used inside one\nconst { parentField } = injectField();\n// tell parent field it has an inner field\nif (parentField.value) parentField.value.addInnerField();\n\nconst slots = useSlots();\n\nconst hasLabel = computed(() => props.label || !!slots.label);\n\nconst hasMessage = computed(() => !!fieldMessage.value || !!slots.message);\n\nconst hasBody = computed(\n    () =>\n        props.grouped ||\n        props.multiline ||\n        hasInnerField.value ||\n        hasAddons.value,\n);\n\nconst hasAddons = computed(\n    () => props.addons && !props.horizontal && !!slots.default,\n);\n\nfunction getInnerContent(vnode): VNodeArrayChildren {\n    const slot = vnode();\n    return slot.length === 1 && Array.isArray(slot[0].children)\n        ? slot[0].children\n        : slot;\n}\n\n// --- Field Dependency Injection Feature ---\n\nconst rootRef = useTemplateRef(\"rootElement\");\n\nfunction addInnerField(): void {\n    hasInnerField.value = true;\n}\nfunction setFocus(value: boolean): void {\n    isFocused.value = value;\n}\nfunction setFilled(value: boolean): void {\n    isFilled.value = value;\n}\nfunction setVariant(value?: string): void {\n    fieldVariant.value = value;\n}\nfunction setMessage(value?: string): void {\n    fieldMessage.value = value;\n}\nfunction setInputId(value: string): void {\n    inputId.value = value;\n}\n\nconst inputAttrs = computed(() => ({\n    \"aria-labelledby\": props.labelId,\n    ...(fieldVariant.value === \"error\"\n        ? { \"aria-errormessage\": props.messageId }\n        : { \"aria-describedby\": props.messageId }),\n}));\n\n// Provided data is a computed ref to ensure reactivity.\nconst provideData = computed<FieldData>(() => ({\n    $el: rootRef.value,\n    props,\n    hasInnerField: hasInnerField.value,\n    variant: fieldVariant.value,\n    message: fieldMessage.value,\n    labelId: props.labelId,\n    inputAttrs: inputAttrs.value,\n    addInnerField,\n    setInputId,\n    setFocus,\n    setFilled,\n    setVariant,\n    setMessage,\n}));\n\n// Provide field component data via dependency injection.\nprovideField(provideData);\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-field\"],\n    [\n        \"horizontalClass\",\n        \"o-field--horizontal\",\n        null,\n        computed(() => !!props.horizontal),\n    ],\n    [\"mobileClass\", \"o-field--mobile\", null, isMobile],\n    [\"focusedClass\", \"o-field--focused\", null, isFocused],\n    [\"filledClass\", \"o-field--filled\", null, isFilled],\n);\n\nconst labelClasses = defineClasses(\n    [\"labelClass\", \"o-field__label\"],\n    [\n        \"labelSizeClass\",\n        \"o-field__label-\",\n        computed(() => props.labelSize),\n        computed(() => !!props.labelSize),\n    ],\n    [\n        \"labelVariantClass\",\n        \"o-field__label-\",\n        fieldVariant,\n        computed(() => !!fieldVariant.value),\n    ],\n);\n\nconst horizontalLabelClasses = defineClasses([\n    \"horizontalLabelClass\",\n    \"o-field__horizontal-label\",\n]);\n\nconst horizontalBodyClasses = defineClasses([\n    \"horizontalBodyClass\",\n    \"o-field__horizontal-body\",\n]);\n\nconst bodyClasses = defineClasses([\"bodyClass\", \"o-field__body\"]);\n\nconst innerBodyClasses = defineClasses(\n    [\"rootClass\", \"o-field\"],\n    [\"groupedClass\", \"o-field--grouped\", null, computed(() => props.grouped)],\n    [\n        \"addonsClass\",\n        \"o-field--addons\",\n        null,\n        computed(() => !props.grouped && hasAddons.value),\n    ],\n    [\n        \"multilineClass\",\n        \"o-field--multiline\",\n        null,\n        computed(() => props.multiline),\n    ],\n);\n\nconst messageClasses = defineClasses(\n    [\"messageClass\", \"o-field__message\"],\n    [\n        \"messageVariantClass\",\n        \"o-field__message-\",\n        fieldVariant,\n        computed(() => !!fieldVariant.value),\n    ],\n);\n</script>\n\n<template>\n    <div ref=\"rootElement\" data-oruga=\"field\" :class=\"rootClasses\">\n        <div v-if=\"horizontal\" :class=\"horizontalLabelClasses\">\n            <label\n                v-if=\"hasLabel\"\n                :id=\"labelId\"\n                :for=\"inputId\"\n                :class=\"labelClasses\">\n                <!--\n                    @slot Override the label\n                    @binding {string} label - label property \n                -->\n                <slot name=\"label\" :label=\"label\">{{ label }}</slot>\n            </label>\n        </div>\n\n        <template v-else>\n            <label\n                v-if=\"hasLabel\"\n                :id=\"labelId\"\n                :for=\"inputId\"\n                :class=\"labelClasses\">\n                <!--\n                    @slot Override the label\n                    @binding {string} label - label property \n                -->\n                <slot name=\"label\" :label=\"label\">{{ label }}</slot>\n            </label>\n        </template>\n\n        <div v-if=\"horizontal\" :class=\"horizontalBodyClasses\">\n            <template\n                v-for=\"(element, index) in getInnerContent($slots.default)\"\n                :key=\"index\">\n                <component :is=\"element\" v-if=\"isVNodeEmpty(element)\" />\n\n                <OField\n                    v-else\n                    :variant=\"fieldVariant\"\n                    :addons=\"false\"\n                    :label-id=\"labelId\"\n                    :message-id=\"messageId\"\n                    :message-tag=\"messageTag\"\n                    :message-class=\"messageClass\">\n                    <!-- render inner default slot element -->\n                    <component :is=\"element\" />\n                    <!-- show field message here -->\n                    <template v-if=\"index === 0\" #message>\n                        <slot name=\"message\" :message=\"fieldMessage\">\n                            {{ fieldMessage }}\n                        </slot>\n                    </template>\n                </OField>\n            </template>\n        </div>\n\n        <div v-else-if=\"hasBody\" :class=\"bodyClasses\">\n            <div :class=\"innerBodyClasses\">\n                <!--\n                   @slot Default content\n                -->\n                <slot />\n            </div>\n        </div>\n\n        <template v-else>\n            <!--\n                @slot Default content\n            -->\n            <slot />\n        </template>\n\n        <component\n            :is=\"messageTag\"\n            v-if=\"hasMessage && !horizontal\"\n            :id=\"messageId\"\n            :class=\"messageClasses\">\n            <!--\n                @slot Override the message\n                @binding {string} message - field message \n            -->\n            <slot name=\"message\" :message=\"fieldMessage\">\n                {{ fieldMessage }}\n            </slot>\n        </component>\n    </div>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Field from \"./Field.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export field plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Field);\n    },\n} as Plugin;\n\n/** export field components */\nexport { Field as OField };\n","import type { App, Plugin } from \"vue\";\n\nimport Icon from \"./Icon.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export icon plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Icon);\n    },\n} as Plugin;\n\n/** export icon components */\nexport { Icon as OIcon };\n","import type { App, Plugin } from \"vue\";\n\nimport Input from \"./Input.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export input specific types */\n// no types to export here\n\n/** export input plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Input);\n    },\n} as Plugin;\n\n/** export input components */\nexport { Input as OInput };\n","<script setup lang=\"ts\">\nimport { useTemplateRef, watch } from \"vue\";\n\nimport OIcon from \"../icon/Icon.vue\";\n\nimport { getDefault } from \"@/utils/config\";\nimport { isClient } from \"@/utils/ssr\";\nimport {\n    defineClasses,\n    useEventListener,\n    usePreventScrolling,\n} from \"@/composables\";\n\nimport type { LoadingProps } from \"./props\";\n\n/**\n * A simple loading overlay.\n * @displayName Loading\n * @style _loading.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OLoading\",\n    configField: \"loading\",\n    inheritAttrs: false,\n});\n\nconst props = withDefaults(defineProps<LoadingProps>(), {\n    override: undefined,\n    active: false,\n    fullPage: true,\n    label: undefined,\n    animation: () => getDefault(\"loading.animation\", \"fade\"),\n    cancelable: false,\n    icon: () => getDefault(\"loading.icon\", \"loading\"),\n    iconSpin: () => getDefault(\"loading.iconSpin\", true),\n    iconSize: () => getDefault(\"loading.iconSize\", \"medium\"),\n    clipScroll: () => getDefault(\"loading.clipScroll\", false),\n});\n\nconst emits = defineEmits<{\n    /**\n     * active prop two-way binding\n     * @param value {boolean} - updated active prop\n     */\n    \"update:active\": [value: boolean];\n    /**\n     * fullPage prop two-way binding\n     * @param value {boolean} - updated fullPage prop\n     */\n    \"update:fullPage\": [value: boolean];\n    /**\n     * on component close event\n     * @param value {unknown} - close event data\n     */\n    close: [...args: unknown[]];\n}>();\n\nconst rootRef = useTemplateRef(\"rootElement\");\n\nconst isFullPage = defineModel<boolean>(\"fullPage\", { default: true });\n\nconst isActive = defineModel<boolean>(\"active\", { default: false });\n\nconst toggleScroll = usePreventScrolling(props.clipScroll);\n\nwatch(isActive, (value) => {\n    if (isFullPage.value) toggleScroll(value);\n});\n\n// --- Events Feature ---\n\nif (isClient) {\n    // register onKeyPress event when is active\n    useEventListener(rootRef, \"keyup\", onKeyPress, { trigger: isActive });\n}\n\n/** Keypress event that is bound to the document. */\nfunction onKeyPress(event: KeyboardEvent): void {\n    if (!isActive.value) return;\n    if (event.key === \"Escape\" || event.key === \"Esc\") cancel(\"escape\");\n}\n\n/**\n * Check if method is cancelable.\n * Call close() with action `cancel`.\n * @param method Cancel method\n */\nfunction cancel(method: string): void {\n    // check if method is cancelable\n    if (\n        !props.cancelable ||\n        (Array.isArray(props.cancelable) && !props.cancelable.includes(method))\n    )\n        return;\n    close({ action: \"cancel\", method });\n}\n\n/** set active to false and emit close event */\nfunction close(...args: unknown[]): void {\n    isActive.value = false;\n    emits(\"close\", args);\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-loading\"],\n    [\"fullPageClass\", \"o-loading--fullpage\", null, isFullPage],\n);\n\nconst overlayClasses = defineClasses([\"overlayClass\", \"o-loading__overlay\"]);\n\nconst iconClasses = defineClasses([\"iconClass\", \"o-loading__icon\"]);\n\nconst labelClasses = defineClasses([\"labelClass\", \"o-loading__label\"]);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ close });\n</script>\n\n<template>\n    <transition :name=\"animation\">\n        <div\n            v-if=\"isActive\"\n            ref=\"rootElement\"\n            data-oruga=\"loading\"\n            :class=\"rootClasses\"\n            role=\"status\"\n            aria-live=\"polite\">\n            <div\n                :class=\"overlayClasses\"\n                :tabindex=\"-1\"\n                @click=\"cancel('outside')\" />\n            <!-- \n                @slot Override icon and label\n                @binding {close} close - function to close the component\n            -->\n            <slot :close=\"close\">\n                <o-icon\n                    :icon=\"icon\"\n                    :spin=\"iconSpin\"\n                    :size=\"iconSize\"\n                    :class=\"iconClasses\"\n                    both />\n                <span v-if=\"label\" :class=\"labelClasses\">\n                    {{ label }}\n                </span>\n            </slot>\n        </div>\n    </transition>\n</template>\n","import type { ComponentInternalInstance } from \"vue\";\n\nexport default class InstanceRegistry<T = ComponentInternalInstance> {\n    entries: Array<T>;\n\n    constructor() {\n        this.entries = [];\n    }\n\n    /** Returns the number of registered active instances. */\n    count(): number {\n        return this.entries.length;\n    }\n\n    /** Returns the first registered active instance. */\n    fist(): T | undefined {\n        return this.entries.at(0);\n    }\n\n    /** Returns the last registered active instance. */\n    last(): T | undefined {\n        return this.entries.at(-1);\n    }\n\n    /** Adds a new instance to the instance stack. */\n    add(entry: T): void {\n        this.entries.push(entry);\n    }\n\n    /** Removes an instance from the instance stack. */\n    remove(entry: T): void {\n        const index = this.entries.indexOf(entry);\n        this.entries.splice(index, 1);\n    }\n\n    /** Call a function for every registered active instance. */\n    walk(callback: (value: T) => boolean | void): void {\n        // Walk a copy of the array so that the callback is allowed to remove the instance\n        this.entries = [...this.entries].filter((e) => {\n            const ret = callback(e);\n            return !(ret === true);\n        });\n    }\n}\n","import {\n    createVNode,\n    defineComponent,\n    getCurrentInstance,\n    onMounted,\n    onUnmounted,\n    type ComponentInternalInstance,\n    type VNode,\n    type VNodeTypes,\n} from \"vue\";\nimport type { ComponentProps } from \"vue-component-type-helpers\";\nimport type InstanceRegistry from \"@/components/programmatic/InstanceRegistry\";\nimport { isClient } from \"@/utils/ssr\";\n\nexport type ProgrammaticComponentProps<C extends VNodeTypes> = {\n    /**\n     * Component to be injected.\n     * Terminate the component by emitting a 'close' event â€” emits('close')\n     */\n    component: C;\n    /**\n     * Props to be binded to the injected component.\n     * Both attributes and properties can be used in props.\n     * Vue automatically picks the right way to assign it.\n     * `class` and `style` have the same object / array value support like in templates.\n     * Event listeners should be passed as onXxx.\n     * @see https://vuejs.org/api/render-function.html#h\n     */\n    props?: ComponentProps<C> | { container?: HTMLElement };\n    /** Programmatic component registry instance */\n    registry?: InstanceRegistry<ComponentInternalInstance>;\n};\n\nexport type ProgrammaticComponentEmits = {\n    /**\n     * On component close event.\n     * This get called when the component emits `close` or the exposed `close` function get called.\n     */\n    close?: (...args: unknown[]) => void;\n    /** On component destroy event which get called when the component should be destroyed. */\n    destroy?: () => void;\n};\n\n// there is a bug with functional defineComponent and extracting the exposed type\n// export type ProgrammaticComponentExpose = ComponentExposed<\n//     typeof ProgrammaticComponent\n// >;\n\nexport type ProgrammaticComponentExpose = {\n    /** Call the close event of the component. */\n    close: (...args: unknown[]) => void;\n    /** Promise which get resolved on the close event. */\n    promise: Promise<unknown>;\n};\n\nexport const ProgrammaticComponent = defineComponent<\n    ProgrammaticComponentProps<any>,\n    ProgrammaticComponentEmits\n>(\n    <C extends VNodeTypes>(\n        props: ProgrammaticComponentProps<C>,\n        { expose, emit, slots },\n    ) => {\n        // getting a hold of the internal instance in setup()\n        const vm = getCurrentInstance();\n        if (!vm)\n            throw new Error(\"ProgrammaticComponent initialisation failed.\");\n\n        // create response promise\n        let resolve: (value?: unknown) => void;\n        const promise = new Promise<unknown>((p1) => (resolve = p1));\n\n        // add component instance to instance register\n        onMounted(() => props.registry?.add(vm));\n\n        // remove component instance from instance register\n        onUnmounted(() => props.registry?.remove(vm));\n\n        function close(...args: unknown[]): void {\n            // emit `onClose` event\n            emit(\"close\", ...args);\n\n            // call promise resolve\n            resolve(...args);\n\n            // emit `destory` event after animation is finished\n            setTimeout(() => {\n                if (isClient)\n                    window.requestAnimationFrame(() => emit(\"destroy\"));\n                else emit(\"destroy\");\n            });\n        }\n\n        /** expose public functionalities for programmatic usage */\n        expose({ close, promise } satisfies ProgrammaticComponentExpose);\n\n        // return render function which renders given component\n        return (): VNode =>\n            createVNode(\n                props.component,\n                { ...props.props, onClose: close },\n                slots[\"default\"],\n            );\n    },\n    {\n        name: \"ProgrammaticApp\",\n        // manual runtime props declaration is currently still needed.\n        props: [\"component\", \"props\", \"registry\"],\n        // manual runtime emits declaration\n        emits: [\"close\", \"destroy\"],\n        // manual runtime slot declaration\n        slots: [\"default\"],\n    },\n);\n","import {\n    createApp,\n    toValue,\n    type App,\n    type ComponentInternalInstance,\n    type EmitsToProps,\n    type MaybeRefOrGetter,\n    type VNodeTypes,\n} from \"vue\";\n\nimport InstanceRegistry from \"@/components/programmatic/InstanceRegistry\";\nimport { VueInstance } from \"@/utils/plugins\";\nimport { useTeleportDefault, resolveElement } from \"@/composables\";\n\nimport {\n    ProgrammaticComponent,\n    type ProgrammaticComponentProps,\n    type ProgrammaticComponentEmits,\n    type ProgrammaticComponentExpose,\n} from \"./ProgrammaticComponent\";\n\ndeclare module \"../../index\" {\n    interface OrugaProgrammatic {\n        programmatic: typeof ComponentProgrammatic;\n    }\n}\n\n/** programmatic global instance registry if no custom is defined */\nconst registry = new InstanceRegistry<ComponentInternalInstance>();\n\n/** useProgrammatic composable `open` function options */\nexport type ProgrammaticOptions<C extends VNodeTypes> = {\n    /**\n     * Specify a target the component get rendered into.\n     * @default `document.body`\n     */\n    target?: MaybeRefOrGetter<string | HTMLElement | null>;\n    /**\n     * Specify the template `id` for the programmatic container element.\n     * @default `programmatic-app`\n     */\n    appId?: string;\n} & Omit<ProgrammaticComponentProps<C>, \"component\"> & // component props\n    EmitsToProps<Omit<ProgrammaticComponentEmits, \"destroy\">>; // component emit props\n\n/** public options interface for programmatically called components */\nexport type ProgrammaticComponentOptions = EmitsToProps<\n    Pick<ProgrammaticComponentEmits, \"close\">\n> &\n    // make the type extendable\n    Record<string, any>;\n\n/** useProgrammatic composable `open` function return value */\nexport type ProgrammaticExpose = ProgrammaticComponentExpose;\n\nexport const ComponentProgrammatic = {\n    /** Returns the number of registered active instances. */\n    count: registry.count,\n    /**\n     * Create a new programmatic component instance.\n     * @param component component to render\n     * @param options render options\n     */\n    open<C extends VNodeTypes>(\n        component: C,\n        options?: ProgrammaticOptions<C>,\n    ): ProgrammaticExpose {\n        options = { registry, ...options };\n\n        const targetQuery = toValue(options.target);\n        // define the target container\n        const target: HTMLElement | null =\n            // either by a given query selector / element\n            (targetQuery && resolveElement(targetQuery)) ||\n            // or by the default teleport target config\n            resolveElement(useTeleportDefault());\n        if (!target)\n            throw new Error(\"ComponentProgrammatic - no target is defined.\");\n\n        // create app container\n        let container: HTMLDivElement | undefined =\n            document.createElement(\"div\");\n        container.id = options.appId || \"programmatic-app\";\n\n        // place the app container into the target element\n        target.appendChild(container);\n\n        // clear instance handler\n        function onDestroy(): void {\n            // destroy app/component\n            if (app) {\n                app.unmount();\n                app = undefined;\n            }\n            // clear container\n            if (container && target) {\n                target.removeChild(container);\n                container = undefined;\n            }\n        }\n\n        // create a new vue app instance with the ProgrammaticComponent as root\n        let app: App | undefined = createApp(ProgrammaticComponent, {\n            registry: options.registry, // programmatic registry instance - can be overriden by given in options\n            component, // the component which should be rendered\n            props: { ...options.props, container: target }, // component props including the target as `container`\n            onClose: options.onClose, // custom onClose handler\n            onDestroy, // node destory cleanup handler\n        });\n\n        // share the current context to the new app instance if running inside a nother app\n        if (VueInstance)\n            app._context = Object.assign(app._context, VueInstance._context);\n\n        // render the new vue instance into the container\n        const instance = app.mount(container);\n\n        // return exposed programmatic functionalities from the mounted component instance\n        return instance as unknown as ProgrammaticExpose;\n    },\n    /** close the last registred instance in the global programmatic instance registry */\n    close(...args: unknown[]): void {\n        registry.last()?.exposed?.close(...args);\n    },\n    /** close all instances in the global programmatic instance registry */\n    closeAll(...args: unknown[]): void {\n        registry.walk((entry) => entry.exposed?.close(...args));\n    },\n};\n\nexport default ComponentProgrammatic;\n","import type { App, Plugin } from \"vue\";\n\nimport ComponentProgrammatic from \"./useProgrammatic\";\n\nimport { registerComponentProgrammatic } from \"@/utils/plugins\";\nimport InstanceRegistry from \"./InstanceRegistry\";\n\n/** export programmatic specific types */\nexport type {\n    ProgrammaticOptions,\n    ProgrammaticExpose,\n    ProgrammaticComponentOptions,\n} from \"./useProgrammatic\";\nexport { InstanceRegistry };\n\n/** export programmatic plugin */\nexport default {\n    install(app: App) {\n        registerComponentProgrammatic(\n            app,\n            \"programmatic\",\n            ComponentProgrammatic,\n        );\n    },\n} as Plugin;\n\n/** export composables here */\nexport { ComponentProgrammatic } from \"./useProgrammatic\";\n","import { type ComponentInternalInstance, type MaybeRefOrGetter } from \"vue\";\nimport {\n    InstanceRegistry,\n    ComponentProgrammatic,\n    type ProgrammaticComponentOptions,\n    type ProgrammaticExpose,\n} from \"../programmatic\";\n\nimport Loading from \"./Loading.vue\";\n\nimport type { LoadingProps } from \"./props\";\n\ndeclare module \"../../index\" {\n    interface OrugaProgrammatic {\n        loading: typeof LoadingProgrammatic;\n    }\n}\n\n/** loading component programmatic instance registry **/\nconst registry = new InstanceRegistry<ComponentInternalInstance>();\n\n/** useLoadingProgrammatic composable options */\nexport type LoadingProgrammaticOptions = Readonly<LoadingProps> &\n    ProgrammaticComponentOptions;\n\nconst LoadingProgrammatic = {\n    /** Returns the number of registered active instances. */\n    count: registry.count,\n    /**\n     * Create a new programmatic loading component instance.\n     * @param options loading label string or loading component props object\n     * @param target specify a target the component get rendered into\n     * @returns ProgrammaticExpose\n     */\n    open(\n        options: string | LoadingProgrammaticOptions,\n        target?: MaybeRefOrGetter<string | HTMLElement | null>,\n    ): ProgrammaticExpose {\n        const _options: LoadingProgrammaticOptions =\n            typeof options === \"string\" ? { label: options } : options;\n\n        const componentProps: LoadingProps = {\n            active: true, // set the active default state to true\n            fullPage: false, // set the full page default state to false\n            ...(_options as LoadingProps),\n        };\n\n        // create programmatic component\n        return ComponentProgrammatic.open(Loading, {\n            registry, // custom programmatic instance registry\n            target, // target the component get rendered into\n            props: componentProps, // component specific props\n            onClose: _options.onClose, // on close event handler\n        });\n    },\n    /** Close the last registred instance in the loading programmatic instance registry. */\n    close(...args: unknown[]): void {\n        registry.last()?.exposed?.close(...args);\n    },\n    /** Close all instances in the programmatic loading instance registry. */\n    closeAll(...args: unknown[]): void {\n        registry.walk((entry) => entry.exposed?.close(...args));\n    },\n};\n\nexport default LoadingProgrammatic;\n","import type { App, Plugin } from \"vue\";\n\nimport Loading from \"./Loading.vue\";\nimport LoadingProgrammatic from \"./useLoadingProgrammatic\";\n\nimport {\n    registerComponent,\n    registerComponentProgrammatic,\n} from \"@/utils/plugins\";\n\n/** export loading specific types */\nexport type { LoadingProgrammaticOptions } from \"./useLoadingProgrammatic\";\n\n/** export loading plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Loading);\n        registerComponentProgrammatic(app, \"loading\", LoadingProgrammatic);\n    },\n} as Plugin;\n\n/** export loading components & composables */\nexport { Loading as OLoading, LoadingProgrammatic };\n","<script setup lang=\"ts\" generic=\"T\">\nimport { computed, ref, useId } from \"vue\";\n\nimport OIcon from \"../icon/Icon.vue\";\n\nimport { getDefault } from \"@/utils/config\";\nimport {\n    defineClasses,\n    normalizeOptions,\n    useProviderChild,\n    useProviderParent,\n    type ProviderItem,\n} from \"@/composables\";\n\nimport type {\n    MenuComponent,\n    MenuItemComponent,\n    MenuItemProvider,\n} from \"./types\";\nimport type { MenuItemProps } from \"./props\";\n\n/**\n * A menu list item.\n * @displayName Menu Item\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OMenuItem\",\n    configField: \"menu\",\n    inheritAttrs: false,\n});\n\nconst props = withDefaults(defineProps<MenuItemProps<T>>(), {\n    override: undefined,\n    active: false,\n    options: undefined,\n    label: undefined,\n    expanded: false,\n    disabled: false,\n    hidden: false,\n    submenuId: () => useId(),\n    icon: undefined,\n    iconPack: () => getDefault(\"menu.iconPack\"),\n    iconSize: () => getDefault(\"menu.iconSize\"),\n    animation: () => getDefault(\"menu.animation\", \"slide\"),\n    tag: () => getDefault(\"menu.itemTag\", \"button\"),\n});\n\nconst emits = defineEmits<{\n    /**\n     * active prop two-way binding\n     * @param value {boolean} updated active prop\n     */\n    \"update:active\": [value: boolean];\n    /**\n     * onclick event\n     * @param value {string | number | object} value prop data\n     * @param event {event} Native Event\n     */\n    click: [value: T, event: Event];\n}>();\n\nconst itemValue = props.value ?? useId();\n\n// provided data is a computed ref to ensure reactivity\nconst provideData = computed<MenuItemProvider<T>>(() => ({\n    expanded: isExpanded.value,\n    setExpand,\n    triggerReset,\n}));\n\n/** provide functionalities and data to child item components */\nconst { childItems } = useProviderParent({\n    key: \"menu-item\",\n    data: provideData,\n});\n\n/** inject functionalities and data from the parent menu-item component */\nconst menuItem = useProviderChild<MenuItemProvider<T>>({\n    key: \"menu-item\",\n    needParent: false,\n});\n\n// provided data is a computed ref to ensure reactivity\nconst providedData = computed<MenuItemComponent<T>>(() => ({\n    ...props,\n    value: itemValue,\n    parent: menuItem.parent.value,\n    hasChildren: hasChildren.value,\n    expanded: isExpanded.value,\n    setExpand,\n    reset,\n    selectItem,\n}));\n\n/** inject functionalities and data from the parent menu component */\nconst { parent, item } = useProviderChild<\n    MenuComponent<T>,\n    MenuItemComponent<T>\n>({ data: providedData });\n\nconst nextSequence = parent.value.nextSequence;\n\n/** normalized programamtic options */\nconst normalizedOptions = computed(() =>\n    normalizeOptions<T>(props.options, nextSequence),\n);\n\nconst isActive = defineModel<boolean>(\"active\", { default: false });\n\nconst hasChildren = computed(() => !!childItems.value.length);\n\nconst isFocused = computed(\n    () => item.value.identifier === parent.value.focsuedIdentifier,\n);\n\nfunction selectItem(event: Event): void {\n    if (props.disabled || parent.value.disabled) return;\n    triggerReset();\n    isActive.value = !isActive.value;\n    if (parent.value.accordion) isExpanded.value = isActive.value;\n    parent.value.selectItem(isActive.value ? item.value : undefined);\n    emits(\"click\", itemValue as T, event);\n}\n\nfunction triggerReset(childs?: ProviderItem<MenuItemComponent<T>>[]): void {\n    // The point of this method is to collect references to the clicked item and any parent,\n    // this way we can skip resetting those elements.\n    if (typeof menuItem.parent.value?.triggerReset === \"function\") {\n        menuItem.parent.value.triggerReset(\n            childs ? [item.value, ...childs] : [item.value],\n        );\n    }\n    // else if not a sub item reset parent menu\n    else if (typeof parent.value.resetMenu === \"function\") {\n        parent.value.resetMenu(childs ? [item.value, ...childs] : [item.value]);\n    }\n}\n\nconst isExpanded = ref(props.expanded);\n// always expand if not accordion feature\nif (!parent.value.accordion) isExpanded.value = true;\n\nfunction setExpand(state: boolean): void {\n    if (!parent.value.accordion) return;\n    isExpanded.value = state;\n\n    if (typeof menuItem.parent.value?.setExpand === \"function\")\n        menuItem.parent.value.setExpand(state);\n}\n\nfunction reset(): void {\n    if (parent.value.accordion) isExpanded.value = false;\n    isActive.value = false;\n}\n\n// #region --- Computed Component Classes ---\n\nconst itemClasses = defineClasses(\n    [\"itemClass\", \"o-menu__item\"],\n    [\"itemActiveClass\", \"o-menu__item--active\", null, isActive],\n    [\"itemFocusedClass\", \"o-menu__item--focused\", null, isFocused],\n    [\n        \"itemDisabledClass\",\n        \"o-menu__item--disabled\",\n        null,\n        computed(() => props.disabled || parent.value.disabled),\n    ],\n);\n\nconst buttonClasses = defineClasses(\n    [\"itemButtonClass\", \"o-menu__item__button\"],\n    [\"itemButtonActiveClass\", \"o-menu__item__button--active\", null, isActive],\n    [\n        \"itemButtonFocusedClass\",\n        \"o-menu__item__button--focused\",\n        null,\n        isFocused,\n    ],\n    [\n        \"itemButtonDisabledClass\",\n        \"o-menu__item__button--disabled\",\n        null,\n        computed(() => props.disabled || parent.value.disabled),\n    ],\n    [\n        \"itemButtonIconClass\",\n        \"o-menu__item__button--icon\",\n        null,\n        computed(() => !!props.icon),\n    ],\n);\n\nconst submenuClasses = defineClasses([\n    \"itemSubmenuClass\",\n    \"o-menu__item__submenu\",\n]);\n\n// #endregion --- Computed Component Classes ---\n</script>\n\n<template>\n    <li\n        v-show=\"!hidden\"\n        :id=\"`${parent.menuId}-${item.identifier}`\"\n        data-oruga=\"menu-item\"\n        :data-id=\"`menu-${item.identifier}`\"\n        :class=\"itemClasses\"\n        role=\"none\">\n        <component\n            :is=\"tag\"\n            v-bind=\"$attrs\"\n            :class=\"buttonClasses\"\n            :role=\"parent.role + 'item'\"\n            :disabled=\"disabled || parent.disabled\"\n            tabindex=\"-1\"\n            :aria-selected=\"parent.role == 'tree' ? isActive : undefined\"\n            :aria-disabled=\"disabled || parent.disabled\"\n            :aria-expanded=\"hasChildren ? isExpanded : undefined\"\n            :aria-owns=\"hasChildren ? submenuId : undefined\"\n            @click=\"selectItem\"\n            @keydown.enter=\"selectItem\"\n            @keydown.space=\"selectItem\">\n            <o-icon\n                v-if=\"icon\"\n                :icon=\"icon\"\n                :pack=\"iconPack\"\n                :size=\"iconSize\" />\n            <!-- \n                @slot Override label\n                @binding {boolean} expanded - item expanded state\n                @binding {boolean} active - item active state\n            -->\n            <slot name=\"label\" :expanded=\"isExpanded\" :active=\"isActive\">\n                <span>{{ label }}</span>\n            </slot>\n        </component>\n\n        <!-- sub menu items -->\n        <transition v-if=\"$slots.default || options\" :name=\"animation\">\n            <ul\n                v-show=\"isExpanded\"\n                :id=\"submenuId\"\n                :class=\"submenuClasses\"\n                tabindex=\"-1\"\n                role=\"group\">\n                <!--\n                        @slot Place menu items here \n                    -->\n                <slot>\n                    <OMenuItem\n                        v-for=\"option in normalizedOptions\"\n                        :key=\"option.key\"\n                        v-bind=\"option.attrs\"\n                        :value=\"option.value\"\n                        :label=\"option.label\"\n                        :hidden=\"option.hidden\" />\n                </slot>\n            </ul>\n        </transition>\n    </li>\n</template>\n","<script setup lang=\"ts\" generic=\"T\">\nimport { computed, ref, useId, useTemplateRef } from \"vue\";\n\nimport OIcon from \"../icon/Icon.vue\";\nimport OMenuItem from \"../menu/MenuItem.vue\";\n\nimport { getDefault } from \"@/utils/config\";\nimport { mod } from \"@/utils/helpers\";\nimport {\n    defineClasses,\n    isGroupOption,\n    normalizeOptions,\n    useProviderParent,\n    useSequentialId,\n    type ProviderItem,\n} from \"@/composables\";\n\nimport type { MenuChildItem, MenuComponent, MenuItemComponent } from \"./types\";\nimport type { MenuProps } from \"./props\";\n\n/**\n * A simple menu, for any type of vertical navigation.\n * @displayName Menu\n * @requires ./MenuItem.vue\n * @style _menu.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OMenu\",\n    configField: \"menu\",\n});\n\ntype ModelValue = MenuProps<T>[\"modelValue\"];\n\nconst props = withDefaults(defineProps<MenuProps<T>>(), {\n    override: undefined,\n    modelValue: undefined,\n    options: undefined,\n    label: undefined,\n    accordion: true,\n    disabled: false,\n    menuId: () => useId(),\n    labelId: () => useId(),\n    role: () => getDefault(\"menu.role\", \"tree\"),\n    icon: undefined,\n    iconPack: () => getDefault(\"menu.iconPack\"),\n    iconSize: () => getDefault(\"menu.iconSize\"),\n});\n\ndefineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {T} updated modelValue prop\n     */\n    \"update:model-value\": [value: ModelValue];\n}>();\n\nconst rootRef = useTemplateRef(\"rootElement\");\n\n// provided data is a computed ref to ensure reactivity\nconst provideData = computed<MenuComponent<T>>(() => ({\n    focsuedIdentifier: focusedItem.value?.identifier,\n    menuId: props.menuId,\n    accordion: props.accordion,\n    disabled: props.disabled,\n    role: props.role,\n    nextSequence,\n    resetMenu,\n    selectItem,\n}));\n\n/** provide functionalities and data to child item components */\nconst { childItems } = useProviderParent<\n    MenuItemComponent<T>,\n    MenuComponent<T>\n>({ rootRef, data: provideData });\n\n// create a unique id sequence\nconst { nextSequence } = useSequentialId();\n\n/** normalized programamtic options */\nconst normalizedOptions = computed(() =>\n    normalizeOptions<T>(props.options, nextSequence),\n);\n\n/** call reset for every menu item excluding the given one */\nfunction resetMenu(\n    excludedItems: ProviderItem<MenuItemComponent<T>>[] = [],\n): void {\n    childItems.value.forEach((item) => {\n        if (!excludedItems.map((i) => i?.identifier).includes(item.identifier))\n            item.data?.reset();\n    });\n}\n\n// #region --- Select Feature ---\n\n/** The selected item value, use v-model to make it two-way binding */\nconst vmodel = defineModel<ModelValue>({ default: undefined });\n\nconst selectedItem = ref<MenuChildItem<T>>();\n\nfunction selectItem(\n    item: ProviderItem<MenuItemComponent<T>> | undefined,\n): void {\n    const value = item?.data?.value;\n    if (vmodel.value == value) return;\n    vmodel.value = value;\n    selectedItem.value = item;\n}\n\n// #endregion --- Select Feature ---\n\n// #region --- Focus Feature ---\n\nconst focusedItem = ref<MenuChildItem<T>>();\n\n/** is any option visible */\nconst isNotEmpty = computed(() => childItems.value.some(isItemViable));\n\nfunction onCollapse(): void {\n    if (!focusedItem.value) return;\n\n    // collapse the item if already expanded\n    if (focusedItem.value.data?.expanded)\n        focusedItem.value.data?.setExpand(false);\n    // else move focus to the previus item\n    else moveFocus(-1);\n}\n\nfunction onExpend(): void {\n    if (!focusedItem.value) return;\n\n    // expand the item if not already expanded\n    if (\n        focusedItem.value.data?.hasChildren &&\n        !focusedItem.value.data?.expanded\n    )\n        focusedItem.value.data?.setExpand(true);\n    // else move focus to the next item\n    else moveFocus(1);\n}\n\n/** Set focus on a dropdown item. */\nfunction setFocus(item: MenuChildItem<T>): void {\n    focusedItem.value = item;\n}\n\n/** Set focus on a tab item. */\nfunction moveFocus(delta: 1 | -1): void {\n    if (!isNotEmpty.value) return;\n    const item = getFirstViableItem(focusedItem.value?.index || 0, delta);\n    setFocus(item);\n}\n\nfunction onUpPressed(): void {\n    moveFocus(-1);\n}\n\nfunction onDownPressed(): void {\n    moveFocus(1);\n}\n\nfunction onEnter(event: Event): void {\n    if (!focusedItem.value) return;\n    setFocus(focusedItem.value);\n    focusedItem.value.data?.selectItem(event);\n}\n\n/** Go to the first viable item */\nfunction onHomePressed(): void {\n    if (!isNotEmpty.value) return;\n    const item = getFirstViableItem(0, 1);\n    setFocus(item);\n}\n\n/** Go to the last viable item */\nfunction onEndPressed(): void {\n    if (!isNotEmpty.value) return;\n    const item = getFirstViableItem(childItems.value.length - 1, -1);\n    setFocus(item);\n}\n\n/**\n * Get the first 'viable' child, starting at startingIndex and in the direction specified\n * by the boolean parameter forward. In other words, first try to select the child at index\n * startingIndex, and if it is not visible or it is disabled, then go to the index in the\n * specified direction until either returning to startIndex or finding a viable child item.\n */\nfunction getFirstViableItem(\n    startingIndex: number,\n    delta: 1 | -1,\n): MenuChildItem<T> {\n    let newIndex = mod(\n        focusedItem.value?.index == startingIndex\n            ? startingIndex + delta\n            : startingIndex,\n        childItems.value.length,\n    );\n    for (\n        ;\n        newIndex !== focusedItem.value?.index;\n        newIndex = mod(newIndex + delta, childItems.value.length)\n    ) {\n        // Break if the item at this index is viable (not disabled)\n        if (isItemViable(childItems.value[newIndex])) break;\n    }\n\n    return childItems.value[newIndex];\n}\n\nfunction isItemViable(item: MenuChildItem<T>): boolean {\n    return (\n        !item.data?.disabled &&\n        !item.data?.hidden &&\n        (item.data?.parent?.expanded ?? true)\n    );\n}\n\nfunction onFocusLeave(): void {\n    focusedItem.value = undefined;\n}\n\n// #endregion --- Focus Feature ---\n\n// #region --- Computed Component Classes ---\n\nconst rootClasses = defineClasses([\"rootClass\", \"o-menu\"]);\n\nconst listClasses = defineClasses([\"listClass\", \"o-menu__list\"]);\n\nconst labelClasses = defineClasses([\"labelClass\", \"o-menu__label\"]);\n\n// #endregion --- Computed Component Classes ---\n</script>\n\n<template>\n    <nav\n        ref=\"rootElement\"\n        data-oruga=\"menu\"\n        :class=\"rootClasses\"\n        @focusout=\"onFocusLeave\">\n        <div v-if=\"label || $slots.label\" :id=\"labelId\" :class=\"labelClasses\">\n            <!-- \n                @slot Override icon and label\n                @binding {T} focused - the focused item value\n                @binding {number} focusedIndex - index of the focused item\n                @binding {T} selected - the selected item value\n                @binding {number} selectedIndex - index of the selected item\n            -->\n            <slot\n                name=\"label\"\n                :focused=\"focusedItem?.data\"\n                :focused-index=\"focusedItem?.index\"\n                :selected=\"selectedItem?.data\"\n                :selected-index=\"selectedItem?.index\">\n                <o-icon\n                    v-if=\"icon\"\n                    :icon=\"icon\"\n                    :pack=\"iconPack\"\n                    :size=\"iconSize\" />\n                <span>{{ label }}</span>\n            </slot>\n        </div>\n\n        <ul\n            :id=\"menuId\"\n            :class=\"listClasses\"\n            :role=\"role\"\n            :tabindex=\"0\"\n            :aria-labelledby=\"labelId\"\n            @keydown.left=\"onCollapse\"\n            @keydown.right=\"onExpend\"\n            @keydown.enter.prevent=\"onEnter\"\n            @keydown.space.prevent=\"onEnter\"\n            @keydown.up.prevent=\"onUpPressed\"\n            @keydown.down.prevent=\"onDownPressed\"\n            @keydown.home.prevent=\"onHomePressed\"\n            @keydown.end.prevent=\"onEndPressed\">\n            <!--\n                @slot Place menu items here \n                @binding {T} focused - the focused item value\n                @binding {number} focusedIndex - index of the focused item\n                @binding {T} selected - the selected item value\n                @binding {number} selectedIndex - index of the selected item\n            -->\n            <slot\n                :focused=\"focusedItem?.data\"\n                :focused-index=\"focusedItem?.index\"\n                :selected=\"selectedItem?.data\"\n                :selected-index=\"selectedItem?.index\">\n                <template v-for=\"option in normalizedOptions\" :key=\"option.key\">\n                    <OMenuItem\n                        v-if=\"isGroupOption(option)\"\n                        v-bind=\"option.attrs\"\n                        :label=\"option.label\"\n                        :hidden=\"option.hidden\">\n                        <OMenuItem\n                            v-for=\"_option in option.options\"\n                            v-bind=\"_option.attrs\"\n                            :key=\"_option.key\"\n                            :value=\"_option.value\"\n                            :label=\"_option.label\"\n                            :hidden=\"_option.hidden\" />\n                    </OMenuItem>\n\n                    <OMenuItem\n                        v-else\n                        v-bind=\"option.attrs\"\n                        :value=\"option.value\"\n                        :label=\"option.label\"\n                        :hidden=\"option.hidden\" />\n                </template>\n            </slot>\n        </ul>\n    </nav>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Menu from \"./Menu.vue\";\nimport MenuItem from \"./MenuItem.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export menu plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Menu);\n        registerComponent(app, MenuItem);\n    },\n} as Plugin;\n\n/** export menu components */\nexport { Menu as OMenu, MenuItem as OMenuItem };\n","<script setup lang=\"ts\" generic=\"C extends Component\">\nimport {\n    ref,\n    computed,\n    watch,\n    nextTick,\n    onMounted,\n    useTemplateRef,\n    type Component,\n} from \"vue\";\n\nimport OIcon from \"../icon/Icon.vue\";\n\nimport { getDefault } from \"@/utils/config\";\nimport { toCssDimension } from \"@/utils/helpers\";\nimport { isClient } from \"@/utils/ssr\";\nimport {\n    defineClasses,\n    useClickOutside,\n    useEventListener,\n    useMatchMedia,\n    usePreventScrolling,\n    useTeleportDefault,\n    useTrapFocus,\n} from \"@/composables\";\n\nimport type { ModalProps } from \"./props\";\n\n/**\n * Classic modal overlay to include any content you may need.\n * @displayName Modal\n * @style _modal.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OModal\",\n    configField: \"modal\",\n    inheritAttrs: false,\n});\n\nconst props = withDefaults(defineProps<ModalProps<C>>(), {\n    override: undefined,\n    active: false,\n    fullScreen: false,\n    content: undefined,\n    width: () => getDefault(\"modal.width\", 960),\n    animation: () => getDefault(\"modal.animation\", \"zoom-out\"),\n    overlay: () => getDefault(\"modal.overlay\", true),\n    cancelable: () =>\n        getDefault(\"modal.cancelable\", [\"escape\", \"x\", \"outside\"]),\n    trapFocus: () => getDefault(\"modal.trapFocus\", true),\n    role: () => getDefault(\"modal.role\", \"dialog\"),\n    ariaLabel: () => getDefault(\"modal.ariaLabel\"),\n    autoFocus: () => getDefault(\"modal.autoFocus\", true),\n    closeIcon: () => getDefault(\"modal.closeIcon\", \"close\"),\n    closeIconSize: () => getDefault(\"modal.closeIconSize\", \"medium\"),\n    mobileBreakpoint: () => getDefault(\"modal.mobileBreakpoint\"),\n    teleport: () => getDefault(\"modal.teleport\", false),\n    clipScroll: () => getDefault(\"modal.clipScroll\", false),\n    component: undefined,\n    props: undefined,\n    events: undefined,\n});\n\nconst emits = defineEmits<{\n    /**\n     * active prop two-way binding\n     * @param value {boolean} - updated active prop\n     */\n    \"update:active\": [value: boolean];\n    /**\n     * on component close event\n     * @param value {unknown} - close event data\n     */\n    close: [...args: unknown[]];\n}>();\n\nconst { vTrapFocus } = useTrapFocus();\n\nconst rootRef = useTemplateRef(\"rootElement\");\nconst contentRef = useTemplateRef(\"contentElement\");\n\nconst isActive = defineModel<boolean>(\"active\", { default: false });\n\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\n\nconst _teleport = computed(() =>\n    typeof props.teleport === \"boolean\"\n        ? { to: useTeleportDefault(), disabled: !props.teleport }\n        : { to: props.teleport, disabled: false },\n);\n\nconst showX = computed(() =>\n    Array.isArray(props.cancelable)\n        ? props.cancelable.indexOf(\"x\") >= 0\n        : props.cancelable,\n);\n\nconst customStyle = computed(() =>\n    !props.fullScreen ? { maxWidth: toCssDimension(props.width) } : null,\n);\n\nconst toggleScroll = usePreventScrolling(props.clipScroll);\n\nwatch(isActive, (value) => {\n    if (props.overlay) toggleScroll(value);\n    // if autoFocus focus the element\n    if (value && props.autoFocus)\n        nextTick(() => {\n            if (rootRef.value) rootRef.value.focus();\n        });\n});\n\nonMounted(() => {\n    if (isActive.value && props.overlay) toggleScroll(isActive.value);\n});\n\n// --- Events Feature ---\n\nif (isClient) {\n    // register onKeyPress event listener when is active\n    useEventListener(rootRef, \"keyup\", onKeyPress, { trigger: isActive });\n\n    if (!props.overlay)\n        // register outside click event listener when is active\n        useClickOutside(contentRef, onClickedOutside, {\n            trigger: isActive,\n        });\n}\n\n/** Keypress event that is bound to the document. */\nfunction onKeyPress(event: KeyboardEvent): void {\n    if (!isActive.value) return;\n    if (event.key === \"Escape\" || event.key === \"Esc\") cancel(\"escape\");\n}\n\n/** Close fixed sidebar if clicked outside. */\nfunction onClickedOutside(event: Event): void {\n    if (!isActive.value || isAnimating.value) return;\n    if (\n        props.overlay ||\n        (contentRef.value && !event.composedPath().includes(contentRef.value))\n    )\n        event.preventDefault();\n    cancel(\"outside\");\n}\n\n/**\n * Check if method is cancelable.\n * Call close() with action `cancel`.\n * @param method Cancel method\n */\nfunction cancel(method: string): void {\n    // check if method is cancelable\n    if (\n        (typeof props.cancelable === \"boolean\" && !props.cancelable) ||\n        !props.cancelable ||\n        (Array.isArray(props.cancelable) && !props.cancelable.includes(method))\n    )\n        return;\n    close({ action: \"cancel\", method });\n}\n\n/** set active to false and emit close event */\nfunction close(...args: unknown[]): void {\n    isActive.value = false;\n    emits(\"close\", args);\n}\n\n// --- Animation Feature ---\n\nconst isAnimating = ref(!props.active);\n\n/** Transition after-enter hook */\nfunction afterEnter(): void {\n    isAnimating.value = false;\n}\n\n/** Transition before-leave hook */\nfunction beforeLeave(): void {\n    isAnimating.value = true;\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-modal\"],\n    [\"mobileClass\", \"o-modal--mobile\", null, isMobile],\n    [\"activeClass\", \"o-modal--active\", null, isActive],\n);\n\nconst overlayClasses = defineClasses([\"overlayClass\", \"o-modal__overlay\"]);\n\nconst contentClasses = defineClasses(\n    [\"contentClass\", \"o-modal__content\"],\n    [\n        \"fullScreenClass\",\n        \"o-modal__content--full-screen\",\n        null,\n        computed(() => props.fullScreen),\n    ],\n);\n\nconst closeClasses = defineClasses([\"closeClass\", \"o-modal__close\"]);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ close });\n</script>\n\n<template>\n    <Teleport :to=\"_teleport.to\" :disabled=\"_teleport.disabled\">\n        <transition\n            :name=\"animation\"\n            @after-enter=\"afterEnter\"\n            @before-leave=\"beforeLeave\">\n            <div\n                v-show=\"isActive\"\n                ref=\"rootElement\"\n                v-bind=\"$attrs\"\n                v-trap-focus=\"isActive && trapFocus\"\n                data-oruga=\"modal\"\n                :class=\"rootClasses\"\n                :tabindex=\"-1\"\n                :role=\"role\"\n                :aria-label=\"ariaLabel\"\n                :aria-modal=\"isActive\">\n                <div\n                    v-if=\"overlay\"\n                    :class=\"overlayClasses\"\n                    tabindex=\"-1\"\n                    @click=\"onClickedOutside\" />\n\n                <div\n                    ref=\"contentElement\"\n                    :class=\"contentClasses\"\n                    :style=\"customStyle\">\n                    <!-- injected component for programmatic usage -->\n                    <component\n                        :is=\"component\"\n                        v-if=\"component\"\n                        v-bind=\"$props.props\"\n                        v-on=\"$props.events || {}\"\n                        @close=\"close\" />\n                    <!--\n                        @slot Modal default content, default is content prop\n                        @binding {(...args): void} close - function to close the component\n                    -->\n                    <slot v-else :close=\"close\">\n                        <div v-if=\"content\">{{ content }}</div>\n                    </slot>\n\n                    <o-icon\n                        v-if=\"showX\"\n                        v-show=\"!isAnimating\"\n                        clickable\n                        both\n                        :class=\"closeClasses\"\n                        :icon=\"closeIcon\"\n                        :size=\"closeIconSize\"\n                        @click=\"cancel('x')\" />\n                </div>\n            </div>\n        </transition>\n    </Teleport>\n</template>\n","import {\n    type Component,\n    type ComponentInternalInstance,\n    type MaybeRefOrGetter,\n} from \"vue\";\nimport {\n    InstanceRegistry,\n    ComponentProgrammatic,\n    type ProgrammaticComponentOptions,\n    type ProgrammaticExpose,\n} from \"../programmatic\";\n\nimport Modal from \"./Modal.vue\";\n\nimport type { ModalProps } from \"./props\";\n\ndeclare module \"../../index\" {\n    interface OrugaProgrammatic {\n        modal: typeof ModalProgrammatic;\n    }\n}\n\n/** modal component programmatic instance registry **/\nconst registry = new InstanceRegistry<ComponentInternalInstance>();\n\n/** useModalProgrammatic composable options */\nexport type ModalProgrammaticOptions<C extends Component> = Readonly<\n    ModalProps<C>\n> &\n    ProgrammaticComponentOptions;\n\nconst ModalProgrammatic = {\n    /** Returns the number of registered active instances. */\n    count: registry.count,\n    /**\n     * Create a new programmatic modal component instance.\n     * @param options modal content string or modal component props object\n     * @param target specify a target the component get rendered into - default is `document.body`\n     * @returns ProgrammaticExpose\n     */\n    open<C extends Component>(\n        options: string | ModalProgrammaticOptions<C>,\n        target?: MaybeRefOrGetter<string | HTMLElement | null>,\n    ): ProgrammaticExpose {\n        const _options: ModalProgrammaticOptions<C> =\n            typeof options === \"string\" ? { content: options } : options;\n\n        const componentProps: ModalProps<C> = {\n            active: true, // set the active default state to true\n            ...(_options as ModalProps<C>),\n        };\n\n        // create programmatic component\n        return ComponentProgrammatic.open(Modal, {\n            registry, // custom programmatic instance registry\n            target, // target the component get rendered into\n            props: componentProps, // component specific props\n            onClose: _options.onClose, // on close event handler\n        });\n    },\n    /** Close the last registred instance in the modal programmatic instance registry. */\n    close(...args: unknown[]): void {\n        registry.last()?.exposed?.close(...args);\n    },\n    /** Close all instances in the programmatic modal instance registry. */\n    closeAll(...args: unknown[]): void {\n        registry.walk((entry) => entry.exposed?.close(...args));\n    },\n};\n\nexport default ModalProgrammatic;\n","import type { App, Plugin } from \"vue\";\n\nimport Modal from \"./Modal.vue\";\nimport ModalProgrammatic from \"./useModalProgrammatic\";\n\nimport {\n    registerComponent,\n    registerComponentProgrammatic,\n} from \"@/utils/plugins\";\n\n/** export modal specific types */\nexport type { ModalProgrammaticOptions } from \"./useModalProgrammatic\";\n\n/** export modal plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Modal);\n        registerComponentProgrammatic(app, \"modal\", ModalProgrammatic);\n    },\n} as Plugin;\n\n/** export modal components & composables */\nexport { Modal as OModal, ModalProgrammatic };\n","<script setup lang=\"ts\">\nimport { computed } from \"vue\";\n\nimport OIcon from \"../icon/Icon.vue\";\n\nimport { getDefault } from \"@/utils/config\";\nimport { defineClasses } from \"@/composables\";\n\nimport type { NotificationProps } from \"./props\";\n\n/**\n * Bold notification blocks to alert your users of something.\n * @displayName Notification\n * @requires ./NotificationNotice.vue\n * @style _notification.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"ONotification\",\n    configField: \"notification\",\n    inheritAttrs: false,\n});\n\nconst props = withDefaults(defineProps<NotificationProps>(), {\n    override: undefined,\n    message: undefined,\n    active: true,\n    type: undefined,\n    variant: () => getDefault(\"notification.variant\"),\n    position: () => getDefault(\"notification.position\", \"top\"),\n    animation: () => getDefault(\"notification.animation\", \"fade\"),\n    icon: undefined,\n    iconPack: () => getDefault(\"notification.iconPack\"),\n    iconSize: () => getDefault(\"notification.iconSize\", \"large\"),\n    closable: false,\n    closeIcon: () => getDefault(\"notification.closeIcon\", \"close\"),\n    closeIconSize: () => getDefault(\"notification.closeIconSize\"),\n    ariaCloseLabel: () => getDefault(\"notification.ariaCloseLabel\", \"Close\"),\n});\n\nconst emits = defineEmits<{\n    /**\n     * active prop two-way binding\n     * @param value {boolean} - updated active prop\n     */\n    \"update:active\": [value: boolean];\n    /**\n     * on component close event\n     * @param value {unknown} - close event data\n     */\n    close: [...args: unknown[]];\n}>();\n\nconst isActive = defineModel<boolean>(\"active\", { default: true });\n\n/** Icon name (MDI) based on type. */\nconst computedIcon = computed(() => {\n    if (props.icon) return props.icon;\n\n    switch (props.type) {\n        case \"info\":\n            return \"information\";\n        case \"success\":\n            return \"check-circle\";\n        case \"warning\":\n            return \"alert\";\n        case \"danger\":\n            return \"alert-circle\";\n        default:\n            return null;\n    }\n});\n\n/** set active to false and emit close event */\nfunction close(...args: unknown[]): void {\n    isActive.value = false;\n    emits(\"close\", ...args);\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-notification\"],\n    [\n        \"variantClass\",\n        \"o-notification--\",\n        computed(() => props.variant),\n        computed(() => !!props.variant),\n    ],\n    [\n        \"positionClass\",\n        \"o-notification--\",\n        computed(() => props.position),\n        computed(() => !!props.position),\n    ],\n);\n\nconst wrapperClasses = defineClasses([\n    \"wrapperClass\",\n    \"o-notification__wrapper\",\n]);\n\nconst iconClasses = defineClasses([\"iconClass\", \"o-notification__icon\"]);\n\nconst contentClasses = defineClasses([\n    \"contentClass\",\n    \"o-notification__content\",\n]);\n\nconst closeClasses = defineClasses([\"closeClass\", \"o-notification__close\"]);\n</script>\n\n<template>\n    <transition :name=\"animation\">\n        <article\n            v-show=\"isActive\"\n            v-bind=\"$attrs\"\n            data-oruga=\"notification\"\n            :class=\"rootClasses\">\n            <button\n                v-if=\"closable\"\n                :class=\"closeClasses\"\n                type=\"button\"\n                :aria-label=\"ariaCloseLabel\"\n                @click=\"close({ action: 'close', method: 'x' })\">\n                <o-icon\n                    clickable\n                    :pack=\"iconPack\"\n                    :icon=\"closeIcon\"\n                    :size=\"closeIconSize\"\n                    both />\n            </button>\n\n            <!--\n                @slot Notification inner content, outside of the message container\n                @binding {(...args): void} close - function to close the notification\n            -->\n            <slot name=\"inner\" :close=\"close\" />\n\n            <div v-if=\"$slots.default || message\" :class=\"wrapperClasses\">\n                <o-icon\n                    v-if=\"computedIcon\"\n                    :icon=\"computedIcon\"\n                    :pack=\"iconPack\"\n                    :class=\"iconClasses\"\n                    :size=\"iconSize\"\n                    both\n                    aria-hidden />\n                <div :class=\"contentClasses\">\n                    <!--\n                        @slot Notification default content, default is message prop\n                        @binding {(...args): void} close - function to close the notification\n                    -->\n                    <slot :close=\"close\">\n                        <span v-if=\"message\">{{ message }} </span>\n                    </slot>\n                </div>\n            </div>\n        </article>\n    </transition>\n</template>\n","<script setup lang=\"ts\" generic=\"C extends Component\">\nimport {\n    computed,\n    ref,\n    onMounted,\n    onBeforeMount,\n    useTemplateRef,\n    type Component,\n} from \"vue\";\n\nimport ONotification from \"./Notification.vue\";\n\nimport { getDefault } from \"@/utils/config\";\nimport { defineClasses, getActiveClasses } from \"@/composables\";\n\nimport type { NotificationNoticeProps } from \"./props\";\n\n/**\n * Notification Notice is an extension of the Notification component and is used for the programmatic usage.\n * @displayName Notification Notice\n */\ndefineOptions({\n    isOruga: true,\n    name: \"ONotificationNotice\",\n    configField: \"notification\",\n    inheritAttrs: false,\n});\n\nconst props = withDefaults(defineProps<NotificationNoticeProps<C>>(), {\n    override: undefined,\n    container: undefined,\n    variant: () => getDefault(\"notification.variant\"),\n    position: () => getDefault(\"notification.position\", \"top\"),\n    duration: () => getDefault(\"notification.duration\", 2000),\n    infinite: false,\n    queue: () => getDefault(\"notification.queue\"),\n    component: undefined,\n    props: undefined,\n    events: undefined,\n});\n\nconst emits = defineEmits<{\n    /**\n     * on component close event\n     * @param value {unknown} - close event data\n     */\n    close: [...args: unknown[]];\n}>();\n\nconst notificationRef = useTemplateRef(\"notificationComponent\");\n\nconst isActive = ref(true);\n\nconst parentTop = ref<Element | null>(null);\nconst parentBottom = ref<Element | null>(null);\n\nconst timer = ref();\n\n/** Create or inject notice dom container elements. */\nonBeforeMount(() => {\n    if (\n        noticeClasses.value &&\n        positionBottomClasses.value &&\n        positionTopClasses.value\n    ) {\n        const rootClasses = getActiveClasses(noticeClasses.value);\n        const topClasses = getActiveClasses(positionTopClasses.value);\n        const bottomClasses = getActiveClasses(positionBottomClasses.value);\n\n        parentTop.value = props.container.querySelector(\n            `.${rootClasses.join(\".\")}.${topClasses.join(\".\")}`,\n        );\n        parentBottom.value = props.container.querySelector(\n            `.${rootClasses.join(\".\")}.${bottomClasses.join(\".\")}`,\n        );\n\n        if (parentTop.value && parentBottom.value) return;\n\n        // create notices top container if not alread there\n        if (!parentTop.value) {\n            parentTop.value = document.createElement(\"div\");\n            parentTop.value.className = `${rootClasses.join(\n                \" \",\n            )} ${topClasses.join(\" \")}`;\n            parentTop.value.role = \"region\";\n            parentTop.value.ariaLive = \"polite\";\n        }\n\n        // create notices bottom container if not alread there\n        if (!parentBottom.value) {\n            parentBottom.value = document.createElement(\"div\");\n            parentBottom.value.className = `${rootClasses.join(\n                \" \",\n            )} ${bottomClasses.join(\" \")}`;\n            parentBottom.value.role = \"region\";\n            parentBottom.value.ariaLive = \"polite\";\n        }\n\n        // append notices top and bottom container to given container\n        props.container.appendChild(parentTop.value);\n        props.container.appendChild(parentBottom.value);\n\n        if (props.container.tagName !== \"BODY\") {\n            const classes = getActiveClasses(noticeContainerClasses.value);\n            if (classes?.length)\n                classes\n                    .filter((c) => !!c)\n                    .forEach((c: string) => {\n                        parentTop.value?.classList.add(c);\n                        parentBottom.value?.classList.add(c);\n                    });\n        }\n    }\n});\n\nonMounted(() => {\n    showNotice();\n    setAutoClose();\n});\n\nconst correctParent = computed(() => {\n    switch (props.position) {\n        case \"top-right\":\n        case \"top\":\n        case \"top-left\":\n            return parentTop.value;\n\n        case \"bottom-right\":\n        case \"bottom\":\n        case \"bottom-left\":\n            return parentBottom.value;\n        default:\n            return null;\n    }\n});\n\nconst shouldQueue = computed(() =>\n    props.queue && parentTop.value && parentBottom.value\n        ? parentTop.value.childElementCount > 0 ||\n          parentBottom.value.childElementCount > 0\n        : false,\n);\n\nconst isAlert = computed(\n    () => props.variant === \"warning\" || props.variant === \"danger\",\n);\n\n/** move the rendered component template into the correct parent container */\nfunction showNotice(): void {\n    if (!correctParent.value) return;\n\n    if (shouldQueue.value) correctParent.value.innerHTML = \"\";\n    correctParent.value.insertAdjacentElement(\n        \"afterbegin\",\n        notificationRef.value?.$el,\n    );\n}\n\n/** Set timer to auto close message */\nfunction setAutoClose(): void {\n    if (!props.infinite) {\n        // clear old timer\n        if (timer.value) clearTimeout(timer.value);\n        // set new timer\n        timer.value = setTimeout(() => {\n            if (isActive.value) close({ action: \"close\", method: \"timeout\" });\n        }, props.duration);\n    }\n}\n\n/** set active to false and emit close event */\nfunction close(...args: unknown[]): void {\n    isActive.value = false;\n    if (timer.value) clearTimeout(timer.value);\n    emits(\"close\", args);\n}\n\n// --- Computed Component Classes ---\n\nconst noticeClasses = defineClasses([\"noticeClass\", \"o-notices\"]);\n\nconst positionTopClasses = defineClasses([\n    \"noticePositionClass\",\n    \"o-notices--\",\n    \"top\",\n]);\nconst positionBottomClasses = defineClasses([\n    \"noticePositionClass\",\n    \"o-notices--\",\n    \"bottom\",\n]);\n\nconst noticeContainerClasses = defineClasses([\n    \"noticeContainerClass\",\n    \"o-notices__container\",\n]);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ close });\n</script>\n\n<template>\n    <o-notification\n        ref=\"notificationComponent\"\n        v-bind=\"$attrs\"\n        v-model:active=\"isActive\"\n        :override=\"override\"\n        :position=\"position\"\n        :variant=\"variant\"\n        :role=\"isAlert ? 'alert' : 'status'\"\n        :aria-atomic=\"true\"\n        @close=\"close\">\n        <template #inner=\"{ close }\">\n            <!-- injected component for programmatic usage -->\n            <component\n                v-bind=\"$props.props\"\n                :is=\"component\"\n                v-if=\"component\"\n                v-on=\"$props.events || {}\"\n                @close=\"close\" />\n        </template>\n        <slot />\n    </o-notification>\n</template>\n","import type {\n    Component,\n    ComponentInternalInstance,\n    MaybeRefOrGetter,\n} from \"vue\";\nimport {\n    InstanceRegistry,\n    ComponentProgrammatic,\n    type ProgrammaticComponentOptions,\n    type ProgrammaticExpose,\n} from \"../programmatic\";\nimport { getOption } from \"@/utils/config\";\n\nimport NotificationNotice from \"./NotificationNotice.vue\";\n\nimport type { NotificationProps, NotificationNoticeProps } from \"./props\";\n\ndeclare module \"../../index\" {\n    interface OrugaProgrammatic {\n        notification: typeof NotificationProgrammatic;\n    }\n}\n\n/** notification component programmatic instance registry */\nconst registry = new InstanceRegistry<ComponentInternalInstance>();\n\n/** useNotificationProgrammatic composable options */\nexport type NotificationProgrammaticOptions<C extends Component> = Readonly<\n    Omit<NotificationNoticeProps<C> & NotificationProps, \"container\">\n> &\n    ProgrammaticComponentOptions;\n\nconst NotificationProgrammatic = {\n    /** Returns the number of registered active instances. */\n    count: registry.count,\n    /**\n     * Create a new programmatic notification component instance.\n     * @param options notification message string or notification component props object\n     * @param target specify a target the component get rendered into - default is `document.body`\n     * @returns ProgrammaticExpose\n     */\n    open<C extends Component>(\n        options: string | NotificationProgrammaticOptions<C>,\n        target?: MaybeRefOrGetter<string | HTMLElement | null>,\n    ): ProgrammaticExpose {\n        const _options: NotificationProgrammaticOptions<C> =\n            typeof options === \"string\" ? { message: options } : options;\n\n        const componentProps: NotificationNoticeProps<C> = {\n            position: getOption(\"notification.position\", \"top-right\"),\n            container: document.body,\n            ..._options, // pass all props to the internal notification component\n        };\n\n        // create programmatic component\n        return ComponentProgrammatic.open(NotificationNotice, {\n            registry, // custom programmatic instance registry\n            target, // target the component get rendered into\n            props: componentProps, // component specific props\n            onClose: _options.onClose, // on close event handler\n        });\n    },\n    /** Close the last registred instance in the notification programmatic instance registry. */\n    close(...args: unknown[]): void {\n        registry.last()?.exposed?.close(...args);\n    },\n    /** Close all instances in the programmatic notification instance registry. */\n    closeAll(...args: unknown[]): void {\n        registry.walk((entry) => entry.exposed?.close(...args));\n    },\n};\n\nexport default NotificationProgrammatic;\n","import type { App, Plugin } from \"vue\";\n\nimport Notification from \"./Notification.vue\";\nimport NotificationProgrammatic from \"./useNotificationProgrammatic\";\n\nimport {\n    registerComponent,\n    registerComponentProgrammatic,\n} from \"@/utils/plugins\";\n\n/** export notification specific types */\nexport type { NotificationProgrammaticOptions } from \"./useNotificationProgrammatic\";\n\n/** export notification plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Notification);\n        registerComponentProgrammatic(\n            app,\n            \"notification\",\n            NotificationProgrammatic,\n        );\n    },\n} as Plugin;\n\n/** export notification components & composables */\nexport { Notification as ONotification, NotificationProgrammatic };\n","<script setup lang=\"ts\">\nimport { computed, type PropType } from \"vue\";\n\nimport type { ClassBind, DynamicComponent } from \"@/types\";\n\ndefineOptions({\n    isOruga: true,\n    name: \"OPaginationButton\",\n    configField: \"pagination\",\n});\n\nconst props = defineProps({\n    number: { type: Number, default: undefined },\n    isCurrent: { type: Boolean, default: false },\n    ariaLabel: { type: String, default: undefined },\n    disabled: { type: Boolean, default: false },\n    tag: {\n        type: [String, Object, Function] as PropType<DynamicComponent>,\n        default: \"button\" as DynamicComponent,\n    },\n    rootClass: { type: Array as PropType<ClassBind[]>, default: () => [] },\n    buttonClass: {\n        type: Array as PropType<ClassBind[]>,\n        required: true,\n    },\n    buttonCurrentClass: {\n        type: Array as PropType<ClassBind[]>,\n        required: true,\n    },\n});\n\ndefineEmits<{\n    click: [event: Event];\n}>();\n\n// --- Computed Component Classes ---\n\nconst classes = computed(() => [\n    ...props.rootClass,\n    ...props.buttonClass,\n    ...(props.isCurrent ? props.buttonCurrentClass : []),\n]);\n</script>\n\n<template>\n    <component\n        :is=\"tag\"\n        role=\"button\"\n        :tabindex=\"disabled ? undefined : 0\"\n        :disabled=\"disabled\"\n        :class=\"classes\"\n        :aria-label=\"ariaLabel\"\n        :aria-current=\"isCurrent\"\n        @click.prevent=\"$emit('click', $event)\"\n        @keydown.enter.prevent=\"$emit('click', $event)\">\n        <slot>{{ number }}</slot>\n    </component>\n</template>\n","<script setup lang=\"ts\">\nimport { computed, watch, nextTick } from \"vue\";\n\nimport OPaginationButton from \"./PaginationButton.vue\";\nimport OIcon from \"../icon/Icon.vue\";\n\nimport { getDefault } from \"@/utils/config\";\nimport { defineClasses, useMatchMedia } from \"@/composables\";\n\nimport type { PaginationProps } from \"./props\";\nimport type { DynamicComponent } from \"@/types\";\n\n/**\n * A responsive and flexible pagination.\n * @displayName Pagination\n * @style _pagination.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OPagination\",\n    configField: \"pagination\",\n    inheritAttrs: false,\n});\n\nconst props = withDefaults(defineProps<PaginationProps>(), {\n    override: undefined,\n    total: undefined,\n    perPage: () => getDefault(\"pagination.perPage\", 20),\n    current: 1,\n    rangeBefore: 1,\n    rangeAfter: 1,\n    size: () => getDefault(\"pagination.size\"),\n    simple: () => getDefault(\"pagination.simple\", false),\n    rounded: () => getDefault(\"pagination.rounded\", false),\n    order: () => getDefault(\"pagination.order\", \"right\"),\n    buttonTag: () => getDefault(\"pagination.buttonTag\", \"button\"),\n    iconPack: () => getDefault(\"pagination.iconPack\"),\n    iconPrev: () => getDefault(\"pagination.iconPrev\", \"chevron-left\"),\n    iconNext: () => getDefault(\"pagination.iconNext\", \"chevron-right\"),\n    mobileBreakpoint: () => getDefault(\"pagination.mobileBreakpoint\"),\n    ariaNextLabel: () => getDefault(\"pagination.ariaNextLabel\", \"Next page\"),\n    ariaPreviousLabel: () =>\n        getDefault(\"pagination.ariaPreviousLabel\", \"Previous page\"),\n    ariaPageLabel: () => getDefault(\"pagination.ariaPageLabel\", \"Page\"),\n    ariaCurrentLabel: () =>\n        getDefault(\"pagination.ariaCurrentLabel\", \"Current page\"),\n});\n\nconst emits = defineEmits<{\n    /**\n     * current prop two-way binding\n     * @param value {number} updated current prop\n     */\n    \"update:current\": [value: number];\n    /**\n     * on current change event\n     * @param value {number} current value\n     */\n    change: [event: number];\n}>();\n\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\n\nconst currentPage = defineModel<number>(\"current\", { default: 1 });\n\n/** Total page size (count). */\nconst pageCount = computed(() =>\n    Math.ceil((props.total || 0) / Number(props.perPage)),\n);\n\n/** If current page is trying to be greater than page count, set to last. */\nwatch(\n    () => pageCount.value,\n    (value) => {\n        if (props.current > value) last(new Event(\"change\"));\n    },\n);\n\n/** First item of the page (count). */\nconst firstItem = computed(() => {\n    const perPage = Number(props.perPage);\n    const firstItem = props.current * perPage - perPage + 1;\n    return firstItem >= 0 ? firstItem : 0;\n});\n\n/** Check if this is the first page. */\nconst isFirst = computed(() => props.current <= 1);\n\n/** Check if first page button should be visible. */\nconst hasFirst = computed(() => props.current >= props.rangeBefore + 2);\n\n/** Check if first ellipsis should be visible. */\nconst hasFirstEllipsis = computed(() => props.current >= props.rangeBefore + 4);\n\n/** Check if this is the last page. */\nconst isLast = computed(() => props.current >= pageCount.value);\n\n/** Check if last page button should be visible. */\nconst hasLast = computed(\n    () => props.current <= pageCount.value - (1 + props.rangeAfter),\n);\n\n/** Check if last ellipsis should be visible. */\nconst hasLastEllipsis = computed(\n    () => props.current < pageCount.value - (2 + props.rangeAfter),\n);\n\n/**\n * Get near pages, 1 before and 1 after the current.\n * Also add the click event to the array.\n */\nconst pagesInRange = computed<ReturnType<typeof getPage>[]>(() => {\n    if (props.simple) return [];\n\n    let left = Math.max(1, props.current - props.rangeBefore);\n    if (left - 1 === 2) {\n        left--; // Do not show the ellipsis if there is only one to hide\n    }\n    let right = Math.min(props.current + props.rangeAfter, pageCount.value);\n    if (pageCount.value - right === 2) {\n        right++; // Do not show the ellipsis if there is only one to hide\n    }\n\n    const pages: ReturnType<typeof getPage>[] = [];\n    for (let i = left; i <= right; i++) {\n        pages.push(getPage(i));\n    }\n    return pages;\n});\n\n/** Get properties for a page */\nfunction getPage(\n    num: number,\n    ariaLabel?: string,\n): {\n    number: number;\n    isCurrent: boolean;\n    onClick: (event: Event) => void;\n    ariaLabel: string;\n    tag: DynamicComponent;\n} {\n    return {\n        number: num,\n        isCurrent: props.current === num,\n        onClick: (event: Event): void => changePage(num, event),\n        ariaLabel: ariaLabel || getAriaPageLabel(num, props.current === num),\n        tag: props.buttonTag,\n    };\n}\n\n/** Get text for aria-label according to page number. */\nfunction getAriaPageLabel(pageNumber: number, isCurrent: boolean): string {\n    if (props.ariaPageLabel && (!isCurrent || !props.ariaCurrentLabel))\n        return props.ariaPageLabel + \" \" + pageNumber + \".\";\n    else if (props.ariaPageLabel && isCurrent && props.ariaCurrentLabel)\n        return (\n            props.ariaCurrentLabel +\n            \", \" +\n            props.ariaPageLabel +\n            \" \" +\n            pageNumber +\n            \".\"\n        );\n    return \"\";\n}\n\n/** Previous button click listener. */\nfunction prev(event: Event): void {\n    changePage(props.current - 1, event);\n}\n\n/** Next button click listener. */\nfunction next(event: Event): void {\n    changePage(props.current + 1, event);\n}\n\n/** First button click listener. */\nfunction first(event: Event): void {\n    changePage(1, event);\n}\n\n/** Last button click listener. */\nfunction last(event: Event): void {\n    changePage(pageCount.value, event);\n}\n\nfunction changePage(page: number, event: Event): void {\n    if (props.current === page || page < 1 || page > pageCount.value) return;\n    emits(\"change\", page);\n    currentPage.value = page;\n\n    // Set focus on element to keep tab order\n    if (event && event.target)\n        nextTick(() => (event.target as HTMLElement).focus());\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-pagination\"],\n    [\n        \"orderClass\",\n        \"o-pagination--\",\n        computed(() => props.order),\n        computed(() => !!props.order),\n    ],\n    [\n        \"sizeClass\",\n        \"o-pagination--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\"simpleClass\", \"o-pagination--simple\", null, computed(() => props.simple)],\n    [\"mobileClass\", \"o-pagination--mobile\", null, isMobile],\n);\n\nconst infoClasses = defineClasses([\"infoClass\", \"o-pagination__info\"]);\n\nconst ellipsisClasses = defineClasses([\n    \"ellipsisClass\",\n    \"o-pagination__ellipsis\",\n]);\n\nconst listClasses = defineClasses([\"listClass\", \"o-pagination__list\"]);\n\nconst listItemClasses = defineClasses([\"listItemClass\", \"o-pagination__item\"]);\n\nconst buttonClasses = defineClasses(\n    [\"buttonClass\", \"o-pagination__button\"],\n    [\n        \"roundedClass\",\n        \"o-pagination__button--rounded\",\n        null,\n        computed(() => props.rounded),\n    ],\n);\n\nconst buttonCurrentClasses = defineClasses([\n    \"buttonCurrentClass\",\n    \"o-pagination__button--current\",\n]);\n\nconst buttonPrevClasses = defineClasses(\n    [\"buttonPrevClass\", \"o-pagination__button-previous\"],\n    [\"buttonDisabledClass\", \"o-pagination__button--disabled\", null, isFirst],\n);\n\nconst buttonNextClasses = defineClasses(\n    [\"buttonNextClass\", \"o-pagination__button-next\"],\n    [\"buttonDisabledClass\", \"o-pagination__button--disabled\", null, isLast],\n);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ last, first, prev, next });\n</script>\n\n<template>\n    <nav data-oruga=\"pagination\" :class=\"rootClasses\">\n        <!-- \n            @slot Previous button slot\n            @binding {number} number - page number \n            @binding {boolean} isCurrent - if page is current\n            @binding {(event:Event): void} onClick - click handler\n            @binding {string} ariaLabel - aria-label attribute\n        -->\n        <slot\n            name=\"previous\"\n            v-bind=\"getPage(currentPage - 1, ariaPreviousLabel)\">\n            <o-pagination-button\n                v-bind=\"getPage(currentPage - 1, ariaPreviousLabel)\"\n                :disabled=\"isFirst\"\n                :root-class=\"buttonPrevClasses\"\n                :button-class=\"buttonClasses\"\n                :button-current-class=\"buttonCurrentClasses\">\n                <o-icon\n                    :icon=\"iconPrev\"\n                    :pack=\"iconPack\"\n                    both\n                    aria-hidden=\"true\" />\n            </o-pagination-button>\n        </slot>\n\n        <!-- \n            @slot Next button slot\n            @binding {number} number - page number \n            @binding {boolean} isCurrent - if page is current\n            @binding {(event:Event): void} onClick - click handler\n            @binding {string} ariaLabel - aria-label attribute\n        -->\n        <slot name=\"next\" v-bind=\"getPage(currentPage + 1, ariaNextLabel)\">\n            <o-pagination-button\n                v-bind=\"getPage(currentPage + 1, ariaNextLabel)\"\n                :disabled=\"isLast\"\n                :root-class=\"buttonNextClasses\"\n                :button-class=\"buttonClasses\"\n                :button-current-class=\"buttonCurrentClasses\">\n                <o-icon\n                    :icon=\"iconNext\"\n                    :pack=\"iconPack\"\n                    both\n                    aria-hidden=\"true\" />\n            </o-pagination-button>\n        </slot>\n\n        <small v-if=\"simple\" :class=\"infoClasses\">\n            <template v-if=\"perPage == 1\">\n                {{ firstItem }} / {{ total }}\n            </template>\n            <template v-else>\n                {{ firstItem }}-{{\n                    Math.min(currentPage * Number(perPage), total)\n                }}\n                /\n                {{ total }}\n            </template>\n        </small>\n\n        <ul v-else :class=\"listClasses\">\n            <!--First-->\n            <li v-if=\"hasFirst\" :class=\"listItemClasses\">\n                <slot v-bind=\"getPage(1)\">\n                    <o-pagination-button\n                        v-bind=\"getPage(1)\"\n                        :button-class=\"buttonClasses\"\n                        :button-current-class=\"buttonCurrentClasses\" />\n                </slot>\n            </li>\n\n            <li v-if=\"hasFirstEllipsis\" :class=\"listItemClasses\">\n                <span :class=\"ellipsisClasses\">&hellip;</span>\n            </li>\n\n            <!--Pages-->\n            <li\n                v-for=\"page in pagesInRange\"\n                :key=\"page.number\"\n                :class=\"listItemClasses\">\n                <slot v-bind=\"page\">\n                    <o-pagination-button\n                        v-bind=\"page\"\n                        :button-class=\"buttonClasses\"\n                        :button-current-class=\"buttonCurrentClasses\" />\n                </slot>\n            </li>\n\n            <!--Last-->\n            <li v-if=\"hasLastEllipsis\" :class=\"listItemClasses\">\n                <span :class=\"ellipsisClasses\">&hellip;</span>\n            </li>\n\n            <li v-if=\"hasLast\" :class=\"listItemClasses\">\n                <!-- \n                    @slot Pagination button slot\n                    @binding {number} number - page number \n                    @binding {boolean} isCurrent - if page is current\n                    @binding {(event:Event): void} onClick - click handler\n                    @binding {string} ariaLabel - aria-label attribute\n                -->\n                <slot v-bind=\"getPage(pageCount)\">\n                    <o-pagination-button\n                        v-bind=\"getPage(pageCount)\"\n                        :button-class=\"buttonClasses\"\n                        :button-current-class=\"buttonCurrentClasses\" />\n                </slot>\n            </li>\n        </ul>\n    </nav>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Pagination from \"./Pagination.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export pagination plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Pagination);\n    },\n} as Plugin;\n\n/** export pagination components */\nexport { Pagination as OPagination };\n","<script setup lang=\"ts\" generic=\"T\">\nimport { computed, useAttrs, useId, useSlots, useTemplateRef } from \"vue\";\n\nimport { getDefault } from \"@/utils/config\";\nimport { defineClasses, useInputHandler } from \"@/composables\";\n\nimport { injectField } from \"../field/fieldInjection\";\n\nimport type { RadioProps } from \"./props\";\n\n/**\n * Select an option from a set of options.\n * @displayName Radio\n * @style _radio.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"ORadio\",\n    configField: \"radio\",\n    inheritAttrs: false,\n});\n\nconst props = withDefaults(defineProps<RadioProps<T>>(), {\n    override: undefined,\n    modelValue: undefined,\n    id: () => useId(),\n    label: undefined,\n    name: undefined,\n    variant: () => getDefault(\"radio.variant\"),\n    size: () => getDefault(\"radio.size\"),\n    disabled: false,\n    required: false,\n    nativeValue: undefined,\n    autocomplete: () => getDefault(\"radio.autocomplete\", \"off\"),\n    useHtml5Validation: () => getDefault(\"useHtml5Validation\", true),\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {T} updated modelValue prop\n     */\n    \"update:model-value\": [value: T];\n    /**\n     * on input change event\n     * @param value {T} input value\n     * @param event {Event} native event\n     */\n    input: [value: T, event: Event];\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    focus: [event: Event];\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    blur: [event: Event];\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    invalid: [event: Event];\n}>();\n\nconst inputRef = useTemplateRef(\"inputElement\");\n\n// use form input functionalities\nconst { onBlur, onFocus, onInvalid, setFocus } = useInputHandler(\n    inputRef,\n    emits,\n    props,\n);\n\n// inject parent field component if used inside one\nconst { parentField } = injectField();\n\n// set field labelId or create a unique label id if a label is given\nconst labelId =\n    !!parentField.value || !!props.label || !!useSlots().default\n        ? parentField.value?.labelId || useId()\n        : undefined;\n\n// if no `label` is given and `id` is given set as `for` property on o-field wrapper\nif (!props.label && props.id) parentField.value?.setInputId(props.id);\n\nconst vmodel = defineModel<T>({ default: undefined });\n\nconst isChecked = computed(() => vmodel.value === props.nativeValue);\n\nfunction onInput(event: Event): void {\n    emits(\"input\", vmodel.value, event);\n}\n\n// --- Computed Component Classes ---\n\nconst attrs = useAttrs();\n\nconst inputBind = computed(() => ({\n    ...parentField?.value?.inputAttrs,\n    ...attrs,\n}));\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-radio\"],\n    [\n        \"sizeClass\",\n        \"o-radio--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\n        \"variantClass\",\n        \"o-radio--\",\n        computed(() => props.variant),\n        computed(() => !!props.variant),\n    ],\n    [\n        \"disabledClass\",\n        \"o-radio--disabled\",\n        null,\n        computed(() => props.disabled),\n    ],\n    [\"checkedClass\", \"o-radio--checked\", null, isChecked],\n);\n\nconst inputClasses = defineClasses([\"inputClass\", \"o-radio__input\"]);\n\nconst labelClasses = defineClasses([\"labelClass\", \"o-radio__label\"]);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: setFocus, value: vmodel });\n</script>\n\n<template>\n    <div data-oruga=\"radio\" :class=\"rootClasses\">\n        <input\n            v-bind=\"inputBind\"\n            :id=\"id\"\n            ref=\"inputElement\"\n            v-model=\"vmodel\"\n            type=\"radio\"\n            data-oruga-input=\"radio\"\n            :class=\"inputClasses\"\n            :name=\"name\"\n            :value=\"nativeValue\"\n            :required=\"required\"\n            :disabled=\"disabled\"\n            :autocomplete=\"autocomplete\"\n            :aria-checked=\"isChecked\"\n            :aria-labelledby=\"labelId\"\n            @blur=\"onBlur\"\n            @focus=\"onFocus\"\n            @invalid=\"onInvalid\"\n            @change=\"onInput\" />\n\n        <label\n            v-if=\"label || $slots.default\"\n            :id=\"labelId\"\n            :for=\"id\"\n            :class=\"labelClasses\">\n            <!--\n                @slot Override the label, default is label prop \n            -->\n            <slot>{{ label }}</slot>\n        </label>\n    </div>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Radio from \"./Radio.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export radio plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Radio);\n    },\n} as Plugin;\n\n/** export radio components */\nexport { Radio as ORadio };\n","import type { App, Plugin } from \"vue\";\n\nimport Select from \"./Select.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export select specific types */\n// no types to export here\n\n/** export select plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Select);\n    },\n} as Plugin;\n\n/** export select components */\nexport { Select as OSelect };\n","<script setup lang=\"ts\">\nimport { computed } from \"vue\";\n\nimport { getDefault } from \"@/utils/config\";\nimport { toCssDimension } from \"@/utils/helpers\";\nimport { defineClasses } from \"@/composables\";\n\nimport type { SkeletonProps } from \"./props\";\n\n/**\n * A placeholder for content to load.\n * @displayName Skeleton\n * @style _skeleton.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OSkeleton\",\n    configField: \"skeleton\",\n});\n\nconst props = withDefaults(defineProps<SkeletonProps>(), {\n    override: undefined,\n    active: true,\n    animated: () => getDefault(\"skeleton.animated\", true),\n    width: undefined,\n    height: undefined,\n    circle: false,\n    rounded: () => getDefault(\"skeleton.rounded\", true),\n    count: 1,\n    size: undefined,\n    position: \"left\",\n});\n\nconst itemStyle = computed(() => ({\n    height: toCssDimension(props.height),\n    width: toCssDimension(props.width),\n    borderRadius: props.circle ? \"50%\" : undefined,\n}));\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-skeleton\"],\n    [\n        \"positionClass\",\n        \"o-skeleton--\",\n        computed(() => props.position),\n        computed(() => !!props.position),\n    ],\n);\n\nconst itemClasses = defineClasses(\n    [\"itemClass\", \"o-skeleton__item\"],\n    [\n        \"roundedClass\",\n        \"o-skeleton__item--rounded\",\n        null,\n        computed(() => props.rounded),\n    ],\n    [\n        \"animatedClass\",\n        \"o-skeleton__item--animated\",\n        null,\n        computed(() => props.animated),\n    ],\n    [\n        \"sizeClass\",\n        \"o-skeleton__item--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n);\n</script>\n\n<template>\n    <div v-if=\"active\" data-oruga=\"skeleton\" :class=\"rootClasses\">\n        <div\n            v-for=\"i in count\"\n            :key=\"i\"\n            :class=\"itemClasses\"\n            :style=\"itemStyle\" />\n    </div>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Skeleton from \"./Skeleton.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export skeleton plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Skeleton);\n    },\n} as Plugin;\n\n/** export skeleton components */\nexport { Skeleton as OSkeleton };\n","<script setup lang=\"ts\" generic=\"C extends Component\">\nimport {\n    ref,\n    computed,\n    watch,\n    onMounted,\n    useTemplateRef,\n    type Component,\n} from \"vue\";\n\nimport { getDefault } from \"@/utils/config\";\nimport { isClient } from \"@/utils/ssr\";\nimport {\n    defineClasses,\n    useClickOutside,\n    useEventListener,\n    useMatchMedia,\n    usePreventScrolling,\n    useTrapFocus,\n    useTeleportDefault,\n} from \"@/composables\";\n\nimport type { SidebarProps } from \"./props\";\n\n/**\n * A sidebar to use as overlay.\n * @displayName Sidebar\n * @style _sidebar.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OSidebar\",\n    configField: \"sidebar\",\n    inheritAttrs: false,\n});\n\nconst props = withDefaults(defineProps<SidebarProps<C>>(), {\n    override: undefined,\n    active: false,\n    overlay: () => getDefault(\"sidebar.overlay\", false),\n    inline: false,\n    position: () => getDefault(\"sidebar.position\", \"left\"),\n    fullheight: () => getDefault(\"sidebar.fullheight\", false),\n    fullwidth: () => getDefault(\"sidebar.fullwidth\", false),\n    reduce: () => getDefault(\"sidebar.reduce\", false),\n    mobile: () => getDefault(\"sidebar.mobile\"),\n    expandOnHover: () => getDefault(\"sidebar.expandOnHover\", false),\n    animation: () => getDefault(\"sidebar.animation\"),\n    cancelable: () => getDefault(\"sidebar.cancelable\", [\"escape\", \"outside\"]),\n    trapFocus: () => getDefault(\"sidebar.trapFocus\", true),\n    clipScroll: () => getDefault(\"sidebar.clipScroll\", false),\n    mobileBreakpoint: () => getDefault(\"sidebar.mobileBreakpoint\"),\n    teleport: () => getDefault(\"sidebar.teleport\", false),\n    component: undefined,\n    props: undefined,\n    events: undefined,\n});\n\nconst emits = defineEmits<{\n    /**\n     * active prop two-way binding\n     * @param value {boolean} - updated active prop\n     */\n    \"update:active\": [value: boolean];\n    /**\n     * on component close event\n     * @param value {unknown} - close event data\n     */\n    close: [...args: unknown[]];\n}>();\n\nconst { vTrapFocus } = useTrapFocus();\n\nconst rootRef = useTemplateRef(\"rootElement\");\nconst contentRef = useTemplateRef(\"contentElement\");\n\nconst isActive = defineModel<boolean>(\"active\", { default: false });\n\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\n\nconst _teleport = computed(() =>\n    typeof props.teleport === \"boolean\"\n        ? { to: useTeleportDefault(), disabled: !props.teleport }\n        : { to: props.teleport, disabled: false },\n);\n\nconst transitionName = computed(() => {\n    if (props.animation) return props.animation;\n\n    const vertical = props.position === \"top\" || props.position === \"bottom\";\n    const right = props.position === \"right\";\n    const open = right ? !isActive.value : isActive.value;\n\n    return open\n        ? vertical\n            ? \"slide-down\"\n            : \"slide-next\"\n        : vertical\n          ? \"slide-up\"\n          : \"slide-prev\";\n});\n\nconst hideOnMobile = computed(\n    () => props.mobile === \"hidden\" && isMobile.value,\n);\n\nconst toggleScroll = usePreventScrolling(props.clipScroll);\n\nwatch(\n    isActive,\n    (value) => {\n        if (props.overlay) toggleScroll(value);\n    },\n    { flush: \"post\" },\n);\n\nonMounted(() => {\n    if (isActive.value && props.overlay) toggleScroll(true);\n});\n\n// --- Events Feature ---\n\nif (isClient) {\n    // register onKeyPress event listener when is active\n    useEventListener(rootRef, \"keyup\", onKeyPress, { trigger: isActive });\n\n    if (!props.overlay)\n        // register outside click event listener when is active\n        useClickOutside(contentRef, clickedOutside, { trigger: isActive });\n}\n\n/** Keypress event that is bound to the document. */\nfunction onKeyPress(event: KeyboardEvent): void {\n    if (!isActive.value) return;\n    if (event.key === \"Escape\" || event.key === \"Esc\") cancel(\"escape\");\n}\n\n/** Close fixed sidebar if clicked outside. */\nfunction clickedOutside(event: Event): void {\n    if (props.inline || !isActive.value || isAnimating.value) return;\n    if (\n        props.overlay ||\n        (contentRef.value && !event.composedPath().includes(contentRef.value))\n    )\n        event.preventDefault();\n    cancel(\"outside\");\n}\n\n/**\n * Check if method is cancelable.\n * Call close() with action `cancel`.\n * @param method Cancel method\n */\nfunction cancel(method: string): void {\n    // check if method is cancelable\n    if (\n        (typeof props.cancelable === \"boolean\" && !props.cancelable) ||\n        !props.cancelable ||\n        (Array.isArray(props.cancelable) && !props.cancelable.includes(method))\n    )\n        return;\n    close({ action: \"cancel\", method });\n}\n\n/** set active to false and emit close event */\nfunction close(...args: unknown[]): void {\n    isActive.value = false;\n    emits(\"close\", args);\n}\n\n// --- Animation Feature ---\n\nconst isAnimating = ref(!props.active);\n\n/** Transition after-enter hook */\nfunction afterEnter(): void {\n    isAnimating.value = false;\n}\n\n/** Transition before-leave hook */\nfunction beforeLeave(): void {\n    isAnimating.value = true;\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-sidebar\"],\n    [\"mobileClass\", \"o-sidebar--mobile\", null, isMobile],\n    [\"activeClass\", \"o-sidebar--active\", null, isActive],\n    [\n        \"teleportClass\",\n        \"o-sidebar--teleport\",\n        null,\n        computed(() => !!props.teleport),\n    ],\n    [\"inlineClass\", \"o-sidebar--inline\", null, computed(() => props.inline)],\n);\n\nconst overlayClasses = defineClasses([\"overlayClass\", \"o-sidebar__overlay\"]);\n\nconst contentClasses = defineClasses(\n    [\"contentClass\", \"o-sidebar__content\"],\n    [\n        \"positionClass\",\n        \"o-sidebar__content--\",\n        computed(() => props.position),\n        computed(() => !!props.position),\n    ],\n    [\n        \"fullheightClass\",\n        \"o-sidebar__content--fullheight\",\n        null,\n        computed(() => props.fullheight),\n    ],\n    [\n        \"fullwidthClass\",\n        \"o-sidebar__content--fullwidth\",\n        null,\n        computed(\n            () =>\n                props.fullwidth ||\n                (isMobile.value && props.mobile === \"expanded\"),\n        ),\n    ],\n    [\n        \"reduceClass\",\n        \"o-sidebar__content--reduced\",\n        null,\n        computed(\n            () =>\n                props.reduce || (isMobile.value && props.mobile === \"reduced\"),\n        ),\n    ],\n    [\n        \"expandOnHoverClass\",\n        \"o-sidebar__content--hover-expand\",\n        null,\n        computed(\n            () =>\n                props.expandOnHover &&\n                (!isMobile.value || props.mobile !== \"expanded\"),\n        ),\n    ],\n    [\"visibleClass\", \"o-sidebar__content--visible\", null, isActive],\n    [\n        \"hiddenClass\",\n        \"o-sidebar__content--hidden\",\n        null,\n        computed(() => !isActive.value),\n    ],\n);\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ close });\n</script>\n\n<template>\n    <Teleport :to=\"_teleport.to\" :disabled=\"_teleport.disabled\">\n        <div\n            v-show=\"!hideOnMobile\"\n            ref=\"rootElement\"\n            v-bind=\"$attrs\"\n            v-trap-focus=\"isActive && !inline && trapFocus\"\n            data-oruga=\"sidebar\"\n            :class=\"rootClasses\">\n            <div\n                v-if=\"overlay && isActive\"\n                :class=\"overlayClasses\"\n                :tabindex=\"-1\"\n                @click=\"clickedOutside\" />\n\n            <transition\n                :name=\"transitionName\"\n                @after-enter=\"afterEnter\"\n                @before-leave=\"beforeLeave\">\n                <div\n                    v-show=\"isActive\"\n                    ref=\"contentElement\"\n                    :class=\"contentClasses\">\n                    <!--\n                        @slot Sidebar default content, default is component prop\n                        @binding {(...args):void} close - function to close the component\n                    -->\n                    <slot :close=\"close\">\n                        <!-- injected component for programmatic usage -->\n                        <component\n                            :is=\"component\"\n                            v-if=\"component\"\n                            v-bind=\"$props.props\"\n                            v-on=\"$props.events || {}\"\n                            @close=\"close\" />\n                    </slot>\n                </div>\n            </transition>\n        </div>\n    </Teleport>\n</template>\n","import {\n    type Component,\n    type ComponentInternalInstance,\n    type MaybeRefOrGetter,\n} from \"vue\";\nimport {\n    InstanceRegistry,\n    ComponentProgrammatic,\n    type ProgrammaticComponentOptions,\n    type ProgrammaticExpose,\n} from \"../programmatic\";\n\nimport Sidebar from \"./Sidebar.vue\";\n\nimport type { SidebarProps } from \"./props\";\n\ndeclare module \"../../index\" {\n    interface OrugaProgrammatic {\n        sidebar: typeof SidebarProgrammatic;\n    }\n}\n\n/** sidebar component programmatic instance registry */\nconst registry = new InstanceRegistry<ComponentInternalInstance>();\n\n/** useSidebarProgrammatic composable options */\nexport type SidebarProgrammaticOptions<C extends Component> = Readonly<\n    SidebarProps<C>\n> &\n    ProgrammaticComponentOptions;\n\nconst SidebarProgrammatic = {\n    /** Returns the number of registered active instances. */\n    count: registry.count,\n    /**\n     * Create a new programmatic sidebar component instance.\n     * @param options sidebar component props object\n     * @param target specify a target the component get rendered into - default is `document.body`\n     * @returns ProgrammaticExpose\n     */\n    open<C extends Component>(\n        options: SidebarProgrammaticOptions<C>,\n        target?: MaybeRefOrGetter<string | HTMLElement | null>,\n    ): ProgrammaticExpose {\n        const componentProps: SidebarProps<C> = {\n            active: true, // set the active default state to true\n            ...options,\n        };\n\n        // create programmatic component\n        return ComponentProgrammatic.open(Sidebar, {\n            registry, // custom programmatic instance registry\n            target, // target the component get rendered into\n            props: componentProps, // component specific props\n            onClose: options.onClose, // on close event handler\n        });\n    },\n    /** Close the last registred instance in the sidebar programmatic instance registry. */\n    close(...args: unknown[]): void {\n        registry.last()?.exposed?.close(...args);\n    },\n    /** Close all instances in the programmatic sidebar instance registry. */\n    closeAll(...args: unknown[]): void {\n        registry.walk((entry) => entry.exposed?.close(...args));\n    },\n};\n\nexport default SidebarProgrammatic;\n","import type { App, Plugin } from \"vue\";\n\nimport Sidebar from \"./Sidebar.vue\";\nimport SidebarProgrammatic from \"./useSidebarProgrammatic\";\n\nimport {\n    registerComponent,\n    registerComponentProgrammatic,\n} from \"@/utils/plugins\";\n\n/** export sidebar specific types */\nexport type { SidebarProgrammaticOptions } from \"./useSidebarProgrammatic\";\n\n/** export sidebar plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Sidebar);\n        registerComponentProgrammatic(app, \"sidebar\", SidebarProgrammatic);\n    },\n} as Plugin;\n\n/** export sidebar components & composables */\nexport { Sidebar as OSidebar, SidebarProgrammatic };\n","<script setup lang=\"ts\">\nimport { ref, computed, watch, nextTick, useId, type Component } from \"vue\";\n\nimport PositionWrapper from \"../utils/PositionWrapper.vue\";\n\nimport { getDefault } from \"@/utils/config\";\nimport { isClient } from \"@/utils/ssr\";\nimport { defineClasses, useClickOutside } from \"@/composables\";\n\nimport type { TooltipProps } from \"./props\";\n\n/**\n * Display a brief helper text to your user.\n * @displayName Tooltip\n * @style _tooltip.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OTooltip\",\n    configField: \"tooltip\",\n});\n\nconst props = withDefaults(defineProps<TooltipProps>(), {\n    override: undefined,\n    active: false,\n    label: undefined,\n    variant: () => getDefault(\"tooltip.variant\"),\n    position: () => getDefault(\"tooltip.position\", \"auto\"),\n    always: false,\n    disabled: false,\n    animation: () => getDefault(\"tooltip.animation\", \"fade\"),\n    multiline: false,\n    triggerTag: () => getDefault(\"tooltip.triggerTag\", \"div\"),\n    triggers: () => getDefault(\"tooltip.triggers\", [\"hover\", \"focus\"]),\n    delay: undefined,\n    closeable: () =>\n        getDefault(\"tooltip.closeable\", [\"escape\", \"outside\", \"content\"]),\n    teleport: () => getDefault(\"dropdown.teleport\", false),\n});\n\nconst emits = defineEmits<{\n    /**\n     * active prop two-way binding\n     * @param value {boolean} - updated active prop\n     */\n    \"update:active\": [value: boolean];\n    /** on active change to false event */\n    close: [];\n    /** on active change to true event */\n    open: [];\n}>();\n\nconst isActive = defineModel<boolean>(\"active\", { default: false });\n\nwatch(isActive, (value) => {\n    if (value) emits(\"open\");\n    else emits(\"close\");\n});\n\nconst tooltipId = useId();\n\nconst timer = ref();\n\nconst autoPosition = ref(props.position);\n\n/** update autoPosition on prop change */\nwatch(\n    () => props.position,\n    (v) => (autoPosition.value = v),\n);\n\n// --- Event Handler ---\n\nconst contentRef = ref<HTMLElement | Component>();\nconst triggerRef = ref<HTMLElement>();\n\nconst cancelOptions = computed<string[]>(() =>\n    typeof props.closeable === \"boolean\"\n        ? props.closeable\n            ? [\"escape\", \"outside\", \"content\"]\n            : []\n        : props.closeable,\n);\n\n// set click outside handler\nif (isClient && cancelOptions.value.includes(\"outside\")) {\n    useClickOutside([contentRef, triggerRef], onClickedOutside, {\n        trigger: isActive,\n        passive: true,\n    });\n}\n\n/** Close tooltip if clicked outside. */\nfunction onClickedOutside(): void {\n    if (!isActive.value || props.always) return;\n    if (!cancelOptions.value.includes(\"outside\")) return;\n    isActive.value = false;\n}\n\n/** Escape keydown event that is bound to the trigger */\nfunction onEscape(): void {\n    if (!isActive.value) return;\n    if (!cancelOptions.value.includes(\"escape\")) return;\n    isActive.value = false;\n}\n\nfunction onClick(): void {\n    if (!props.triggers.includes(\"click\")) return;\n    // if not active, toggle after clickOutside event\n    // this fixes toggling programmatic\n    nextTick(() => setTimeout(() => open()));\n}\n\nfunction onContextMenu(event: Event): void {\n    if (!props.triggers.includes(\"contextmenu\")) return;\n    event.preventDefault();\n    open();\n}\n\nfunction onFocus(): void {\n    if (!props.triggers.includes(\"focus\")) return;\n    open();\n}\n\nfunction onHover(): void {\n    if (!props.triggers.includes(\"hover\")) return;\n    open();\n}\n\nfunction open(): void {\n    if (props.disabled) return;\n    if (props.delay) {\n        timer.value = setTimeout(() => {\n            isActive.value = true;\n            timer.value = null;\n        }, props.delay);\n    } else {\n        isActive.value = true;\n    }\n}\n\nfunction onClose(): void {\n    if (!cancelOptions.value.includes(\"content\")) return;\n    isActive.value = !props.closeable;\n    if (timer.value && props.closeable) clearTimeout(timer.value);\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-tooltip\"],\n    [\n        \"teleportClass\",\n        \"o-tooltip--teleport\",\n        null,\n        computed(() => !!props.teleport),\n    ],\n);\n\nconst triggerClasses = defineClasses([\"triggerClass\", \"o-tooltip__trigger\"]);\n\nconst contentClasses = defineClasses(\n    [\"contentClass\", \"o-tooltip__content\"],\n    [\n        \"positionClass\",\n        \"o-tooltip__content--\",\n        autoPosition,\n        computed(() => !!autoPosition.value),\n    ],\n    [\n        \"variantClass\",\n        \"o-tooltip__content--\",\n        computed(() => props.variant),\n        computed(() => !!props.variant),\n    ],\n    [\n        \"multilineClass\",\n        \"o-tooltip__content--multiline\",\n        null,\n        computed(() => props.multiline),\n    ],\n    [\n        \"alwaysClass\",\n        \"o-tooltip__content--always\",\n        null,\n        computed(() => props.always),\n    ],\n);\n\nconst arrowClasses = defineClasses(\n    [\"arrowClass\", \"o-tooltip__arrow\"],\n    [\n        \"arrowPositionClass\",\n        \"o-tooltip__arrow--\",\n        autoPosition,\n        computed(() => !!autoPosition.value),\n    ],\n    [\n        \"arrowVariantClass\",\n        \"o-tooltip__arrow--\",\n        computed(() => props.variant),\n        computed(() => !!props.variant),\n    ],\n);\n</script>\n\n<template>\n    <div data-oruga=\"tooltip\" :class=\"rootClasses\">\n        <component\n            :is=\"triggerTag\"\n            ref=\"triggerRef\"\n            :class=\"triggerClasses\"\n            aria-haspopup=\"true\"\n            :aria-describedby=\"tooltipId\"\n            @keydown.escape=\"onEscape\"\n            @click=\"onClick\"\n            @contextmenu=\"onContextMenu\"\n            @mouseenter=\"onHover\"\n            @focus.capture=\"onFocus\"\n            @blur.capture=\"onClose\"\n            @mouseleave=\"onClose\">\n            <!--\n                @slot Tooltip trigger slot\n                @binding {boolean} active - tooltip active state\n            -->\n            <slot :active=\"isActive\" />\n        </component>\n\n        <PositionWrapper\n            v-slot=\"{ setContent }\"\n            v-model:position=\"autoPosition\"\n            :teleport=\"teleport\"\n            :class=\"rootClasses\"\n            :trigger=\"triggerRef\"\n            default-position=\"top\"\n            :disabled=\"!isActive\">\n            <transition :name=\"animation\">\n                <div\n                    v-show=\"isActive || (always && !disabled)\"\n                    :id=\"tooltipId\"\n                    :ref=\"(el) => (contentRef = setContent(el as HTMLElement))\"\n                    :class=\"contentClasses\"\n                    role=\"tooltip\">\n                    <span :class=\"arrowClasses\"></span>\n\n                    <!--\n                        @slot Tooltip content, default is label prop\n                    -->\n                    <slot name=\"content\">{{ label }}</slot>\n                </div>\n            </transition>\n        </PositionWrapper>\n    </div>\n</template>\n","<script setup lang=\"ts\" generic=\"IsRange extends boolean = false\">\nimport { computed, ref } from \"vue\";\n\nimport OTooltip from \"../tooltip/Tooltip.vue\";\n\nimport { isClient } from \"@/utils/ssr\";\n\nimport { injectField } from \"../field/fieldInjection\";\n\nimport type { SliderProps } from \"./props\";\nimport type { ClassBind, WithRequired } from \"@/types\";\n\n/**\n * @displayName Slider Thumb\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OSliderThumb\",\n    configField: \"slider\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps<{\n    /** parent slider component props  */\n    sliderProps: WithRequired<SliderProps<IsRange>, \"min\" | \"max\" | \"step\">;\n    modelValue: number;\n    sliderSize: () => number;\n    thumbWrapperClasses: ClassBind[];\n    thumbClasses: ClassBind[];\n}>();\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {number | number[]} updated modelValue prop\n     */\n    \"update:model-value\": [value: number | number[]];\n    /** on value change event */\n    change: [];\n    /** on drag start event */\n    dragstart: [];\n    /** on drag end event */\n    dragend: [];\n}>();\n\n// inject parent field component if used inside one\nconst { parentField } = injectField();\n\nconst isFocused = ref(false);\nconst dragging = ref(false);\nconst startX = ref(0);\nconst startPosition = ref(0);\nconst newPosition = ref<number>();\nconst oldValue = ref(props.modelValue);\n\nconst tooltip = computed(() => props.sliderProps.tooltip);\nconst tooltipAlways = computed(() => props.sliderProps.tooltipAlways);\nconst disabled = computed(() => props.sliderProps.disabled);\nconst max = computed(() => props.sliderProps.max);\nconst min = computed(() => props.sliderProps.min);\nconst step = computed(() => props.sliderProps.step);\nconst indicator = computed(() => props.sliderProps.indicator);\nconst ariaLabel = computed(() => props.sliderProps.ariaLabel);\n\nconst precision = computed(() => {\n    const precisions = [min.value, max.value, step.value].map((item) => {\n        const decimal = (\"\" + item).split(\".\")[1];\n        return decimal ? decimal.length : 0;\n    });\n    return Math.max(...precisions);\n});\n\nconst computedTooltipVariant = computed(() =>\n    props.sliderProps.tooltipVariant\n        ? props.sliderProps.tooltipVariant\n        : props.sliderProps.variant,\n);\n\nconst currentPosition = computed(\n    () =>\n        `${((props.modelValue - min.value) / (max.value - min.value)) * 100}%`,\n);\n\nconst wrapperStyle = computed(() => ({ left: currentPosition.value }));\n\nconst formattedValue = computed(() => {\n    if (typeof props.sliderProps.formatter !== \"undefined\")\n        return props.sliderProps.formatter(props.modelValue);\n\n    if (props.sliderProps.format === \"percent\")\n        return new Intl.NumberFormat(props.sliderProps.locale, {\n            style: \"percent\",\n        }).format((props.modelValue - min.value) / (max.value - min.value));\n\n    return new Intl.NumberFormat(props.sliderProps.locale).format(\n        props.modelValue,\n    );\n});\n\nfunction onFocus(): void {\n    isFocused.value = true;\n}\n\nfunction onBlur(): void {\n    isFocused.value = false;\n}\n\nfunction onButtonDown(event): void {\n    if (disabled.value) return;\n    event.preventDefault();\n    onDragStart(event);\n\n    if (isClient) {\n        document.addEventListener(\"mousemove\", onDragging);\n        document.addEventListener(\"touchmove\", onDragging);\n        document.addEventListener(\"mouseup\", onDragEnd);\n        document.addEventListener(\"touchend\", onDragEnd);\n        document.addEventListener(\"contextmenu\", onDragEnd);\n    }\n}\n\nfunction onLeftKeyDown(): void {\n    if (disabled.value || props.modelValue === min.value) return;\n    newPosition.value =\n        parseFloat(currentPosition.value) -\n        (step.value / (max.value - min.value)) * 100;\n    setPosition(newPosition.value);\n    emits(\"change\");\n}\n\nfunction onRightKeyDown(): void {\n    if (disabled.value || props.modelValue === max.value) return;\n    newPosition.value =\n        parseFloat(currentPosition.value) +\n        (step.value / (max.value - min.value)) * 100;\n    setPosition(newPosition.value);\n    emits(\"change\");\n}\n\nfunction onHomeKeyDown(): void {\n    if (disabled.value || props.modelValue === min.value) return;\n    newPosition.value = 0;\n    setPosition(newPosition.value);\n    emits(\"change\");\n}\n\nfunction onEndKeyDown(): void {\n    if (disabled.value || props.modelValue === max.value) return;\n    newPosition.value = 100;\n    setPosition(newPosition.value);\n    emits(\"change\");\n}\n\nfunction onDragStart(event): void {\n    dragging.value = true;\n    emits(\"dragstart\");\n    if (event.type === \"touchstart\") event.clientX = event.touches[0].clientX;\n\n    startX.value = event.clientX;\n    startPosition.value = parseFloat(currentPosition.value);\n    newPosition.value = startPosition.value;\n}\n\nfunction onDragging(event): void {\n    if (dragging.value) {\n        if (event.type === \"touchmove\")\n            event.clientX = event.touches[0].clientX;\n\n        const diff =\n            ((event.clientX - startX.value) / props.sliderSize()) * 100;\n        newPosition.value = startPosition.value + diff;\n        setPosition(newPosition.value);\n    }\n}\n\nfunction onDragEnd(): void {\n    dragging.value = false;\n    emits(\"dragend\");\n    if (props.modelValue !== oldValue.value) emits(\"change\");\n\n    setPosition(newPosition.value);\n    if (isClient) {\n        document.removeEventListener(\"mousemove\", onDragging);\n        document.removeEventListener(\"touchmove\", onDragging);\n        document.removeEventListener(\"mouseup\", onDragEnd);\n        document.removeEventListener(\"touchend\", onDragEnd);\n        document.removeEventListener(\"contextmenu\", onDragEnd);\n    }\n}\n\nfunction setPosition(percent: number | undefined): void {\n    if (percent === undefined || isNaN(percent)) return;\n    if (percent < 0) percent = 0;\n    else if (percent > 100) percent = 100;\n\n    const stepLength = 100 / ((max.value - min.value) / step.value);\n    const steps = Math.round(percent / stepLength);\n    let value =\n        ((steps * stepLength) / 100) * (max.value - min.value) + min.value;\n    value = parseFloat(value.toFixed(precision.value));\n    emits(\"update:model-value\", value);\n\n    if (!dragging.value && value !== oldValue.value) oldValue.value = value;\n}\n\ndefineExpose({ setPosition });\n</script>\n\n<template>\n    <div\n        data-oruga=\"slider-thumb\"\n        :class=\"thumbWrapperClasses\"\n        :style=\"wrapperStyle\">\n        <o-tooltip\n            :label=\"formattedValue\"\n            :variant=\"computedTooltipVariant\"\n            :disabled=\"disabled || !tooltip\"\n            :always=\"tooltipAlways || dragging || isFocused\">\n            <div\n                v-bind=\"$attrs\"\n                :class=\"thumbClasses\"\n                :tabindex=\"disabled ? undefined : 0\"\n                role=\"slider\"\n                :aria-label=\"ariaLabel\"\n                :aria-labelledby=\"parentField?.labelId\"\n                :aria-valuenow=\"modelValue\"\n                :aria-valuemin=\"min\"\n                :aria-valuemax=\"max\"\n                :aria-disabled=\"disabled\"\n                aria-orientation=\"horizontal\"\n                @mousedown=\"onButtonDown\"\n                @touchstart.passive=\"onButtonDown\"\n                @focus=\"onFocus\"\n                @blur=\"onBlur\"\n                @keydown.left.prevent=\"onLeftKeyDown\"\n                @keydown.right.prevent=\"onRightKeyDown\"\n                @keydown.down.prevent=\"onLeftKeyDown\"\n                @keydown.up.prevent=\"onRightKeyDown\"\n                @keydown.home.prevent=\"onHomeKeyDown\"\n                @keydown.end.prevent=\"onEndKeyDown\">\n                <span v-if=\"indicator\">{{ formattedValue }}</span>\n            </div>\n        </o-tooltip>\n    </div>\n</template>\n","<script setup lang=\"ts\">\nimport { computed, type PropType } from \"vue\";\nimport { defineClasses, useProviderChild } from \"@/composables\";\n\nimport type { SliderComponent } from \"./types\";\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * @displayName Slider Tick\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OSliderTick\",\n    configField: \"slider\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Value of single tick */\n    value: { type: Number, required: true },\n    /** Tick label */\n    label: { type: [String, Number], default: undefined },\n    tickClass: {\n        type: [String, Function, Array] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when slider tick is hidden */\n    tickHiddenClass: {\n        type: [String, Function, Array] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of tick label */\n    tickLabelClass: {\n        type: [String, Function, Array] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\n/** inject functionalities and data from the parent component */\nconst { parent } = useProviderChild<SliderComponent>({ register: false });\n\nconst position = computed(() => {\n    const pos =\n        ((props.value - parent.value.min) /\n            (parent.value.max - parent.value.min)) *\n        100;\n    return pos >= 0 && pos <= 100 ? pos : 0;\n});\n\nconst hidden = computed(\n    () => props.value === parent.value.min || props.value === parent.value.max,\n);\n\nconst tickStyle = computed(() => ({ left: position.value + \"%\" }));\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"tickClass\", \"o-slider__tick\"],\n    [\"tickHiddenClass\", \"o-slider__tick--hidden\", null, hidden],\n);\n\nconst tickLabelClasses = defineClasses([\n    \"tickLabelClass\",\n    \"o-slider__tick-label\",\n]);\n</script>\n\n<template>\n    <div data-oruga=\"slider-tick\" :class=\"rootClasses\" :style=\"tickStyle\">\n        <span v-if=\"$slots.default || label\" :class=\"tickLabelClasses\">\n            <!-- \n                @slot Override tick content, default is label prop\n             -->\n            <slot> {{ label }} </slot>\n        </span>\n    </div>\n</template>\n","<script setup lang=\"ts\" generic=\"IsRange extends boolean = false\">\nimport { computed, ref, useTemplateRef, watch } from \"vue\";\n\nimport OSliderThumb from \"./SliderThumb.vue\";\nimport OSliderTick from \"./SliderTick.vue\";\n\nimport { getDefault } from \"@/utils/config\";\nimport { isTrueish } from \"@/utils/helpers\";\nimport { defineClasses, useProviderParent } from \"@/composables\";\n\nimport type { SliderComponent } from \"./types\";\nimport type { SliderProps } from \"./props\";\n\n/**\n * A slider to select a value or range from a given range.\n * @displayName Slider\n * @requires ./SliderTick.vue\n * @style _slider.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OSlider\",\n    configField: \"slider\",\n});\n\ntype ModelValue = SliderProps<IsRange>[\"modelValue\"];\n\nconst props = withDefaults(defineProps<SliderProps<IsRange>>(), {\n    override: undefined,\n    modelValue: undefined,\n    // range: false,\n    min: 0,\n    max: 100,\n    step: 1,\n    variant: () => getDefault(\"slider.variant\"),\n    size: () => getDefault(\"slider.size\"),\n    ticks: false,\n    tooltip: () => getDefault(\"slider.tooltip\", true),\n    tooltipVariant: () => getDefault(\"slider.tooltipVariant\"),\n    tooltipAlways: false,\n    rounded: () => getDefault(\"slider.rounded\", false),\n    disabled: false,\n    lazy: false,\n    formatter: undefined,\n    biggerSliderFocus: false,\n    indicator: false,\n    format: () => getDefault(\"slider.format\", \"raw\"),\n    locale: () => getDefault(\"locale\"),\n    ariaLabel: () => getDefault(\"slider.ariaLabel\"),\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {number | number[]} updated modelValue prop\n     */\n    \"update:model-value\": [value: ModelValue];\n    /**\n     * on value change event\n     * @param value {number | number[]} updated modelValue prop\n     */\n    change: [value: ModelValue];\n    /**\n     * on dragging event\n     * @param value {number | number[]} updated modelValue prop\n     * */\n    dragging: [value: ModelValue];\n    /** on drag start event */\n    dragstart: [];\n    /** on drag end event */\n    dragend: [];\n}>();\n\nconst sliderRef = useTemplateRef(\"sliderElement\");\nconst thumbStartRef = useTemplateRef(\"thumbStartComponent\");\nconst thumbEndRef = useTemplateRef(\"thumbEndComponent\");\n\n// provided data is a computed ref to ensure reactivity\nconst provideData = computed<SliderComponent>(() => ({\n    max: props.max,\n    min: props.min,\n}));\n\n/** provide functionalities and data to child item components */\nuseProviderParent({ data: provideData });\n\nconst valueStart = ref<number>(0);\nconst valueEnd = ref<number>(0);\nconst dragging = ref(false);\n\nconst isThumbReversed = ref();\nconst isTrackClickDisabled = ref();\n\nconst minValue = computed(() =>\n    Math.min(valueStart.value || props.min, valueEnd.value || props.max),\n);\n\nconst maxValue = computed(() =>\n    Math.max(valueStart.value || props.min, valueEnd.value || props.max),\n);\n\nconst isRange = computed(() => isTrueish(props.range));\n\nconst vmodel = computed<ModelValue>(\n    () =>\n        (isRange.value\n            ? [minValue.value, maxValue.value]\n            : valueStart.value || 0) as ModelValue,\n);\n\n/** update vmodel value on internal value change */\nwatch([valueStart, valueEnd], () => {\n    if (isRange.value)\n        isThumbReversed.value =\n            valueStart.value && valueEnd.value\n                ? valueStart.value > valueEnd.value\n                : false;\n    if (!props.lazy || !dragging.value)\n        emits(\"update:model-value\", vmodel.value); // update external vmodel\n    if (dragging.value) emits(\"dragging\", vmodel.value);\n});\n\n/** When min, max or v-model is changed set the new active step. */\nwatch(\n    [() => props.min, () => props.max, () => props.modelValue],\n    () => setValues(props.modelValue),\n    { immediate: true }, // initialise valueStart and valueEnd\n);\n\nfunction setValues(newValue: number | number[] | undefined): void {\n    if (props.min > props.max) return;\n\n    if (Array.isArray(newValue)) {\n        const smallValue =\n            typeof newValue[0] !== \"number\" || isNaN(newValue[0])\n                ? props.min\n                : Math.min(Math.max(props.min, newValue[0]), props.max);\n        const largeValue =\n            typeof newValue[1] !== \"number\" || isNaN(newValue[1])\n                ? props.max\n                : Math.max(Math.min(props.max, newValue[1]), props.min);\n        valueStart.value = isThumbReversed.value ? largeValue : smallValue;\n        valueEnd.value = isThumbReversed.value ? smallValue : largeValue;\n    } else if (newValue !== undefined) {\n        valueStart.value = isNaN(newValue)\n            ? props.min\n            : Math.min(props.max, Math.max(props.min, newValue));\n        valueEnd.value = 0;\n    } else {\n        valueStart.value = props.min;\n        valueEnd.value = props.min;\n    }\n}\n\nconst tickValues = computed(() => {\n    if (!props.ticks || props.min > props.max || props.step === 0) return [];\n    const result: number[] = [];\n    for (let i = props.min + props.step; i < props.max; i = i + props.step) {\n        result.push(i);\n    }\n    return result;\n});\n\nconst barSize = computed(() =>\n    isRange.value\n        ? `${\n              (100 * (maxValue.value - minValue.value)) /\n              (props.max - props.min)\n          }%`\n        : `${\n              (100 * (valueStart.value - props.min)) / (props.max - props.min)\n          }%`,\n);\n\nconst barStart = computed(() =>\n    isRange.value\n        ? `${(100 * (minValue.value - props.min)) / (props.max - props.min)}%`\n        : \"0%\",\n);\n\nconst barStyle = computed(() => ({\n    width: barSize.value,\n    left: barStart.value,\n}));\n\nfunction getSliderSize(): number {\n    return sliderRef.value?.getBoundingClientRect().width || 0;\n}\n\nfunction onSliderClick(event: MouseEvent): void {\n    if (props.disabled || isTrackClickDisabled.value) return;\n    if (\n        !sliderRef.value ||\n        !thumbStartRef.value ||\n        (isRange.value && !thumbEndRef.value)\n    )\n        return;\n\n    const sliderOffsetLeft = sliderRef.value.getBoundingClientRect().left;\n    const percent =\n        ((event.clientX - sliderOffsetLeft) / getSliderSize()) * 100;\n    const targetValue = props.min + (percent * (props.max - props.min)) / 100;\n    const diffFirst = Math.abs(targetValue - valueStart.value);\n    if (!isRange.value) {\n        if (diffFirst < props.step / 2) return;\n        thumbStartRef.value.setPosition(percent);\n    } else {\n        const diffSecond = Math.abs(targetValue - valueEnd.value);\n        if (diffFirst <= diffSecond) {\n            if (diffFirst < props.step / 2) return;\n            thumbStartRef.value.setPosition(percent);\n        } else {\n            if (diffSecond < props.step / 2) return;\n            if (isRange.value && thumbEndRef.value)\n                thumbEndRef.value.setPosition(percent);\n        }\n    }\n    emits(\"change\", vmodel.value);\n}\n\nfunction onDragStart(): void {\n    dragging.value = true;\n    emits(\"dragstart\");\n}\n\nfunction onDragEnd(): void {\n    isTrackClickDisabled.value = true;\n    // avoid triggering onSliderClick after dragend\n    setTimeout(() => (isTrackClickDisabled.value = false));\n    dragging.value = false;\n    emits(\"dragend\");\n    if (props.lazy) emits(\"update:model-value\", vmodel.value);\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-slider\"],\n    [\n        \"sizeClass\",\n        \"o-slider--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\n        \"disabledClass\",\n        \"o-slider--disabled\",\n        null,\n        computed(() => props.disabled),\n    ],\n);\n\nconst trackClasses = defineClasses([\"trackClass\", \"o-slider__track\"]);\n\nconst fillClasses = defineClasses(\n    [\"fillClass\", \"o-slider__fill\"],\n    [\n        \"variantClass\",\n        \"o-slider__fill--\",\n        computed(() => props.variant),\n        computed(() => !!props.variant),\n    ],\n);\n\nconst thumbWrapperClasses = defineClasses(\n    [\"thumbWrapperClass\", \"o-slider__thumb-wrapper\"],\n    [\n        \"thumbWrapperDraggingClass\",\n        \"o-slider__thumb-wrapper--dragging\",\n        null,\n        dragging,\n    ],\n);\n\nconst thumbClasses = defineClasses(\n    [\"thumbClass\", \"o-slider__thumb\"],\n    [\"thumbDraggingClass\", \"o-slider__thumb--dragging\", null, dragging],\n    [\n        \"thumbRoundedClass\",\n        \"o-slider__thumb--rounded\",\n        null,\n        computed(() => props.rounded),\n    ],\n);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ value: vmodel });\n</script>\n\n<template>\n    <div data-oruga=\"slider\" :class=\"rootClasses\" @click=\"onSliderClick\">\n        <div ref=\"sliderElement\" :class=\"trackClasses\">\n            <div :class=\"fillClasses\" :style=\"barStyle\" />\n\n            <template v-if=\"ticks\">\n                <o-slider-tick\n                    v-for=\"(val, key) in tickValues\"\n                    :key=\"key\"\n                    :value=\"val\"\n                    :tick-class=\"tickClass\"\n                    :tick-hidden-class=\"tickHiddenClass\"\n                    :tick-label-class=\"tickLabelClass\" />\n            </template>\n\n            <!--\n                @slot Define additional slider ticks here\n             -->\n            <slot />\n\n            <o-slider-thumb\n                ref=\"thumbStartComponent\"\n                v-model=\"valueStart\"\n                :slider-props=\"props\"\n                :slider-size=\"getSliderSize\"\n                :thumb-classes=\"thumbClasses\"\n                :thumb-wrapper-classes=\"thumbWrapperClasses\"\n                @change=\"emits('change', vmodel)\"\n                @dragstart=\"onDragStart\"\n                @dragend=\"onDragEnd\" />\n\n            <o-slider-thumb\n                v-if=\"isRange\"\n                ref=\"thumbEndComponent\"\n                v-model=\"valueEnd\"\n                :slider-props=\"props\"\n                :slider-size=\"getSliderSize\"\n                :thumb-classes=\"thumbClasses\"\n                :thumb-wrapper-classes=\"thumbWrapperClasses\"\n                @change=\"emits('change', vmodel)\"\n                @dragstart=\"onDragStart\"\n                @dragend=\"onDragEnd\" />\n        </div>\n    </div>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Slider from \"./Slider.vue\";\nimport SliderTick from \"./SliderTick.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export slider specific types */\nexport type * from \"./types\";\n\n/** export slider plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Slider);\n        registerComponent(app, SliderTick);\n    },\n} as Plugin;\n\n/** export slider components */\nexport { Slider as OSlider, SliderTick as OSliderTick };\n","<script setup lang=\"ts\" generic=\"T, C extends Component\">\nimport { computed, ref, useSlots, useId, type Component } from \"vue\";\n\nimport { getDefault } from \"@/utils/config\";\nimport { defineClasses, useProviderChild } from \"@/composables\";\n\nimport type { StepsComponent, StepItemComponent } from \"./types\";\nimport type { StepItemProps } from \"./props\";\n\n/**\n * An step item used by the steps component.\n * @displayName Step Item\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OStepItem\",\n    configField: \"steps\",\n    inheritAttrs: false,\n});\n\nconst props = withDefaults(defineProps<StepItemProps<T, C>>(), {\n    override: undefined,\n    value: undefined,\n    label: undefined,\n    step: undefined,\n    variant: undefined,\n    clickable: undefined,\n    disabled: false,\n    visible: true,\n    icon: () => getDefault(\"steps.icon\"),\n    iconPack: () => getDefault(\"steps.iconPack\"),\n    content: undefined,\n    component: undefined,\n    props: undefined,\n    events: undefined,\n});\n\nconst emits = defineEmits<{\n    /** on step item activate event */\n    activate: [];\n    /** on step item deactivate event */\n    deactivate: [];\n}>();\n\nconst itemValue = props.value ?? useId();\n\nconst slots = useSlots();\n\n// provided data is a computed ref to ensure reactivity\nconst providedData = computed<StepItemComponent<T>>(() => ({\n    ...props,\n    value: itemValue,\n    $slots: slots,\n    stepClasses: stepClasses.value,\n    iconClasses: stepIconClasses.value,\n    labelClasses: stepLabelClasses.value,\n    isClickable: isClickable.value,\n    isTransitioning: isTransitioning.value,\n    activate,\n    deactivate,\n}));\n\n/** inject functionalities and data from the parent component */\nconst { parent, item } = useProviderChild<StepsComponent, StepItemComponent<T>>(\n    { data: providedData },\n);\n\nconst transitionName = ref();\n\nconst isActive = computed(() => item.value.index === parent.value.activeIndex);\n\nconst isTransitioning = ref(false);\n\nconst nextAnimation = computed(() => {\n    const idx =\n        parent.value.vertical && parent.value.animation.length === 4 ? 2 : 0;\n    return parent.value.animation[idx];\n});\n\nconst prevAnimation = computed(() => {\n    const idx =\n        parent.value.vertical && parent.value.animation.length === 4 ? 3 : 1;\n    return parent.value.animation[idx];\n});\n\n/** shows if the step is clickable or not */\nconst isClickable = computed(\n    () => props.clickable || item.value.index < parent.value.activeIndex,\n);\n\n/** Activate element, alter animation name based on the index. */\nfunction activate(oldIndex: number): void {\n    transitionName.value =\n        item.value.index < oldIndex ? nextAnimation.value : prevAnimation.value;\n    // emit event\n    emits(\"activate\");\n}\n\n/** Deactivate element, alter animation name based on the index. */\nfunction deactivate(newIndex: number): void {\n    transitionName.value =\n        newIndex < item.value.index ? nextAnimation.value : prevAnimation.value;\n    // emit event\n    emits(\"deactivate\");\n}\n\n/** Transition after-enter hook */\nfunction afterEnter(): void {\n    isTransitioning.value = true;\n}\n\n/** Transition before-leave hook */\nfunction beforeLeave(): void {\n    isTransitioning.value = true;\n}\n\n// --- Computed Component Classes ---\n\nconst stepClasses = defineClasses(\n    [\"stepClass\", \"o-steps__step\"],\n    [\n        \"stepVariantClass\",\n        \"o-steps__step--\",\n        computed(() => parent.value?.variant || props.variant),\n        computed(() => !!parent.value?.variant || !!props.variant),\n    ],\n    [\"stepActiveClass\", \"o-steps__step--active\", null, isActive],\n    [\"stepClickableClass\", \"o-steps__step--clickable\", null, isClickable],\n    [\n        \"stepDisabledClass\",\n        \"o-steps__step--disabled\",\n        null,\n        computed(() => props.disabled),\n    ],\n    [\n        \"stepPreviousClass\",\n        \"o-steps__step--previous\",\n        null,\n        computed(() => item.value.index < parent.value?.activeIndex),\n    ],\n    [\n        \"stepNextClass\",\n        \"o-steps__step--next\",\n        null,\n        computed(() => item.value.index > parent.value?.activeIndex),\n    ],\n    [\n        \"stepPositionClass\",\n        \"o-steps__step--\",\n        computed(() => parent.value?.labelPosition),\n        computed(() => !!parent.value?.labelPosition),\n    ],\n);\n\nconst stepLabelClasses = defineClasses([\n    \"stepLabelClass\",\n    \"o-steps__step-label\",\n]);\n\nconst stepIconClasses = defineClasses([\"stepIconClass\", \"o-steps__step-icon\"]);\n\nconst panelClasses = defineClasses([\"stepPanelClass\", \"o-steps__panel\"]);\n</script>\n\n<template>\n    <Transition\n        v-if=\"parent\"\n        :css=\"parent.animated\"\n        :name=\"transitionName\"\n        :appear=\"parent.animateInitially\"\n        @after-enter=\"afterEnter\"\n        @before-leave=\"beforeLeave\">\n        <div\n            v-show=\"isActive && visible\"\n            v-bind=\"$attrs\"\n            :id=\"`tabpanel-${item.identifier}`\"\n            data-oruga=\"steps-item\"\n            :data-id=\"`steps-${item.identifier}`\"\n            :class=\"panelClasses\"\n            role=\"tabpanel\"\n            :hidden=\"!isActive\"\n            :aria-labelledby=\"`tab-${item.identifier}`\"\n            aria-roledescription=\"item\">\n            <!-- \n                @slot Step item content\n                @binding {boolean} active - if item is shown \n            -->\n            <slot :active=\"isActive && visible\">\n                <!-- injected component -->\n                <component\n                    :is=\"component\"\n                    v-if=\"component\"\n                    v-bind=\"$props.props\"\n                    v-on=\"$props.events || {}\" />\n\n                <!-- default content prop -->\n                <template v-else>{{ content }}</template>\n            </slot>\n        </div>\n    </Transition>\n</template>\n","<script setup lang=\"ts\" generic=\"T\">\nimport {\n    computed,\n    toValue,\n    nextTick,\n    ref,\n    watch,\n    watchEffect,\n    useTemplateRef,\n} from \"vue\";\n\nimport OStepItem from \"../steps/StepItem.vue\";\nimport OButton from \"../button/Button.vue\";\nimport OIcon from \"../icon/Icon.vue\";\n\nimport { getDefault } from \"@/utils/config\";\nimport { isDefined } from \"@/utils/helpers\";\nimport {\n    defineClasses,\n    normalizeOptions,\n    useProviderParent,\n    useMatchMedia,\n    useSequentialId,\n} from \"@/composables\";\n\nimport type { StepItem, StepItemComponent, StepsComponent } from \"./types\";\nimport type { StepsProps } from \"./props\";\n\n/**\n * Responsive horizontal process steps.\n * @displayName Steps\n * @requires ./StepItem.vue\n * @style _steps.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OSteps\",\n    configField: \"steps\",\n});\n\ntype ModelValue = StepsProps<T>[\"modelValue\"];\n\nconst props = withDefaults(defineProps<StepsProps<T>>(), {\n    override: undefined,\n    modelValue: undefined,\n    options: undefined,\n    variant: () => getDefault(\"steps.variant\"),\n    size: () => getDefault(\"steps.size\"),\n    vertical: false,\n    position: undefined,\n    iconPack: () => getDefault(\"steps.iconPack\"),\n    iconPrev: () => getDefault(\"steps.iconPrev\", \"chevron-left\"),\n    iconNext: () => getDefault(\"steps.iconNext\", \"chevron-right\"),\n    hasNavigation: true,\n    activateOnFocus: false,\n    animated: () => getDefault(\"steps.animated\", true),\n    animation: () =>\n        getDefault(\"steps.animation\", [\n            \"slide-next\",\n            \"slide-prev\",\n            \"slide-down\",\n            \"slide-up\",\n        ]),\n    animateInitially: () => getDefault(\"steps.animateInitially\", false),\n    labelPosition: () => getDefault(\"steps.labelPosition\", \"bottom\"),\n    rounded: true,\n    mobileBreakpoint: () => getDefault(\"steps.mobileBreakpoint\"),\n    ariaLabel: () => getDefault(\"steps.ariaLabel\"),\n    ariaNextLabel: () => getDefault(\"steps.ariaNextLabel\", \"Next\"),\n    ariaPreviousLabel: () => getDefault(\"steps.ariaPreviousLabel\", \"Previous\"),\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {T} updated modelValue prop\n     */\n    \"update:model-value\": [value: ModelValue];\n    /**\n     * on step change event\n     * @param value {T} new step value\n     * @param value {T} old step value\n     */\n    change: [newValue: ModelValue, oldValue: ModelValue];\n}>();\n\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\n\nconst rootRef = useTemplateRef(\"rootElement\");\n\n// provided data is a computed ref to ensure reactivity\nconst provideData = computed<StepsComponent>(() => ({\n    activeIndex: activeItem.value?.index ?? 0,\n    labelPosition: props.labelPosition,\n    vertical: props.vertical,\n    animated: props.animated,\n    animation: props.animation,\n    animateInitially: props.animateInitially,\n    variant: props.variant,\n}));\n\n/** provide functionalities and data to child item components */\nconst { childItems } = useProviderParent<StepItemComponent<T>>({\n    rootRef,\n    data: provideData,\n});\n\nconst items = computed<StepItem<T>[]>(() => {\n    if (!childItems.value) return [];\n    return childItems.value.map((column) => ({\n        index: column.index,\n        identifier: column.identifier,\n        ...toValue(column.data!),\n    }));\n});\n\n// create a unique id sequence\nconst { nextSequence } = useSequentialId();\n\n/** normalized programamtic options */\nconst groupedOptions = computed(() =>\n    normalizeOptions<T>(props.options, nextSequence),\n);\n\n/** The selected item value, use v-model to make it two-way binding */\nconst vmodel = defineModel<ModelValue>({ default: undefined });\n\n/** When v-model is changed set the new active step. */\nwatch(\n    () => props.modelValue,\n    (value) => {\n        if (vmodel.value !== value) performAction(value);\n    },\n);\n\n/** the active item */\nconst activeItem = ref<StepItem<T>>();\n\n// set the active item immediate and every time the vmodel changes\nwatchEffect(() => {\n    activeItem.value = isDefined(vmodel.value)\n        ? items.value.find((item) => item.value === vmodel.value) ||\n          items.value[0]\n        : items.value[0];\n});\n\nconst isTransitioning = computed(() =>\n    items.value.some((item) => item.isTransitioning),\n);\n\n// --- EVENT HANDLER ---\n\n/** Activate the item after or before the current active item. */\nfunction activateItem(fowardIndex: 1 | -1): void {\n    const index = (activeItem.value?.index ?? 0) + fowardIndex;\n    if (index < 0 || index >= items.value.length) return;\n    const item = items.value[index];\n    if (vmodel.value !== item.value) performAction(item.value);\n}\n\n/** Item click listener, emit input event and change active child. */\nfunction itemClick(item: StepItem<T>): void {\n    // determines if the step is clickable or not\n    if (!item.isClickable) return;\n    if (vmodel.value !== item.value) performAction(item.value);\n}\n\n/** Check if previous button is available. */\nconst hasPrev = computed(() =>\n    isDefined(getFirstViableIndex((activeItem.value?.index ?? 0) - 1, false)),\n);\n\n/** Check if next button is available. */\nconst hasNext = computed(() =>\n    isDefined(getFirstViableIndex((activeItem.value?.index ?? 0) + 1, true)),\n);\n\n/** Focus the next item if possible. */\nfunction onNext(index: number): void {\n    const viableIndex = getFirstViableIndex(index + 1, true);\n    if (isDefined(viableIndex)) moveFocus(viableIndex);\n}\n\n/** Focus the previous item if possible. */\nfunction onPrev(index: number): void {\n    const viableIndex = getFirstViableIndex(index - 1, false);\n    if (isDefined(viableIndex)) moveFocus(viableIndex);\n}\n\n/** Focus the first viable item. */\nfunction onHomePressed(): void {\n    const viableIndex = getFirstViableIndex(0, true);\n    if (isDefined(viableIndex)) moveFocus(viableIndex);\n}\n\n/** Focus the last viable item. */\nfunction onEndPressed(): void {\n    const viableIndex = getFirstViableIndex(items.value.length - 1, false);\n    if (isDefined(viableIndex)) moveFocus(viableIndex);\n}\n\n/** Set focus on a step item or click it if `activateOnFocus`. */\nfunction moveFocus(index: number): void {\n    if (index < 0 || index >= items.value.length) return;\n    const item = items.value[index];\n\n    if (props.activateOnFocus) {\n        itemClick(item);\n    } else {\n        const el = rootRef.value?.querySelector<HTMLElement>(\n            `#tab-${item.identifier}`,\n        );\n        el?.focus();\n    }\n}\n\n/**\n * Get the first 'viable' child, starting at startingIndex and in the direction specified\n * by the boolean parameter forward. In other words, first try to select the child at index\n * startingIndex, and if it is not visible or it is disabled, then go to the index in the\n * specified direction until either returning to startIndex or finding a viable child item.\n */\nfunction getFirstViableIndex(\n    startingIndex: number,\n    forward: boolean,\n): number | undefined {\n    const direction = forward ? 1 : -1;\n    let newIndex = startingIndex;\n    for (\n        ;\n        newIndex > 0 && newIndex < items.value.length;\n        newIndex += direction\n    ) {\n        const item = items.value[newIndex];\n        // Break if the item at this index is viable (not disabled and is visible)\n        if (item.visible && !item.disabled) break;\n    }\n\n    if (newIndex < 0 || newIndex >= items.value.length) return undefined;\n    return newIndex;\n}\n\n/** Activate next child and deactivate prev child */\nfunction performAction(newValue: ModelValue): void {\n    const oldValue = activeItem.value?.value;\n    const oldItem = activeItem.value;\n    const newItem =\n        items.value.find((item) => item.value === newValue) || items.value[0];\n\n    if (oldItem && newItem) {\n        oldItem.deactivate(newItem.index);\n        newItem.activate(oldItem.index);\n    }\n\n    nextTick(() => {\n        vmodel.value = newValue;\n        emits(\"change\", newValue, oldValue);\n    });\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-steps\"],\n    [\n        \"sizeClass\",\n        \"o-steps--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\n        \"variantClass\",\n        \"o-steps--\",\n        computed(() => props.variant),\n        computed(() => !!props.variant),\n    ],\n    [\n        \"verticalClass\",\n        \"o-steps--vertical\",\n        null,\n        computed(() => props.vertical),\n    ],\n    [\n        \"positionClass\",\n        \"o-steps--position-\",\n        computed(() => props.position),\n        computed(() => !!props.position && props.vertical),\n    ],\n    [\"mobileClass\", \"o-steps--mobile\", null, isMobile],\n);\n\nconst tablistClasses = defineClasses(\n    [\"listClass\", \"o-steps__list\"],\n    [\n        \"animatedClass\",\n        \"o-steps__list--animated\",\n        null,\n        computed(() => props.animated),\n    ],\n);\n\nconst dividerClasses = defineClasses([\"dividerClass\", \"o-steps__divider\"]);\n\nconst markerClasses = defineClasses(\n    [\"markerClass\", \"o-steps__marker\"],\n    [\n        \"markerRoundedClass\",\n        \"o-steps__marker--rounded\",\n        null,\n        computed(() => props.rounded),\n    ],\n);\n\nconst contentClasses = defineClasses(\n    [\"contentClass\", \"o-steps__content\"],\n    [\n        \"transitioningClass\",\n        \"o-steps__content-transitioning\",\n        null,\n        isTransitioning,\n    ],\n);\n\nconst navigationClasses = defineClasses([\n    \"navigationClass\",\n    \"o-steps__navigation\",\n]);\n</script>\n\n<template>\n    <div ref=\"rootElement\" data-oruga=\"steps\" :class=\"rootClasses\">\n        <ol\n            :class=\"tablistClasses\"\n            role=\"tablist\"\n            :aria-label=\"ariaLabel\"\n            :aria-orientation=\"vertical ? 'vertical' : 'horizontal'\">\n            <li\n                v-for=\"(childItem, index) in items\"\n                v-show=\"childItem.visible\"\n                :id=\"`tab-${childItem.identifier}`\"\n                :key=\"childItem.identifier\"\n                :class=\"childItem.stepClasses\"\n                role=\"tab\"\n                :tabindex=\"childItem.value === activeItem?.value ? 0 : -1\"\n                :aria-current=\"\n                    childItem.value === activeItem?.value ? 'step' : undefined\n                \"\n                :aria-controls=\"`tabpanel-${childItem.identifier}`\"\n                :aria-selected=\"childItem.value === activeItem?.value\"\n                @click=\"itemClick(childItem)\"\n                @keydown.enter.prevent=\"itemClick(childItem)\"\n                @keydown.space.prevent=\"itemClick(childItem)\"\n                @keydown.left.prevent=\"onPrev(childItem.index)\"\n                @keydown.right.prevent=\"onNext(childItem.index)\"\n                @keydown.home.prevent=\"onHomePressed\"\n                @keydown.end.prevent=\"onEndPressed\">\n                <span v-if=\"index > 0\" :class=\"dividerClasses\" />\n\n                <div :class=\"markerClasses\">\n                    <o-icon\n                        v-if=\"childItem.icon\"\n                        :class=\"childItem.iconClasses\"\n                        :icon=\"childItem.icon\"\n                        :pack=\"childItem.iconPack\"\n                        :size=\"size\" />\n                    <span v-else-if=\"childItem.step\">\n                        {{ childItem.step }}\n                    </span>\n                </div>\n\n                <div :class=\"childItem.labelClasses\">\n                    {{ childItem.label }}\n                </div>\n            </li>\n        </ol>\n\n        <section :class=\"contentClasses\">\n            <!--\n                @slot Place step items here\n            -->\n            <slot>\n                <o-step-item\n                    v-for=\"option in groupedOptions\"\n                    v-show=\"!option.hidden\"\n                    v-bind=\"option.attrs\"\n                    :key=\"option.key\"\n                    :value=\"option.value\"\n                    :label=\"option.label\" />\n            </slot>\n        </section>\n\n        <!--\n            @slot Override step navigation\n            @binding {{disabled: boolean, action: (): void }} previous - previous button configs\n            @binding {{disabled: boolean, action: (): void }} next - next button configs\n        -->\n        <slot\n            name=\"navigation\"\n            :previous=\"{ disabled: !hasPrev, action: () => activateItem(-1) }\"\n            :next=\"{ disabled: !hasNext, action: () => activateItem(1) }\">\n            <nav v-if=\"hasNavigation\" :class=\"navigationClasses\">\n                <o-button\n                    role=\"button\"\n                    :icon-left=\"iconPrev\"\n                    :icon-pack=\"iconPack\"\n                    icon-both\n                    :disabled=\"!hasPrev\"\n                    :aria-label=\"ariaPreviousLabel\"\n                    @click.prevent=\"activateItem(-1)\" />\n\n                <o-button\n                    role=\"button\"\n                    :icon-left=\"iconNext\"\n                    :icon-pack=\"iconPack\"\n                    icon-both\n                    :disabled=\"!hasNext\"\n                    :aria-label=\"ariaNextLabel\"\n                    @click.prevent=\"activateItem(1)\" />\n            </nav>\n        </slot>\n    </div>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Steps from \"./Steps.vue\";\nimport StepItem from \"./StepItem.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export steps specific types */\nexport type * from \"./types\";\n\n/** export steps plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Steps);\n        registerComponent(app, StepItem);\n    },\n} as Plugin;\n\n/** export steps components */\nexport { Steps as OSteps, StepItem as OStepItem };\n","<script setup lang=\"ts\" generic=\"T\">\nimport { computed, useAttrs, useId, useSlots, useTemplateRef } from \"vue\";\n\nimport { getDefault } from \"@/utils/config\";\nimport { defineClasses, useInputHandler } from \"@/composables\";\n\nimport { injectField } from \"../field/fieldInjection\";\n\nimport type { SwitchProps } from \"./props\";\n\n/**\n * Switch between two opposing states.\n * @displayName Switch\n * @style _switch.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OSwitch\",\n    configField: \"switch\",\n    inheritAttrs: false,\n});\n\nconst props = withDefaults(defineProps<SwitchProps<T>>(), {\n    override: undefined,\n    modelValue: undefined,\n    id: () => useId(),\n    label: undefined,\n    variant: () => getDefault(\"switch.variant\"),\n    passiveVariant: () => getDefault(\"switch.passiveVariant\"),\n    size: () => getDefault(\"switch.size\"),\n    position: () => getDefault(\"switch.right\", \"position\"),\n    rounded: () => getDefault(\"switch.rounded\", true),\n    required: false,\n    disabled: false,\n    name: undefined,\n    nativeValue: undefined,\n    trueValue: undefined,\n    falseValue: undefined,\n    autocomplete: () => getDefault(\"switch.autocomplete\", \"off\"),\n    useHtml5Validation: () => getDefault(\"useHtml5Validation\", true),\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {T} updated modelValue prop\n     */\n    \"update:model-value\": [value: T];\n    /**\n     * on input change event\n     * @param value {T} input value\n     * @param event {Event} native event\n     */\n    input: [value: T, event: Event];\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    focus: [event: Event];\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    blur: [event: Event];\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    invalid: [event: Event];\n}>();\n\nconst inputRef = useTemplateRef(\"inputElement\");\n\n// use form input functionalities\nconst { onBlur, onFocus, onInvalid, setFocus } = useInputHandler(\n    inputRef,\n    emits,\n    props,\n);\n\n// inject parent field component if used inside one\nconst { parentField } = injectField();\n\n// set field labelId or create a unique label id if a label is given\nconst labelId =\n    !!parentField.value || !!props.label || !!useSlots().default\n        ? parentField.value?.labelId || useId()\n        : undefined;\n\n// if no `label` is given and `id` is given set as `for` property on o-field wrapper\nif (!props.label && props.id) parentField.value?.setInputId(props.id);\n\nconst vmodel = defineModel<T>({ default: undefined });\n\nconst isChecked = computed(\n    () =>\n        vmodel.value === (props.trueValue ?? true) ||\n        (Array.isArray(vmodel.value) &&\n            vmodel.value.includes(props.nativeValue)),\n);\n\nfunction onInput(event: Event): void {\n    emits(\"input\", vmodel.value, event);\n}\n\n// --- Computed Component Classes ---\n\nconst attrs = useAttrs();\n\nconst inputBind = computed(() => ({\n    ...parentField.value?.inputAttrs,\n    ...attrs,\n}));\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-switch\"],\n    [\n        \"sizeClass\",\n        \"o-switch--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\n        \"variantClass\",\n        \"o-switch--\",\n        computed(() => props.variant),\n        computed(() => !!props.variant),\n    ],\n    [\n        \"passiveVariantClass\",\n        \"o-switch--\",\n        computed(() => props.passiveVariant + \"-passive\"),\n        computed(() => !!props.passiveVariant),\n    ],\n    [\n        \"positionClass\",\n        \"o-switch--\",\n        computed(() => props.position),\n        computed(() => !!props.position),\n    ],\n    [\n        \"disabledClass\",\n        \"o-switch--disabled\",\n        null,\n        computed(() => props.disabled),\n    ],\n    [\"roundedClass\", \"o-switch--rounded\", null, computed(() => props.rounded)],\n    [\"checkedClass\", \"o-switch--checked\", null, isChecked],\n);\n\nconst inputClasses = defineClasses([\"inputClass\", \"o-switch__input\"]);\n\nconst labelClasses = defineClasses([\"labelClass\", \"o-switch__label\"]);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: setFocus, value: vmodel });\n</script>\n\n<template>\n    <div data-oruga=\"switch\" :class=\"rootClasses\">\n        <input\n            v-bind=\"inputBind\"\n            :id=\"id\"\n            ref=\"inputElement\"\n            v-model=\"vmodel\"\n            type=\"checkbox\"\n            role=\"switch\"\n            data-oruga-input=\"switch\"\n            :class=\"inputClasses\"\n            :name=\"name\"\n            :value=\"nativeValue\"\n            :true-value=\"trueValue ?? true\"\n            :false-value=\"falseValue ?? false\"\n            :required=\"required\"\n            :disabled=\"disabled\"\n            :autocomplete=\"autocomplete\"\n            :aria-checked=\"isChecked\"\n            :aria-labelledby=\"labelId\"\n            @blur=\"onBlur\"\n            @focus=\"onFocus\"\n            @invalid=\"onInvalid\"\n            @change=\"onInput\" />\n\n        <label\n            v-if=\"label || $slots.default\"\n            :id=\"labelId\"\n            :for=\"id\"\n            :class=\"labelClasses\">\n            <!--\n                @slot Override the label, default is label prop \n            -->\n            <slot>{{ label }}</slot>\n        </label>\n    </div>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Switch from \"./Switch.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export switch plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Switch);\n    },\n} as Plugin;\n\n/** export switch components */\nexport { Switch as OSwitch };\n","import {\n    createVNode,\n    defineComponent,\n    type DefineComponent,\n    type VNode,\n    type VNodeTypes,\n} from \"vue\";\nimport type { ComponentProps } from \"vue-component-type-helpers\";\nimport type { DynamicComponent } from \"@/types\";\n\ntype SlotComponentProps<C extends VNodeTypes> = {\n    /** Component to be get the slot from */\n    component: C;\n    /** Props to be binded to the injected component. */\n    props?: ComponentProps<C>;\n    /**\n     * Slot name\n     * @default \"default\"\n     */\n    name?: string;\n    /**\n     * Tag name of the slot wrapper element\n     * @default \"div\"\n     */\n    tag?: DynamicComponent;\n};\n\n/** This components renders a specific slot and only the slot of another component */\nexport default defineComponent<SlotComponentProps<any>>(\n    <C extends DefineComponent>(props: SlotComponentProps<C>, { slots }) => {\n        const _props = { tag: \"div\", name: \"default\", ...props };\n\n        return (): VNode => {\n            const slot = props.component.$slots[_props.name]\n                ? props.component.$slots[_props.name](props.props)\n                : slots.default\n                  ? slots.default()\n                  : {};\n\n            return createVNode(_props.tag as VNode, {}, slot);\n        };\n    },\n    {\n        name: \"OSlotComponent\",\n        // manual runtime props declaration is currently still needed.\n        props: [\"component\", \"props\", \"name\", \"tag\"],\n    },\n);\n","<script setup lang=\"ts\" generic=\"T\">\nimport { computed, watch, ref, type PropType } from \"vue\";\n\nimport OButton from \"@/components/button/Button.vue\";\nimport OSelect from \"@/components/select/Select.vue\";\nimport OIcon from \"@/components/icon/Icon.vue\";\nimport OField from \"@/components/field/Field.vue\";\n\nimport type { TableColumnItem } from \"./types\";\nimport type { ClassBind } from \"@/types\";\n\ndefineOptions({\n    isOruga: true,\n    name: \"OTableMobileSort\",\n    configField: \"table\",\n});\n\nconst props = defineProps({\n    currentSortColumn: {\n        type: Object as PropType<TableColumnItem<T>>,\n        default: undefined,\n    },\n    columns: {\n        type: Array as PropType<TableColumnItem<T>[]>,\n        default: undefined,\n    },\n    placeholder: { type: String, default: undefined },\n    iconPack: { type: String, default: undefined },\n    sortIcon: { type: String, default: \"arrow-up\" },\n    sortIconSize: { type: String, default: \"small\" },\n    isAsc: { type: Boolean, default: false },\n    mobileSortClasses: { type: Array as PropType<ClassBind[]>, required: true },\n});\n\nconst emits = defineEmits<{\n    sort: [column: TableColumnItem<T>, event: Event];\n}>();\n\nconst mobileSort = ref<string | undefined>(props.currentSortColumn?.identifier);\n\nconst showPlaceholder = computed(\n    () =>\n        !props.columns ||\n        props.columns.every((column) => column.identifier !== mobileSort.value),\n);\n\nconst sortableColumns = computed(() =>\n    props.columns ? props.columns.filter((c) => c.sortable) : [],\n);\n\nconst isCurrentSort = computed(\n    () => props.currentSortColumn?.identifier === mobileSort.value,\n);\n\nwatch(mobileSort, (value) => {\n    if (props.currentSortColumn?.identifier === value) return;\n    sort(new Event(\"sort\"));\n});\n\nwatch(\n    () => props.currentSortColumn,\n    (column) => {\n        mobileSort.value = column?.identifier;\n    },\n);\n\nfunction sort(event: Event): void {\n    const column = sortableColumns.value.find(\n        (column) => column.identifier === mobileSort.value,\n    );\n    if (!column) return;\n    emits(\"sort\", column, event);\n}\n</script>\n\n<template>\n    <div :class=\"mobileSortClasses\">\n        <o-field addons>\n            <o-select v-model=\"mobileSort\" expanded>\n                <template v-if=\"placeholder\">\n                    <option\n                        v-show=\"showPlaceholder\"\n                        :value=\"{}\"\n                        selected\n                        disabled\n                        hidden>\n                        {{ placeholder }}\n                    </option>\n                </template>\n                <option\n                    v-for=\"(column, index) in sortableColumns\"\n                    :key=\"column.field || index\"\n                    :value=\"column.identifier\">\n                    {{ column.label }}\n                </option>\n            </o-select>\n\n            <o-button @click=\"sort($event)\">\n                <o-icon\n                    v-show=\"isCurrentSort\"\n                    :icon=\"sortIcon\"\n                    :pack=\"iconPack\"\n                    :size=\"sortIconSize\"\n                    both\n                    :rotation=\"!isAsc ? 180 : 0\" />\n            </o-button>\n        </o-field>\n    </div>\n</template>\n","<script setup lang=\"ts\" generic=\"T, K extends string\">\nimport { computed, getCurrentInstance } from \"vue\";\n\nimport { defineClasses, useProviderChild } from \"@/composables\";\nimport { toCssDimension } from \"@/utils/helpers\";\n\nimport type { TableColumnComponent, TableComponent } from \"./types\";\nimport type { TableColumnProps } from \"./props\";\n\n/**\n * Define a column used by the table component.\n * @displayName Table Column\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OTableColumn\",\n    configField: \"table\",\n});\n\nconst props = withDefaults(defineProps<TableColumnProps<T, K>>(), {\n    label: undefined,\n    field: undefined,\n    formatter: undefined,\n    subheading: undefined,\n    width: undefined,\n    numeric: false,\n    position: undefined,\n    searchable: false,\n    sortable: false,\n    hidden: false,\n    sticky: false,\n    headerSelectable: false,\n    customSort: undefined,\n    customSearch: undefined,\n    thAttrs: undefined,\n    tdAttrs: undefined,\n});\n\nconst style = computed(() => ({\n    width: toCssDimension(props.width),\n}));\n\nconst isHeaderUnselectable = computed(\n    () => !props.headerSelectable && props.sortable,\n);\n\nconst vm = getCurrentInstance();\n\n// provided data is a computed ref to ensure reactivity\nconst providedData = computed<TableColumnComponent<T>>(() => ({\n    ...props,\n    $el: vm!.proxy!,\n    $slots: vm!.slots,\n    style: style.value,\n    thClasses: thClasses.value,\n    tdClasses: tdClasses.value,\n}));\n\n/** inject functionalities and data from the parent component */\nconst { parent, item } = useProviderChild<\n    TableComponent,\n    TableColumnComponent<T>\n>({ data: providedData });\n\n// --- Computed Component Classes ---\n\nconst thClasses = defineClasses(\n    [\n        \"thCurrentSortClass\",\n        \"o-table__th-current-sort\",\n        null,\n        computed(() => parent.value?.isColumnSorted(item.value)),\n    ],\n    [\n        \"thSortableClass\",\n        \"o-table__th--sortable\",\n        null,\n        computed(() => props.sortable),\n    ],\n    [\n        \"thUnselectableClass\",\n        \"o-table__th--unselectable\",\n        null,\n        isHeaderUnselectable,\n    ],\n    [\n        \"thPositionClass\",\n        \"o-table__th--\",\n        computed(() => props.position),\n        computed(() => !!props.position),\n    ],\n    [\n        \"thStickyClass\",\n        \"o-table__th--sticky\",\n        null,\n        computed(() => props.sticky),\n    ],\n);\n\nconst tdClasses = defineClasses(\n    [\n        \"tdPositionClass\",\n        \"o-table__td--\",\n        computed(() => props.position),\n        computed(() => !!props.position),\n    ],\n    [\n        \"tdStickyClass\",\n        \"o-table__td--sticky\",\n        null,\n        computed(() => props.sticky),\n    ],\n);\n\n// --- SLOTS TYPED OBJECTS ---\n\n// these properties are just for type addings\n// slot props will be set in Table.vue\nconst row = {} as any;\nconst column = {} as TableColumnProps<T, K>;\nconst index = 0;\nconst toggle = () => {};\nconst filters = {} as Record<string, string>;\n</script>\n\n<template>\n    <span data-oruga=\"table-column\" :data-id=\"`table-${item.identifier}`\">\n        {{ label }}\n\n        <!--\n            Do not render these slots here.\n            These are only for documentation purposes.\n            Slots are defined in table component.\n        -->\n        <template v-if=\"false\">\n            <!--\n                @slot Default Slot\n                @binding {T} row - row data \n                @binding {TableColumn} column - column definition \n                @binding {number} index - row index \n                @binding {number} colindex - column index \n                @binding {(): void} toggle-details - toggle details function \n            -->\n            <slot\n                :row=\"row\"\n                :column=\"column\"\n                :index=\"index\"\n                :colindex=\"index\"\n                :toggle-details=\"toggle\" />\n            <!--\n                @slot Override header label \n                @binding {TableColumn} column - column definition \n                @binding {number} index - column index \n            -->\n            <slot name=\"header\" :column=\"column\" :index=\"index\" />\n            <!--\n                @slot Override subheading label \n                @binding {TableColumn} column - column definition \n                @binding {number} index - column index \n            -->\n            <slot name=\"subheading\" :column=\"column\" :index=\"index\" />\n\n            <!--\n                @slot Override searchable input \n                @binding {TableColumn} column - column definition \n                @binding {number} index - column index \n                @binding {object} filters - active filters object\n            -->\n            <slot\n                name=\"searchable\"\n                :column=\"column\"\n                :index=\"index\"\n                :filters=\"filters\" />\n        </template>\n    </span>\n</template>\n","<script setup lang=\"ts\">\nimport type { PropType } from \"vue\";\n\nimport OPagination from \"@/components/pagination/Pagination.vue\";\n\nimport type { ComponentClass } from \"@/types\";\n\ndefineOptions({\n    isOruga: true,\n    name: \"OTablePagination\",\n    configField: \"table\",\n    inheritAttrs: false,\n});\n\ndefineProps({\n    current: { type: Number, default: undefined },\n    paginated: { type: Boolean, default: false },\n    rootClass: {\n        type: [String, Array, Object] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * current prop two-way binding\n     * @param value {number} updated current prop\n     */\n    \"update:current\": [value: number];\n    /**\n     * on current change event\n     * @param value {number} current value\n     */\n    change: [event: number];\n}>();\n\nconst currentPage = defineModel<number>(\"current\");\n\n/** paginator change listener */\nfunction pageChanged(page: number): void {\n    const newPage = page > 0 ? page : 1;\n    currentPage.value = newPage;\n    emits(\"change\", newPage);\n}\n</script>\n\n<template>\n    <div :class=\"rootClass\">\n        <div>\n            <slot />\n        </div>\n\n        <div>\n            <o-pagination\n                v-if=\"paginated\"\n                v-bind=\"$attrs\"\n                :current=\"currentPage\"\n                @change=\"pageChanged\" />\n        </div>\n    </div>\n</template>\n","<script setup lang=\"ts\" generic=\"T\">\nimport {\n    computed,\n    ref,\n    watch,\n    onMounted,\n    nextTick,\n    useSlots,\n    toValue,\n    useTemplateRef,\n    toRaw,\n    triggerRef,\n    type MaybeRefOrGetter,\n} from \"vue\";\n\nimport OCheckbox from \"@/components/checkbox/Checkbox.vue\";\nimport OIcon from \"@/components/icon/Icon.vue\";\nimport OInput from \"@/components/input/Input.vue\";\nimport OLoading from \"@/components/loading/Loading.vue\";\nimport OSlotComponent from \"@/components/utils/SlotComponent\";\n\nimport OTableMobileSort from \"./TableMobileSort.vue\";\nimport OTableColumn from \"./TableColumn.vue\";\nimport OTablePagination from \"./TablePagination.vue\";\n\nimport { getDefault } from \"@/utils/config\";\nimport {\n    getValueByPath,\n    toCssDimension,\n    escapeRegExpChars,\n    removeDiacriticsFromString,\n    sortBy,\n    isDefined,\n    getPropertyValue,\n} from \"@/utils/helpers\";\nimport {\n    defineClasses,\n    getActiveClasses,\n    useProviderParent,\n    useMatchMedia,\n    useDebounce,\n    isOptionViable,\n    filterOptionsItems,\n    useSequentialId,\n} from \"@/composables\";\n\nimport type { ClassBind, DeepType } from \"@/types\";\nimport type {\n    TableColumn,\n    TableRow,\n    TableColumnItem,\n    TableColumnComponent,\n    TableComponent,\n} from \"./types\";\nimport type { TableProps } from \"./props\";\n\n/**\n * Tabulated data are sometimes needed, it's even better when it's responsive.\n * @displayName Table\n * @requires ./TableColumn.vue\n * @style _table.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OTable\",\n    configField: \"table\",\n    inheritAttrs: false,\n});\n\nconst props = withDefaults(defineProps<TableProps<T>>(), {\n    override: undefined,\n    data: undefined,\n    columns: undefined,\n    rowKey: () => getDefault(\"table.rowKey\"),\n    rowClass: getDefault(\"table.rowClass\", () => \"\"),\n    thAttrs: undefined,\n    tdAttrs: undefined,\n    customCompare: undefined,\n    bordered: () => getDefault(\"table.bordered\", false),\n    striped: () => getDefault(\"table.striped\", false),\n    narrowed: () => getDefault(\"table.narrowed\", false),\n    hoverable: () => getDefault(\"table.hoverable\", false),\n    selected: undefined,\n    selectable: () => getDefault(\"table.selectable\", false),\n    isRowSelectable: () => true,\n    showHeader: () => getDefault(\"table.showHeader\", true),\n    draggable: false,\n    draggableColumn: false,\n    scrollable: undefined,\n    stickyHeader: false,\n    height: undefined,\n    checkable: false,\n    stickyCheckbox: false,\n    checkableHeader: true,\n    checkedRows: () => [],\n    checkboxPosition: () => getDefault(\"table.checkboxPosition\", \"left\"),\n    checkboxVariant: () => getDefault(\"table.checkboxVariant\"),\n    isRowChecked: undefined,\n    isRowCheckable: getDefault(\"table.isRowCheckable\", () => true),\n    backendSorting: () => getDefault(\"table.backendSorting\", false),\n    defaultSort: () => getDefault(\"table.defaultSort\"),\n    defaultSortDirection: () => getDefault(\"table.defaultSortDirection\", \"asc\"),\n    sortIcon: () => getDefault(\"table.sortIcon\", \"arrow-up\"),\n    sortIconSize: () => getDefault(\"table.sortIconSize\", \"small\"),\n    iconPack: () => getDefault(\"table.iconPack\"),\n    detailed: false,\n    detailedRows: () => [],\n    isDetailedVisible: getDefault(\"table.isDetailedVisible\", () => true),\n    showDetailIcon: () => getDefault(\"table.showDetailIcon\", true),\n    detailIcon: () => getDefault(\"table.detailIcon\", \"chevron-right\"),\n    customDetailRow: false,\n    detailTransition: () => getDefault(\"table.detailTransition\", \"slide\"),\n    paginated: () => getDefault(\"table.paginated\", false),\n    backendPagination: false,\n    total: 0,\n    currentPage: 1,\n    perPage: () => getDefault(\"table.perPage\", 20),\n    paginationPosition: () => getDefault(\"table.paginationPosition\", \"bottom\"),\n    paginationSize: () => getDefault(\"table.paginationSize\", \"small\"),\n    paginationRounded: () => getDefault(\"table.paginationRounded\", false),\n    paginationSimple: () => getDefault(\"table.paginationSimple\", false),\n    paginationOrder: () => getDefault(\"table.paginationOrder\"),\n    backendFiltering: () => getDefault(\"table.backendFiltering\", false),\n    filtersIcon: () => getDefault(\"table.filterIcon\"),\n    filtersPlaceholder: () => getDefault(\"table.filterPlaceholder\"),\n    filtersEvent: \"\",\n    filterDebounce: () => getDefault(\"table.filterDebounce\", 300),\n    emptyLabel: () => getDefault(\"table.emptyLabel\"),\n    emptyIcon: () => getDefault(\"table.emptyIcon\"),\n    emptyIconSize: () => getDefault(\"table.emptyIconSize\"),\n    loading: false,\n    loadingIcon: () => getDefault(\"table.loadingIcon\", \"loading\"),\n    loadingLabel: () => getDefault(\"table.loadingLabel\"),\n    mobileBreakpoint: () => getDefault(\"table.mobileBreakpoint\"),\n    mobileCards: () => getDefault(\"table.mobileCards\", true),\n    mobileSortPlaceholder: () => getDefault(\"table.mobileSortPlaceholder\"),\n    ariaNextLabel: () => getDefault(\"table.ariaNextLabel\"),\n    ariaPreviousLabel: () => getDefault(\"table.ariaPreviousLabel\"),\n    ariaPageLabel: () => getDefault(\"table.ariaPageLabel\"),\n    ariaCurrentLabel: () => getDefault(\"table.ariaCurrentLabel\"),\n});\n\nconst emits = defineEmits<{\n    /**\n     * currentPage prop two-way binding\n     * @param value {number} updated currentPage prop\n     */\n    \"update:currentPage\": [value: number];\n    /**\n     * on pagination page change event\n     * @param page {number} updated page\n     */\n    \"page-change\": [page: number];\n    /**\n     * select prop two-way binding\n     * @param value {T} updated select prop\n     */\n    \"update:selected\": [value: T];\n    /**\n     * on row select event\n     * @param newRow {T} new select value\n     * @param oldRow {T} old select value\n     */\n    select: [newRow: T, oldRow: T];\n    /**\n     * on row checked event\n     * @param value {T[]} all checked rows\n     * @param row {T} row data\n     */\n    check: [value: T[], row: T];\n    /**\n     * on all rows checked event\n     * @param value {T[]} all checked rows\n     */\n    \"check-all\": [value: T[]];\n    /**\n     * checkedRows prop two-way binding\n     * @param value {T[]} updated checkedRows prop\n     */\n    \"update:checkedRows\": [value: T[]];\n    /**\n     * on column sort change event\n     * @param column {TableColumn} column data\n     * @param direction {string}  'asc' or 'desc'\n     * @param event {Event} native  event\n     */\n    sort: [column: TableColumn<T>, direction: \"asc\" | \"desc\", event: Event];\n    /**\n     * on filter change event\n     * @param filters {object} filter object\n     */\n    \"filters-change\": [value: Record<string, string>];\n    /**\n     * on native filter event based on props filtersEvent\n     * @param filtersEvent {string} props filtersEvent value\n     * @param filters {object} filter object\n     * @param event {Event} native  event\n     */\n    \"filters-event\": [\n        filtersEvent: string,\n        filters: Record<string, string>,\n        event: Event,\n    ];\n    /**\n     * detailedRows prop two-way binding\n     * @param value {T[]} updated detailedRows prop\n     */\n    \"update:detailedRows\": [value: T[]];\n    /**\n     * on details open event\n     * @param row {T} row data\n     */\n    \"details-open\": [row: T];\n    /**\n     * on details close event\n     * @param row {T} row data\n     */\n    \"details-close\": [row: T];\n    /**\n     * on row click event\n     * @param row {T} row data\n     * @param index {number} index of clicked row\n     * @param event {Event} native click event\n     */\n    click: [row: T, index: number, event: Event];\n    /**\n     * on row double click event\n     * @param row {T} row data\n     * @param index {number} index of clicked row\n     * @param event {Event} native click event\n     */\n    dblclick: [row: T, index: number, event: Event];\n    /**\n     * on row right click event\n     * @param row {T} row data\n     * @param index {number} index of clicked row\n     * @param event {Event} native contextmenu event\n     */\n    contextmenu: [row: T, index: number, event: Event];\n    /**\n     * on row mouseenter event\n     * @param row {T} row data\n     * @param index {number} index of clicked row\n     * @param event {Event} native mouseenter event\n     */\n    mouseenter: [row: T, index: number, event: Event];\n    /**\n     * on row mouseleave event\n     * @param row {T} row data\n     * @param index {number} index of clicked row\n     * @param event {Event} native mouseleave event\n     */\n    mouseleave: [row: T, index: number, event: Event];\n    /**\n     * on cell click event\n     * @param row {T} row data\n     * @param column {TableColumn} column data\n     * @param index {number} row index\n     * @param colindex {number} column index\n     * @param event {Event} native click event\n     */\n    \"cell-click\": [\n        row: T,\n        column: TableColumn<T>,\n        index: number,\n        colindex: number,\n        event: Event,\n    ];\n    /**\n     * on row dragstart event\n     * @param row {T} row data\n     * @param index {number} index of draged row\n     * @param event {DragEvent} native dragstart event\n     */\n    dragstart: [row: T, index: number, event: DragEvent];\n    /**\n     * on row dragend event\n     * @param row {T} row data\n     * @param index {number} index of draged row\n     * @param event {DragEvent} native dragend event\n     */\n    dragend: [row: T, index: number, event: DragEvent];\n    /**\n     * on row drop event\n     * @param row {T} row data\n     * @param index {number} index of draged row\n     * @param event {DragEvent} native drop event\n     */\n    drop: [row: T, index: number, event: DragEvent];\n    /**\n     * on row dragleave event\n     * @param row {T} row data\n     * @param index {number} index of draged row\n     * @param event {DragEvent} native dragleave event\n     */\n    dragleave: [row: T, index: number, event: DragEvent];\n    /**\n     * on row dragover event\n     * @param row {T} row data\n     * @param index {number} index of draged row\n     * @param event {DragEvent} native dragover event\n     */\n    dragover: [row: T, index: number, event: DragEvent];\n    /**\n     * on column columndragstart event\n     * @param column {TableColumn} column data\n     * @param index {number} index of draged column\n     * @param event {DragEvent} native columndragstart event\n     */\n    columndragstart: [column: TableColumn<T>, index: number, event: DragEvent];\n    /**\n     * on column columndragend event\n     * @param column {TableColumn} column data\n     * @param index {number} index of draged column\n     * @param event {DragEvent} native columndragend event\n     */\n    columndragend: [column: TableColumn<T>, index: number, event: DragEvent];\n    /**\n     * on column columndrop event\n     * @param column {TableColumn} column data\n     * @param index {number} index of draged column\n     * @param event {DragEvent} native columndrop event\n     */\n    columndrop: [column: TableColumn<T>, index: number, event: DragEvent];\n    /**\n     * on column columndragleave event\n     * @param column {TableColumn} column data\n     * @param index {number} index of draged column\n     * @param event {DragEvent} native columndragleave event\n     */\n    columndragleave: [column: TableColumn<T>, index: number, event: DragEvent];\n    /**\n     * on column columndragover event\n     * @param column {TableColumn} column data\n     * @param index {number} index of draged column\n     * @param event {DragEvent} native columndragover event\n     */\n    columndragover: [column: TableColumn<T>, index: number, event: DragEvent];\n}>();\n\nconst slots = useSlots();\n\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\n\nconst isMobileActive = computed(() => props.mobileCards && isMobile.value);\n\nconst slotsRef = useTemplateRef(\"slotsWrapper\");\n\n// provided data is a computed ref to ensure reactivity\nconst provideData = computed<TableComponent>(() => ({\n    isColumnSorted,\n}));\n\n/** provide functionalities and data to child item components */\nconst { childItems } = useProviderParent<TableColumnComponent<T>>({\n    rootRef: slotsRef,\n    data: provideData,\n});\n\n// #region --- TABLE COLUMNS ---\n\n/** all defined columns */\nconst tableColumns = computed<TableColumnItem<T>[]>(() => {\n    if (!childItems.value.length) return [];\n    return childItems.value.map((columnItem) => {\n        const column = toValue(columnItem.data!);\n\n        // create additional th attrs data\n        let thAttrsData =\n            typeof props.thAttrs === \"function\" ? props.thAttrs(column) : {};\n        thAttrsData = Object.assign(thAttrsData, column.thAttrs);\n\n        // create additional td attrs data\n        const tdAttrsData = (props.data ?? []).map((data) => {\n            const tdAttrs =\n                typeof props.tdAttrs === \"function\"\n                    ? props.tdAttrs(data, column)\n                    : {};\n            return Object.assign(tdAttrs, column.tdAttrs);\n        });\n\n        return {\n            ...column,\n            value: column,\n            index: columnItem.index,\n            identifier: columnItem.identifier,\n            thAttrsData: thAttrsData,\n            tdAttrsData: tdAttrsData,\n        };\n    });\n});\n\n/** total columns count */\nconst columnCount = computed(() => {\n    let i = tableColumns.value.length;\n    if (showDetailRowIcon.value) i++;\n    if (props.checkable) i++;\n    return i;\n});\n\n/** aria-colindex start value for ths */\nconst ariaColIndexStart = computed(() => {\n    let i = 1;\n    if (showDetailRowIcon.value) i++;\n    if (props.checkable && props.checkboxPosition === \"left\") i++;\n    return i;\n});\n\n/** check if table has subheadings  */\nconst hasSubheadings = computed(() => {\n    if (slots.subheading) return true;\n    return tableColumns.value.some((column) => !!column.subheading);\n});\n\n/** check if table is scrollable */\nconst isScrollable = computed(() => {\n    if (props.scrollable) return true;\n    return tableColumns.value.some((column) => column.sticky);\n});\n\n// #endregion --- TABLE COLUMNS ---\n\n// #region --- TABLE ROWS ---\n\nconst tableCurrentPage = defineModel<number>(\"currentPage\", { default: 1 });\n\n// recompute table rows visibility on page change or data change\nwatch([tableCurrentPage, () => props.perPage, () => props.data], () =>\n    filterTableRows(),\n);\n\n// create a unique id sequence\nconst { nextSequence } = useSequentialId();\n\n/** all defined data elements as normalized options with a unique key*/\nconst tableRows = computed<TableRow<T>[]>(() => {\n    if (!props.data) return [];\n    return props.data.map((value: T, idx: number) => ({\n        label: \"row \" + idx, // row display label\n        value: toValue(value), // normalizes wrapped ref values\n        index: idx, // row index\n        key:\n            // if no key is given and data is object, create unique row id for each row\n            String(\n                getValueByPath(\n                    value,\n                    props.rowKey,\n                    nextSequence() as DeepType<T, string>,\n                ),\n            ),\n    }));\n});\n\n/** visible rows which are filtered by viability */\nconst availableRows = computed<TableRow<T>[]>(() =>\n    tableRows.value.filter(isOptionViable),\n);\n\n/** applies visability filter of reactive tableRows */\nfunction filterTableRows(): void {\n    // calculate pagination information\n    const currentPage = tableCurrentPage.value;\n    const perPage = Number(props.perPage);\n    const pageStart = (currentPage - 1) * perPage;\n    const pageEnd = pageStart + perPage;\n\n    // update hidden state for each row\n    filterOptionsItems(tableRows, (row, idx) => {\n        // if paginated not backend paginated, paginate row\n        if (props.paginated || !props.backendPagination) {\n            // if not only one page and not on active page\n            if (\n                tableRows.value.length > perPage &&\n                (idx < pageStart || idx >= pageEnd)\n            )\n                // return row is invisible (filtered out)\n                return true;\n        }\n\n        // if not backend filtered, filter row\n        if (!props.backendFiltering)\n            // return row is visible based on filters\n            return !isRowFiltered(row.value);\n\n        // return row is visible (not filtered out)\n        return false;\n    });\n}\n\n/*\n * Total data count.\n * If backend paginated, use props total else use rows data length as pagination total.\n */\nconst tableTotal = computed(() =>\n    props.backendPagination ? props.total : tableRows.value.length,\n);\n\n/** total rows count  */\nconst rowCount = computed(() => {\n    return tableTotal.value + ariaRowIndexStart.value;\n});\n\n/** aria-rowindex start value for tds based if it's Searchable or has subheadings */\nconst ariaRowIndexStart = computed(() => {\n    let i = 1;\n    if (hasSearchableColumns.value) i++;\n    if (hasSubheadings.value) i++;\n    return i;\n});\n\n/**\n * Check if footer slot has custom content.\n * Must be called during rendering.\n */\nfunction hasCustomFooterSlot(): boolean {\n    if (!slots.footer) return false;\n\n    const footer = slots.footer({\n        columnCount: columnCount.value,\n        rowCount: rowCount.value,\n    });\n    if (footer.length > 1) return true;\n\n    const tag = footer[0][\"type\"];\n    return tag === \"th\" || tag === \"td\";\n}\n\n/** get the formated row value for a column */\nfunction getColumnValue(row: T, column: TableColumn<T>): string {\n    return getPropertyValue(row, column.field, column.formatter);\n}\n\n/** check if two rows are equal by a custom compare function or the rowKey attribute */\nfunction isRowEqual(\n    sourceRow: MaybeRefOrGetter<T>,\n    targetRow: MaybeRefOrGetter<T>,\n): boolean {\n    const el1 = toRaw(toValue(sourceRow));\n    const el2 = toRaw(toValue(targetRow));\n    if (!isDefined(targetRow)) return false;\n    if (typeof props.customCompare === \"function\")\n        return props.customCompare(el1, el2);\n    if (props.rowKey)\n        return (\n            getPropertyValue(el1, props.rowKey) ==\n            getPropertyValue(el2, props.rowKey)\n        );\n    return el1 == el2;\n}\n\n// #endregion  --- TABLE ROWS ---\n\n// #region --- Select Feature ---\n\nconst tableSelectedRow = defineModel<T>(\"selected\", { default: undefined });\n\n/** table arrow keys listener, change selection */\nfunction onArrowPressed(delta: 1 | -1, event: KeyboardEvent): void {\n    if (!availableRows.value.length) return;\n\n    let index =\n        availableRows.value.findIndex((row) =>\n            isRowEqual(row.value, tableSelectedRow.value),\n        ) + delta;\n\n    // check if index overflow\n    index =\n        index > availableRows.value.length - 1\n            ? availableRows.value.length - 1\n            : index;\n    // check if index underflow\n    index = index < 0 ? 0 : index;\n\n    // get row element\n    const row = availableRows.value[index];\n\n    if (!props.isRowSelectable(row.value)) {\n        let newIndex: number | undefined;\n        if (delta > 0) {\n            for (\n                let i = index;\n                i < availableRows.value.length && newIndex === undefined;\n                i++\n            ) {\n                if (props.isRowSelectable(availableRows.value[i].value))\n                    newIndex = i;\n            }\n        } else {\n            for (let i = index; i >= 0 && newIndex === undefined; i--) {\n                if (props.isRowSelectable(availableRows.value[i].value))\n                    newIndex = i;\n            }\n        }\n        if (newIndex != undefined && newIndex >= 0)\n            selectRow(availableRows.value[newIndex], event);\n    } else {\n        selectRow(row, event);\n    }\n}\n\n/**\n * Row click listener.\n * Emit all necessary events.\n */\nfunction selectRow(row: TableRow<T>, event: Event): void {\n    emits(\"click\", row.value, row.index, event);\n\n    if (!props.selectable) return;\n\n    if (isRowEqual(tableSelectedRow, row.value)) return;\n    if (!props.isRowSelectable(row.value)) return;\n\n    tableSelectedRow.value = row.value;\n    // emit new and old row\n    emits(\"select\", row.value, tableSelectedRow.value);\n}\n\n// #endregion --- Select Feature ---\n\n// #region --- Filter Feature ---\n\n/** search filter record alias { fieldKey: filterValue } */\nconst filters = ref<Record<string, string>>({});\n\n/** check if has any searchable column */\nconst hasSearchableColumns = computed(() =>\n    tableColumns.value.some((column) => column.searchable),\n);\n\nlet debouncedFilter: ReturnType<\n    typeof useDebounce<Parameters<typeof handleFiltersChange>>\n>;\n\n// initialise and update debounces filter function\nwatch(\n    () => props.filterDebounce,\n    (debounce) =>\n        (debouncedFilter = useDebounce(handleFiltersChange, debounce || 0)),\n    { immediate: true },\n);\n\n// react on filters got changed\nwatch(filters, (value) => debouncedFilter(value), { deep: true });\n\nfunction handleFiltersChange(value: Record<string, string>): void {\n    emits(\"filters-change\", value);\n    // if not backend filtered, recompute rows visibility with updated filters\n    if (!props.backendFiltering) {\n        filterTableRows();\n        // force tableRows reactivity to update\n        triggerRef(tableRows);\n    }\n}\n\nfunction onFiltersEvent(event: Event): void {\n    emits(\"filters-event\", props.filtersEvent, filters.value, event);\n}\n\n/**\n * check whether a row is filtered by active filters or not\n * @param row - row element\n *\n * @returns is row filtered in\n * */\nfunction isRowFiltered(row: T): boolean {\n    if (!Object.values(filters.value).filter(Boolean).length) return true;\n    return Object.entries(filters.value).some(([key, filter]) => {\n        if (!filter) return false;\n        // get column for filter\n        const column = tableColumns.value.find((c) => c.field === key);\n        // if column has onSearch return result\n        if (typeof column?.customSearch === \"function\")\n            return column.customSearch(row, filter);\n\n        const value =\n            typeof row === \"object\" && !!row ? getValueByPath(row, key) : row;\n        if (value == null) return false;\n        // if number compare values\n        if (Number.isInteger(value)) return value === Number(filter);\n        const re = new RegExp(escapeRegExpChars(filter), \"i\");\n        if (Array.isArray(value))\n            return value.some(\n                (val) =>\n                    re.test(removeDiacriticsFromString(val)) || re.test(val),\n            );\n        if (typeof value !== \"string\") return !!value;\n        return re.test(removeDiacriticsFromString(value)) || re.test(value);\n    });\n}\n\n// #endregion --- Filter Feature ---\n\n// #region --- Sort Feature ---\n\nconst currentSortColumn = ref<TableColumnItem<T>>();\nconst isAsc = ref(true);\n\n/** check if has any sortable column */\nconst hasSortableColumns = computed(() =>\n    tableColumns.value.some((column) => column.sortable),\n);\n\n/** check if the column is the current sort column */\nfunction isColumnSorted(column: TableColumnItem<T>): boolean {\n    return currentSortColumn.value?.identifier === column.identifier;\n}\n\n// call initSort only first time (for example async data)\n// initSort must be called after async TableColumns got initialised first time\nonMounted(() => nextTick(() => initSort()));\n\n/** initial sorted column based on the default-sort prop */\nfunction initSort(): void {\n    if (!tableColumns.value.length || currentSortColumn.value) return;\n    if (!props.defaultSort) return;\n    let sortField = \"\";\n    let sortDirection = props.defaultSortDirection;\n    if (Array.isArray(props.defaultSort)) {\n        sortField = props.defaultSort[0];\n        if (props.defaultSort[1]) sortDirection = props.defaultSort[1];\n    } else {\n        sortField = props.defaultSort;\n    }\n    sortByField(sortField, sortDirection);\n}\n\nfunction sortByField(field: string, direction: \"asc\" | \"desc\"): void {\n    const sortColumn = tableColumns.value.find(\n        (column) => column.field === field,\n    );\n    if (sortColumn) {\n        isAsc.value = direction.toLowerCase() === \"asc\";\n        sort(sortColumn);\n    }\n}\n\n/**\n * Sort the column.\n * Toggle current direction on column if it's sortable\n * and not just updating the prop.\n */\nfunction sort(\n    column: TableColumnItem<T>,\n    updateDirection = false,\n    event?: Event,\n): void {\n    if (!column?.sortable) return;\n\n    if (updateDirection)\n        isAsc.value = isColumnSorted(column)\n            ? !isAsc.value\n            : props.defaultSortDirection.toLowerCase() === \"asc\";\n\n    // if not first time sort\n    if (currentSortColumn.value)\n        emits(\n            \"sort\",\n            column,\n            isAsc.value ? \"asc\" : \"desc\",\n            event || new Event(\"sort\"),\n        );\n\n    currentSortColumn.value = column;\n\n    // if not backend sorted\n    if (!props.backendSorting) {\n        // sort rows by mutating the tableRows array\n        sortByColumn(tableRows.value);\n\n        // recalculate the page filter\n        filterTableRows();\n    }\n}\n\nfunction sortByColumn(rows: TableRow<T>[]): TableRow<T>[] {\n    const column = currentSortColumn.value;\n    if (!column) return rows;\n    return sortBy<TableRow<T>>(\n        rows,\n        column?.field ? \"value.\" + column.field : \"\",\n        column?.customSort\n            ? (a, b, asc): number => column.customSort!(a.value, b.value, asc)\n            : undefined,\n        isAsc.value,\n        true,\n    );\n}\n\n// #endregion --- Sort Feature ---\n\n// #region --- Checkable Feature ---\n\nconst tableCheckedRows = defineModel<T[]>(\"checkedRows\", {\n    default: [],\n});\n\n/** check if all rows in the page are checked */\nconst isAllChecked = computed(() => {\n    const validVisibleData = availableRows.value.filter((row) =>\n        props.isRowCheckable(row.value),\n    );\n    if (validVisibleData.length === 0) return false;\n    return validVisibleData.every((currentVisibleRow) =>\n        isChecked(currentVisibleRow),\n    );\n});\n\n/** check if all rows in the page are checkable */\nconst isAllUncheckable = computed(\n    () => !availableRows.value.some((row) => props.isRowCheckable(row.value)),\n);\n\n/** check if the row is checked (is added to the array) */\nfunction isChecked(row: TableRow<T>): boolean {\n    if (typeof props.isRowChecked === \"function\")\n        return props.isRowChecked(row.value);\n    else return tableCheckedRows.value.some((r) => isRowEqual(r, row.value));\n}\n\n/** add a checked row to the the array */\nfunction addCheckedRow(row: TableRow<T>): void {\n    tableCheckedRows.value = [...tableCheckedRows.value, row.value];\n}\n\n/** remove a checked row from the array */\nfunction removeCheckedRow(row: TableRow<T>): void {\n    const idx = tableCheckedRows.value.findIndex((r) =>\n        isRowEqual(r, row.value),\n    );\n    if (idx >= 0)\n        tableCheckedRows.value = tableCheckedRows.value.toSpliced(idx, 1);\n}\n\n/**\n * Header checkbox click listener.\n * Add or remove all rows in current page.\n */\nfunction checkAll(): void {\n    if (isAllChecked.value)\n        // if all rows are already checked, check nothing\n        tableCheckedRows.value = [];\n    else {\n        // else set all visible rows as checked\n        tableCheckedRows.value = availableRows.value\n            .filter((row) => props.isRowCheckable(row.value))\n            .map((row) => row.value);\n    }\n\n    // emit event after the reactive checked rows list got updated\n    nextTick(() => emits(\"check-all\", tableCheckedRows.value));\n}\n\n/** row checkbox click listener */\nfunction checkRow(row: TableRow<T>): void {\n    if (!props.isRowCheckable(row.value)) return;\n\n    if (isChecked(row)) removeCheckedRow(row);\n    else addCheckedRow(row);\n\n    // emit event after the reactive checked rows list got updated\n    nextTick(() => emits(\"check\", tableCheckedRows.value, row.value));\n}\n\n// #endregion --- Checkable Feature ---\n\n// #region --- Detail Row Feature ---\n\nconst visibleDetailedRows = defineModel<T[]>(\"detailedRows\", {\n    default: [],\n});\n\n/**\n * Return if detailed row tabled.\n * Will be with chevron column & icon or not.\n */\nconst showDetailRowIcon = computed(\n    () => props.detailed && props.showDetailIcon,\n);\n\n/** toggle to show/hide details slot */\nfunction toggleDetails(row: TableRow<T>): void {\n    if (isDetailRowVisible(row)) {\n        closeDetailRow(row);\n        emits(\"details-close\", row.value);\n    } else {\n        openDetailRow(row);\n        emits(\"details-open\", row.value);\n    }\n}\n\nfunction openDetailRow(row: TableRow<T>): void {\n    visibleDetailedRows.value = [...visibleDetailedRows.value, row.value];\n}\n\nfunction closeDetailRow(row: TableRow<T>): void {\n    const idx = visibleDetailedRows.value.findIndex((r) =>\n        isRowEqual(r, row.value),\n    );\n    if (idx >= 0)\n        visibleDetailedRows.value = visibleDetailedRows.value.toSpliced(idx, 1);\n}\n\nfunction isDetailRowVisible(row: TableRow<T>): boolean {\n    return (\n        props.detailed &&\n        visibleDetailedRows.value.some((r) => isRowEqual(r, row.value))\n    );\n}\n\n// #endregion --- Detail Row Feature ---\n\n// #region --- Drag&Drop Feature ---\n\nconst isDraggingRow = ref(false);\nconst isDraggingColumn = ref(false);\n\nconst canDragRow = computed(() => props.draggable && !isDraggingColumn.value);\n\nconst canDragColumn = computed(\n    () => props.draggableColumn && !isDraggingRow.value,\n);\n\n/** emits drag start event */\nfunction handleDragStart(row: TableRow<T>, event: DragEvent): void {\n    if (!props.draggable) return;\n    emits(\"dragstart\", row.value, row.index, event);\n}\n\n/** emits drag leave event */\nfunction handleDragEnd(row: TableRow<T>, event: DragEvent): void {\n    if (!props.draggable) return;\n    emits(\"dragend\", row.value, row.index, event);\n}\n\n/** emits drop event */\nfunction handleDrop(row: TableRow<T>, event: DragEvent): void {\n    if (!props.draggable) return;\n    emits(\"drop\", row.value, row.index, event);\n}\n\n/** emits drag over event */\nfunction handleDragOver(row: TableRow<T>, event: DragEvent): void {\n    if (!props.draggable) return;\n    emits(\"dragover\", row.value, row.index, event);\n}\n\n/** emits drag leave event */\nfunction handleDragLeave(row: TableRow<T>, event: DragEvent): void {\n    if (!props.draggable) return;\n    emits(\"dragleave\", row.value, row.index, event);\n}\n\n/** emits drag start event (column) */\nfunction handleColumnDragStart(\n    column: TableColumnItem<T>,\n    event: DragEvent,\n): void {\n    if (!canDragColumn.value) return;\n    isDraggingColumn.value = true;\n    emits(\"columndragstart\", column.value, column.index, event);\n}\n\n/** emits drag leave event (column) */\nfunction handleColumnDragEnd(\n    column: TableColumnItem<T>,\n    event: DragEvent,\n): void {\n    if (!canDragColumn.value) return;\n    isDraggingColumn.value = false;\n    emits(\"columndragend\", column.value, column.index, event);\n}\n\n/** emits drop event (column) */\nfunction handleColumnDrop(column: TableColumnItem<T>, event: DragEvent): void {\n    if (!canDragColumn.value) return;\n    emits(\"columndrop\", column.value, column.index, event);\n}\n\n/** emits drag over event (column) */\nfunction handleColumnDragOver(\n    column: TableColumnItem<T>,\n    event: DragEvent,\n): void {\n    if (!canDragColumn.value) return;\n    emits(\"columndragover\", column.value, column.index, event);\n}\n\n/** emits drag leave event (column) */\nfunction handleColumnDragLeave(\n    column: TableColumnItem<T>,\n    event: DragEvent,\n): void {\n    if (!canDragColumn.value) return;\n    emits(\"columndragleave\", column.value, column.index, event);\n}\n\n// #endregion --- Drag&Drop Feature ---\n\n// #region --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-table__root\"],\n    [\"mobileClass\", \"o-table__root--mobile\", null, isMobileActive],\n);\n\nconst tableWrapperClasses = defineClasses(\n    [\"wrapperClass\", \"o-table__wrapper\"],\n    [\n        \"stickyHeaderClass\",\n        \"o-table__wrapper--sticky-header\",\n        null,\n        computed(() => props.stickyHeader),\n    ],\n    [\"scrollableClass\", \"o-table__wrapper--scrollable\", null, isScrollable],\n    [\"mobileClass\", \"o-table__wrapper--mobile\", null, isMobileActive],\n);\n\nconst tableWrapperStyle = computed(() => ({\n    height: toCssDimension(props.height),\n}));\n\nconst tableClasses = defineClasses(\n    [\"tableClass\", \"o-table\"],\n    [\n        \"borderedClass\",\n        \"o-table--bordered\",\n        null,\n        computed(() => props.bordered),\n    ],\n    [\"stripedClass\", \"o-table--striped\", null, computed(() => props.striped)],\n    [\n        \"narrowedClass\",\n        \"o-table--narrowed\",\n        null,\n        computed(() => props.narrowed),\n    ],\n    [\n        \"hoverableClass\",\n        \"o-table--hoverable\",\n        null,\n        computed(\n            () =>\n                (props.hoverable || props.selectable) &&\n                !!availableRows.value.length,\n        ),\n    ],\n    [\n        \"emptyClass\",\n        \"o-table--empty\",\n        null,\n        computed(() => !availableRows.value.length),\n    ],\n);\n\nconst thBaseClasses = defineClasses([\"thClass\", \"o-table__th\"]);\n\nconst thCheckboxClasses = defineClasses(\n    [\"thCheckboxClass\", \"o-table__th-checkbox\"],\n    [\n        \"thStickyClass\",\n        \"o-table__th--sticky\",\n        null,\n        computed(() => props.stickyCheckbox),\n    ],\n);\n\nconst thDetailedClasses = defineClasses([\n    \"thDetailedClass\",\n    \"o-table__th-detailed\",\n]);\n\nconst thSubheadingClasses = defineClasses([\n    \"thSubheadingClass\",\n    \"o-table__th-subheading\",\n]);\n\nconst thSortIconClasses = defineClasses([\n    \"thSortIconClass\",\n    \"o-table__th__sort-icon\",\n]);\n\nconst trSelectedClasses = defineClasses([\n    \"trSelectedClass\",\n    \"o-table__tr--selected\",\n]);\n\nconst trCheckedClasses = defineClasses([\n    \"trCheckedClass\",\n    \"o-table__tr--checked\",\n]);\n\nconst trEmptyClasses = defineClasses([\"trEmptyClass\", \"o-table__tr-empty\"]);\n\nconst trDetailedClasses = defineClasses([\n    \"trDetailedClass\",\n    \"o-table__tr-detail\",\n]);\n\nconst tdBaseClasses = defineClasses([\"tdClass\", \"o-table__td\"]);\n\nconst tdCheckboxClasses = defineClasses(\n    [\"tdCheckboxClass\", \"o-table__td-checkbox\"],\n    [\n        \"thStickyClass\",\n        \"o-table__th--sticky\",\n        null,\n        computed(() => props.stickyCheckbox),\n    ],\n);\n\nconst tdDetailedChevronClasses = defineClasses([\n    \"tdDetailedChevronClass\",\n    \"o-table__td-chevron\",\n]);\n\nconst footerClasses = defineClasses([\"footerClass\", \"o-table__footer\"]);\n\nconst mobileSortClasses = defineClasses([\n    \"mobileSortClass\",\n    \"o-table__mobile-sort\",\n]);\n\nconst paginationWrapperClasses = defineClasses([\n    \"paginationWrapperClass\",\n    \"o-table__pagination\",\n]);\n\nconst paginationWrapperRootClasses = computed(() =>\n    getActiveClasses(paginationWrapperClasses),\n);\n\nfunction rowClasses(row: TableRow<T>): ClassBind[] {\n    const selectedClasses = isRowEqual(row.value, tableSelectedRow.value)\n        ? trSelectedClasses.value\n        : [];\n\n    const checkedClasses = isChecked(row) ? trCheckedClasses.value : [];\n\n    const rowClass =\n        typeof props.rowClass === \"function\"\n            ? props.rowClass(row.value, row.index) || \"\"\n            : \"\";\n\n    return [...selectedClasses, ...checkedClasses, { [rowClass]: true }];\n}\n\n// #endregion --- Computed Component Classes ---\n\n// compute initial row visibility\nfilterTableRows();\n\n// #region --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ rows: tableRows, sort: sortByField });\n\n// #endregion\n</script>\n\n<template>\n    <div data-oruga=\"table\" :class=\"rootClasses\">\n        <div ref=\"slotsWrapper\" style=\"display: none\">\n            <!--\n                @slot Place o-table-column here\n            -->\n            <slot>\n                <!--\n                    @slot Place extra `o-table-column` components here, even if you have some columns defined by prop\n                -->\n                <slot name=\"before\" />\n\n                <template v-if=\"columns?.length\">\n                    <o-table-column\n                        v-for=\"(column, idx) in columns\"\n                        :key=\"column.field || idx\"\n                        v-slot=\"{ row }\"\n                        v-bind=\"column\">\n                        {{ getColumnValue(row, column) }}\n                    </o-table-column>\n                </template>\n\n                <!--\n                    @slot Place extra `o-table-column` components here, even if you have some columns defined by prop\n                -->\n                <slot name=\"after\" />\n            </slot>\n        </div>\n\n        <o-table-mobile-sort\n            v-if=\"isMobileActive && hasSortableColumns\"\n            :current-sort-column=\"currentSortColumn\"\n            :columns=\"tableColumns\"\n            :placeholder=\"mobileSortPlaceholder\"\n            :icon-pack=\"iconPack\"\n            :sort-icon=\"sortIcon\"\n            :sort-icon-size=\"sortIconSize\"\n            :is-asc=\"isAsc\"\n            :mobile-sort-classes=\"mobileSortClasses\"\n            @sort=\"(column, event) => sort(column, true, event)\" />\n\n        <template\n            v-if=\"\n                paginated &&\n                (paginationPosition === 'top' || paginationPosition === 'both')\n            \">\n            <!--\n                @slot Override pagination label\n                @binding {number} current - current page\n                @binding {number} per-page - rows per page\n                @binding {number} total - total rows count\n                @binding {(page: number): void } change - on page change event\n            -->\n            <slot\n                name=\"pagination\"\n                :current=\"tableCurrentPage\"\n                :per-page=\"perPage\"\n                :total=\"tableTotal\"\n                :change=\"(page) => (tableCurrentPage = page)\">\n                <o-table-pagination\n                    v-model:current=\"tableCurrentPage\"\n                    :paginated=\"paginated\"\n                    :per-page=\"perPage\"\n                    :total=\"tableTotal\"\n                    :rounded=\"paginationRounded\"\n                    :size=\"paginationSize\"\n                    :order=\"paginationOrder\"\n                    :simple=\"paginationSimple\"\n                    :icon-pack=\"iconPack\"\n                    :aria-next-label=\"ariaNextLabel\"\n                    :aria-previous-label=\"ariaPreviousLabel\"\n                    :aria-page-label=\"ariaPageLabel\"\n                    :aria-current-label=\"ariaCurrentLabel\"\n                    :root-class=\"paginationWrapperRootClasses\"\n                    @change=\"(page) => $emit('page-change', page)\">\n                    <!--\n                        @slot Additional slot if table is paginated\n                    -->\n                    <slot name=\"top-left\" />\n                </o-table-pagination>\n            </slot>\n        </template>\n\n        <div :class=\"tableWrapperClasses\" :style=\"tableWrapperStyle\">\n            <table\n                v-if=\"tableColumns.length\"\n                v-bind=\"$attrs\"\n                :class=\"tableClasses\"\n                :tabindex=\"selectable || isScrollable ? 0 : undefined\"\n                :aria-rowcount=\"rowCount\"\n                :aria-colcount=\"columnCount\"\n                @keydown.prevent.up=\"onArrowPressed(-1, $event)\"\n                @keydown.prevent.down=\"onArrowPressed(1, $event)\"\n                @keydown.prevent.home=\"selectRow(availableRows[0], $event)\"\n                @keydown.prevent.end=\"\n                    selectRow(availableRows[availableRows.length - 1], $event)\n                \">\n                <caption v-if=\"$slots.caption\">\n                    <!--\n                        @slot Define a table caption here\n                    -->\n                    <slot name=\"caption\" />\n                </caption>\n\n                <thead v-if=\"showHeader\">\n                    <!--\n                        @slot Define preheader content here\n                    -->\n                    <slot name=\"preheader\" />\n\n                    <tr :aria-rowindex=\"1\">\n                        <!-- detailed toggle column -->\n                        <th\n                            v-if=\"showDetailRowIcon\"\n                            :class=\"[...thBaseClasses, ...thDetailedClasses]\"\n                            :aria-colindex=\"1\"\n                            aria-hidden=\"true\" />\n\n                        <!-- checkable column left -->\n                        <th\n                            v-if=\"checkable && checkboxPosition === 'left'\"\n                            :class=\"[...thBaseClasses, ...thCheckboxClasses]\"\n                            :aria-colindex=\"showDetailRowIcon ? 2 : 1\">\n                            <!--\n                                @slot Override check all checkbox\n                                @binding {boolean} is-all-checked - if all rows are checked\n                                @binding {boolean} is-all-uncheckable - if check all is uncheckable\n                                @binding {(): void} check-all - check all function\n                            -->\n                            <slot\n                                v-if=\"checkableHeader\"\n                                name=\"check-all\"\n                                :is-all-checked=\"isAllChecked\"\n                                :is-all-uncheckable=\"isAllUncheckable\"\n                                :check-all=\"checkAll\">\n                                <o-checkbox\n                                    :model-value=\"isAllChecked\"\n                                    autocomplete=\"off\"\n                                    name=\"row_check_all\"\n                                    :variant=\"checkboxVariant\"\n                                    :disabled=\"isAllUncheckable\"\n                                    aria-label=\"Check all\"\n                                    @update:model-value=\"checkAll\" />\n                            </slot>\n                        </th>\n\n                        <!-- row data columns -->\n                        <template\n                            v-for=\"column in tableColumns\"\n                            :key=\"column.identifier\">\n                            <th\n                                v-if=\"!column.hidden\"\n                                v-bind=\"column.thAttrsData\"\n                                :class=\"[...thBaseClasses, ...column.thClasses]\"\n                                :style=\"isMobileActive ? {} : column.style\"\n                                :draggable=\"canDragColumn\"\n                                :aria-sort=\"\n                                    isColumnSorted(column)\n                                        ? isAsc\n                                            ? 'ascending'\n                                            : 'descending'\n                                        : undefined\n                                \"\n                                :aria-colindex=\"\n                                    ariaColIndexStart + column.index\n                                \"\n                                @click.stop=\"sort(column, true, $event)\"\n                                @dragstart=\"\n                                    handleColumnDragStart(column, $event)\n                                \"\n                                @dragend=\"handleColumnDragEnd(column, $event)\"\n                                @drop=\"handleColumnDrop(column, $event)\"\n                                @dragover=\"handleColumnDragOver(column, $event)\"\n                                @dragleave=\"\n                                    handleColumnDragLeave(column, $event)\n                                \">\n                                <o-slot-component\n                                    v-if=\"column.$slots?.header\"\n                                    :component=\"column.$el\"\n                                    name=\"header\"\n                                    tag=\"span\"\n                                    :props=\"{\n                                        column: column.value,\n                                        index: column.index,\n                                    }\" />\n\n                                <span v-else>\n                                    {{ column.label }}\n                                    <span\n                                        v-if=\"column.sortable\"\n                                        v-show=\"isColumnSorted(column)\"\n                                        :class=\"thSortIconClasses\"\n                                        :aria-hidden=\"!isColumnSorted(column)\">\n                                        <o-icon\n                                            :icon=\"sortIcon\"\n                                            :pack=\"iconPack\"\n                                            both\n                                            :size=\"sortIconSize\"\n                                            :rotation=\"!isAsc ? 180 : 0\" />\n                                    </span>\n                                </span>\n                            </th>\n                        </template>\n\n                        <!-- checkable column right -->\n                        <th\n                            v-if=\"checkable && checkboxPosition === 'right'\"\n                            :class=\"[...thBaseClasses, ...thCheckboxClasses]\"\n                            :aria-colindex=\"\n                                ariaColIndexStart + tableColumns.length\n                            \">\n                            <!--\n                                @slot Override check all checkbox\n                                @binding {boolean} is-all-checked - if all rows are checked\n                                @binding {boolean} is-all-uncheckable - if check all is uncheckable\n                                @binding {(): void} check-all - check all function\n                            -->\n                            <slot\n                                v-if=\"checkableHeader\"\n                                name=\"check-all\"\n                                :is-all-checked=\"isAllChecked\"\n                                :is-all-uncheckable=\"isAllUncheckable\"\n                                :check-all=\"checkAll\">\n                                <o-checkbox\n                                    :model-value=\"isAllChecked\"\n                                    autocomplete=\"off\"\n                                    name=\"row_check_all\"\n                                    :variant=\"checkboxVariant\"\n                                    :disabled=\"isAllUncheckable\"\n                                    aria-label=\"Check all\"\n                                    @update:model-value=\"checkAll\" />\n                            </slot>\n                        </th>\n                    </tr>\n\n                    <tr v-if=\"hasSearchableColumns\" :aria-rowindex=\"2\">\n                        <!-- detailed toggle column -->\n                        <th\n                            v-if=\"showDetailRowIcon\"\n                            :class=\"[...thBaseClasses, ...thDetailedClasses]\"\n                            aria-hidden=\"true\" />\n\n                        <!-- checkable column left -->\n                        <th v-if=\"checkable && checkboxPosition === 'left'\" />\n\n                        <!-- row data columns -->\n                        <template\n                            v-for=\"column in tableColumns\"\n                            :key=\"column.identifier\">\n                            <th\n                                v-if=\"!column.hidden\"\n                                v-bind=\"column.thAttrsData\"\n                                :class=\"[...thBaseClasses, ...column.thClasses]\"\n                                :style=\"isMobileActive ? {} : column.style\">\n                                <template v-if=\"column.searchable\">\n                                    <template v-if=\"column.$slots?.searchable\">\n                                        <o-slot-component\n                                            :component=\"column.$el\"\n                                            name=\"searchable\"\n                                            tag=\"span\"\n                                            :props=\"{\n                                                column: column.value,\n                                                index: column.index,\n                                                filters,\n                                            }\" />\n                                    </template>\n                                    <o-input\n                                        v-else-if=\"column.field\"\n                                        v-model=\"filters[column.field]\"\n                                        :name=\"`column_${column.field}_filter`\"\n                                        :type=\"\n                                            column.numeric ? 'number' : 'search'\n                                        \"\n                                        :placeholder=\"filtersPlaceholder\"\n                                        :icon=\"filtersIcon\"\n                                        :pack=\"iconPack\"\n                                        size=\"small\"\n                                        :aria-label=\"`${column.label} search`\"\n                                        @[filtersEvent]=\"onFiltersEvent\" />\n                                </template>\n                            </th>\n                        </template>\n\n                        <!-- checkable column right -->\n                        <th v-if=\"checkable && checkboxPosition === 'right'\" />\n                    </tr>\n\n                    <tr\n                        v-if=\"hasSubheadings\"\n                        :aria-rowindex=\"hasSearchableColumns ? 3 : 2\">\n                        <!-- detailed toggle column -->\n                        <th\n                            v-if=\"showDetailRowIcon\"\n                            :class=\"[...thBaseClasses, ...thDetailedClasses]\" />\n\n                        <!-- checkable column left -->\n                        <th v-if=\"checkable && checkboxPosition === 'left'\" />\n\n                        <!-- row data columns -->\n                        <template\n                            v-for=\"column in tableColumns\"\n                            :key=\"column.identifier\">\n                            <th\n                                v-if=\"!column.hidden\"\n                                :style=\"isMobileActive ? {} : column.style\"\n                                :class=\"[\n                                    ...thBaseClasses,\n                                    ...thSubheadingClasses,\n                                ]\">\n                                <o-slot-component\n                                    v-if=\"column.$slots?.subheading\"\n                                    :component=\"column.$el\"\n                                    name=\"subheading\"\n                                    tag=\"span\"\n                                    :props=\"{\n                                        column: column.value,\n                                        index: column.index,\n                                    }\" />\n                                <span v-else>\n                                    <slot name=\"subheading\">\n                                        {{ column.subheading }}\n                                    </slot>\n                                </span>\n                            </th>\n                        </template>\n\n                        <!-- checkable column right -->\n                        <th v-if=\"checkable && checkboxPosition === 'right'\" />\n                    </tr>\n                </thead>\n\n                <tbody>\n                    <!-- table rows -->\n                    <template\n                        v-for=\"(row, rowIndex) in tableRows\"\n                        :key=\"row.key\">\n                        <tr\n                            v-if=\"!row.hidden\"\n                            :class=\"rowClasses(row)\"\n                            :draggable=\"canDragRow\"\n                            :aria-rowindex=\"ariaRowIndexStart + rowIndex + 1\"\n                            @click=\"selectRow(row, $event)\"\n                            @dblclick=\"\n                                $emit('dblclick', row.value, row.index, $event)\n                            \"\n                            @mouseenter=\"\n                                $emit(\n                                    'mouseenter',\n                                    row.value,\n                                    row.index,\n                                    $event,\n                                )\n                            \"\n                            @mouseleave=\"\n                                $emit(\n                                    'mouseleave',\n                                    row.value,\n                                    row.index,\n                                    $event,\n                                )\n                            \"\n                            @contextmenu=\"\n                                $emit(\n                                    'contextmenu',\n                                    row.value,\n                                    row.index,\n                                    $event,\n                                )\n                            \"\n                            @dragstart=\"handleDragStart(row, $event)\"\n                            @dragend=\"handleDragEnd(row, $event)\"\n                            @drop=\"handleDrop(row, $event)\"\n                            @dragover=\"handleDragOver(row, $event)\"\n                            @dragleave=\"handleDragLeave(row, $event)\">\n                            <!-- detailed toggle column -->\n                            <td\n                                v-if=\"showDetailRowIcon\"\n                                :class=\"[\n                                    ...tdBaseClasses,\n                                    ...tdDetailedChevronClasses,\n                                ]\">\n                                <o-icon\n                                    v-if=\"isDetailedVisible(row.value)\"\n                                    :icon=\"detailIcon\"\n                                    :pack=\"iconPack\"\n                                    :rotation=\"isDetailRowVisible(row) ? 90 : 0\"\n                                    role=\"button\"\n                                    tabindex=\"0\"\n                                    clickable\n                                    both\n                                    :aria-label=\"`Open ${row.label} details`\"\n                                    @click.prevent=\"toggleDetails(row)\"\n                                    @keydown.prevent.enter=\"toggleDetails(row)\"\n                                    @keydown.prevent.space=\"\n                                        toggleDetails(row)\n                                    \" />\n                            </td>\n\n                            <!-- checkable column left -->\n                            <td\n                                v-if=\"checkable && checkboxPosition === 'left'\"\n                                :class=\"[\n                                    ...thBaseClasses,\n                                    ...tdCheckboxClasses,\n                                ]\">\n                                <o-checkbox\n                                    :model-value=\"isChecked(row)\"\n                                    autocomplete=\"off\"\n                                    :name=\"`row_${row.index}_check`\"\n                                    :variant=\"checkboxVariant\"\n                                    :disabled=\"!isRowCheckable(row.value)\"\n                                    :aria-label=\"`Check ${row.label}`\"\n                                    @update:model-value=\"checkRow(row)\" />\n                            </td>\n\n                            <!-- row data columns -->\n                            <template\n                                v-for=\"column in tableColumns\"\n                                :key=\"column.identifier\">\n                                <o-slot-component\n                                    v-if=\"!column.hidden\"\n                                    v-bind=\"column.tdAttrsData[row.index]\"\n                                    :component=\"column.$el\"\n                                    name=\"default\"\n                                    tag=\"td\"\n                                    :class=\"[\n                                        ...tdBaseClasses,\n                                        ...column.tdClasses,\n                                    ]\"\n                                    :data-label=\"column.label\"\n                                    :style=\"isMobileActive ? {} : column.style\"\n                                    :props=\"{\n                                        row: row.value,\n                                        index: row.index,\n                                        column: column.value,\n                                        colindex: column.index,\n                                        toggleDetails: () => toggleDetails(row),\n                                    }\"\n                                    @click=\"\n                                        $emit(\n                                            'cell-click',\n                                            row.value,\n                                            column.value,\n                                            row.index,\n                                            column.index,\n                                            $event,\n                                        )\n                                    \">\n                                    {{ getColumnValue(row.value, column) }}\n                                </o-slot-component>\n                            </template>\n\n                            <!-- checkable column right -->\n                            <td\n                                v-if=\"checkable && checkboxPosition === 'right'\"\n                                :class=\"[\n                                    ...thBaseClasses,\n                                    ...tdCheckboxClasses,\n                                ]\">\n                                <o-checkbox\n                                    :model-value=\"isChecked(row)\"\n                                    autocomplete=\"off\"\n                                    :variant=\"checkboxVariant\"\n                                    :disabled=\"!isRowCheckable(row.value)\"\n                                    :aria-label=\"`Check ${row.label}`\"\n                                    @update:model-value=\"checkRow(row)\" />\n                            </td>\n                        </tr>\n\n                        <transition-group\n                            v-if=\"props.detailed\"\n                            :name=\"detailTransition\">\n                            <template v-if=\"isDetailRowVisible(row)\">\n                                <!--\n                                    @slot Place row detail content here\n                                    @binding {T} row - row content\n                                    @binding {number} index - row index\n                                -->\n                                <slot\n                                    v-if=\"customDetailRow\"\n                                    name=\"detail\"\n                                    :row=\"row.value\"\n                                    :index=\"row.index\" />\n                                <tr\n                                    v-else\n                                    :key=\"`${row.key}_detail`\"\n                                    :class=\"trDetailedClasses\">\n                                    <td :colspan=\"columnCount\">\n                                        <!--\n                                            @slot Place row detail content here\n                                            @binding {T} row - row content\n                                            @binding {number} index - row index\n                                        -->\n                                        <slot\n                                            name=\"detail\"\n                                            :row=\"row.value\"\n                                            :index=\"row.index\" />\n                                    </td>\n                                </tr>\n                            </template>\n                        </transition-group>\n                    </template>\n\n                    <tr v-if=\"!availableRows.length\" :class=\"trEmptyClasses\">\n                        <td :colspan=\"columnCount\">\n                            <!--\n                                @slot Define content if table is empty\n                            -->\n                            <slot name=\"empty\">\n                                <o-icon\n                                    v-if=\"emptyIcon\"\n                                    :icon=\"emptyIcon\"\n                                    :size=\"emptyIconSize\"\n                                    :pack=\"iconPack\"\n                                    both />\n                                {{ emptyLabel }}\n                            </slot>\n                        </td>\n                    </tr>\n                </tbody>\n\n                <tfoot v-if=\"$slots.footer\">\n                    <tr :class=\"footerClasses\">\n                        <!--\n                            @slot Define a custom footer\n                            @binding {number} column-count - counts of visible columns\n                            @binding {number} row-count - counts of visible rows\n                        -->\n                        <slot\n                            v-if=\"hasCustomFooterSlot()\"\n                            name=\"footer\"\n                            :column-count=\"columnCount\"\n                            :row-count=\"rowCount\" />\n                        <th v-else :colspan=\"columnCount\">\n                            <!--\n                                @slot Define a custom footer\n                                @binding {number} column-count - counts of visible columns\n                                @binding {number} row-count - counts of visible rows\n                            -->\n                            <slot\n                                name=\"footer\"\n                                :column-count=\"columnCount\"\n                                :row-count=\"rowCount\" />\n                        </th>\n                    </tr>\n                </tfoot>\n            </table>\n\n            <!--\n                @slot Override loading component\n                @binding {boolean} loading - is loading state enabled\n            -->\n            <slot name=\"loading\" :loading=\"loading\">\n                <o-loading\n                    v-bind=\"loadingClasses\"\n                    :full-page=\"false\"\n                    :active=\"loading\"\n                    :icon=\"loadingIcon\"\n                    :label=\"loadingLabel\" />\n            </slot>\n        </div>\n\n        <template\n            v-if=\"\n                (checkable && $slots['bottom-left']) ||\n                (paginated &&\n                    (paginationPosition === 'bottom' ||\n                        paginationPosition === 'both'))\n            \">\n            <!--\n                @slot Override pagination label\n                @binding {number} current - current page\n                @binding {number} per-page - rows per page\n                @binding {number} total - total rows count\n                @binding {(page: number): void } change - on page change event\n            -->\n            <slot\n                name=\"pagination\"\n                :current=\"tableCurrentPage\"\n                :per-page=\"perPage\"\n                :total=\"tableTotal\"\n                :change=\"(page) => (tableCurrentPage = page)\">\n                <o-table-pagination\n                    v-model:current=\"tableCurrentPage\"\n                    :paginated=\"paginated\"\n                    :per-page=\"perPage\"\n                    :total=\"tableTotal\"\n                    :rounded=\"paginationRounded\"\n                    :size=\"paginationSize\"\n                    :order=\"paginationOrder\"\n                    :simple=\"paginationSimple\"\n                    :icon-pack=\"iconPack\"\n                    :aria-next-label=\"ariaNextLabel\"\n                    :aria-previous-label=\"ariaPreviousLabel\"\n                    :aria-page-label=\"ariaPageLabel\"\n                    :aria-current-label=\"ariaCurrentLabel\"\n                    :root-class=\"paginationWrapperRootClasses\"\n                    @change=\"(page) => $emit('page-change', page)\">\n                    <!--\n                        @slot Additional slot if table is paginated\n                    -->\n                    <slot name=\"bottom-left\" />\n                </o-table-pagination>\n            </slot>\n        </template>\n    </div>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Table from \"./Table.vue\";\nimport TableColumn from \"./TableColumn.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export table specific types */\nexport type { TableColumn, TableRow } from \"./types\";\n\n/** export table plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Table);\n        registerComponent(app, TableColumn);\n    },\n} as Plugin;\n\n/** export table components */\nexport { Table as OTable, TableColumn as OTableColumn };\n","<script setup lang=\"ts\" generic=\"T, C extends Component\">\nimport { computed, ref, useSlots, useId, type Component } from \"vue\";\n\nimport { getDefault } from \"@/utils/config\";\nimport { defineClasses, useProviderChild } from \"@/composables\";\n\nimport type { TabsComponent, TabItemComponent } from \"./types\";\nimport type { TabItemProps } from \"./props\";\n\n/**\n * An tab item used by the tabs component.\n * @displayName Tab Item\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OTabItem\",\n    configField: \"tabs\",\n    inheritAttrs: false,\n});\n\nconst props = withDefaults(defineProps<TabItemProps<T, C>>(), {\n    override: undefined,\n    value: undefined,\n    label: undefined,\n    disabled: false,\n    visible: true,\n    icon: () => getDefault(\"tabs.icon\"),\n    iconPack: () => getDefault(\"tabs.iconPack\"),\n    tag: () => getDefault(\"tabs.itemTag\", \"button\"),\n    content: undefined,\n    component: undefined,\n    props: undefined,\n    events: undefined,\n});\n\nconst emits = defineEmits<{\n    /** on tab item activate event */\n    activate: [];\n    /** on tab item deactivate event */\n    deactivate: [];\n}>();\n\nconst itemValue = props.value ?? useId();\n\nconst slots = useSlots();\n\n// provided data is a computed ref to ensure reactivity\nconst providedData = computed<TabItemComponent<T>>(() => ({\n    ...props,\n    value: itemValue,\n    $slots: slots,\n    tabClasses: tabClasses.value,\n    iconClasses: tabIconClasses.value,\n    labelClasses: tabLabelClasses.value,\n    isTransitioning: isTransitioning.value,\n    activate,\n    deactivate,\n}));\n\n/** inject functionalities and data from the parent component */\nconst { parent, item } = useProviderChild<TabsComponent, TabItemComponent<T>>({\n    data: providedData,\n});\n\nconst transitionName = ref();\n\nconst isActive = computed(() => item.value.index === parent.value.activeIndex);\n\nconst isTransitioning = ref(false);\n\nconst nextAnimation = computed(() => {\n    const idx =\n        parent.value.vertical && parent.value.animation.length === 4 ? 2 : 0;\n    return parent.value.animation[idx];\n});\n\nconst prevAnimation = computed(() => {\n    const idx =\n        parent.value.vertical && parent.value.animation.length === 4 ? 3 : 1;\n    return parent.value.animation[idx];\n});\n\n/** Activate element, alter animation name based on the index. */\nfunction activate(oldIndex: number): void {\n    transitionName.value =\n        item.value.index < oldIndex ? nextAnimation.value : prevAnimation.value;\n\n    // emit event\n    emits(\"activate\");\n}\n\n/** Deactivate element, alter animation name based on the index. */\nfunction deactivate(newIndex: number): void {\n    transitionName.value =\n        newIndex < item.value.index ? nextAnimation.value : prevAnimation.value;\n\n    // emit event\n    emits(\"deactivate\");\n}\n\n/** Transition after-enter hook */\nfunction afterEnter(): void {\n    isTransitioning.value = true;\n}\n\n/** Transition before-leave hook */\nfunction beforeLeave(): void {\n    isTransitioning.value = true;\n}\n\n// --- Computed Component Classes ---\n\nconst tabClasses = defineClasses(\n    [\"tabClass\", \"o-tabs__tab\"],\n    [\"tabActiveClass\", \"o-tabs__tab--active\", null, isActive],\n    [\n        \"tabDisabledClass\",\n        \"o-tabs__tab--disabled\",\n        null,\n        computed(() => props.disabled),\n    ],\n    [\n        \"tabPreviousClass\",\n        \"o-tabs__tab--previous\",\n        null,\n        computed(() => item.value.index < parent.value?.activeIndex),\n    ],\n    [\n        \"tabNextClass\",\n        \"o-tabs__tab--next\",\n        null,\n        computed(() => item.value.index > parent.value?.activeIndex),\n    ],\n);\n\nconst tabIconClasses = defineClasses([\"tabIconClass\", \"o-tabs__tab-icon\"]);\n\nconst tabLabelClasses = defineClasses([\"tabLabelClass\", \"o-tabs__tab-label\"]);\n\nconst panelClasses = defineClasses([\"tabPanelClass\", \"o-tabs__panel\"]);\n</script>\n\n<template>\n    <Transition\n        v-if=\"parent\"\n        :css=\"parent.animated\"\n        :name=\"transitionName\"\n        :appear=\"parent.animateInitially\"\n        @after-enter=\"afterEnter\"\n        @before-leave=\"beforeLeave\">\n        <div\n            v-show=\"isActive && visible\"\n            v-bind=\"$attrs\"\n            :id=\"`tabpanel-${item.identifier}`\"\n            data-oruga=\"tabs-item\"\n            :data-id=\"`tabs-${item.identifier}`\"\n            :class=\"panelClasses\"\n            role=\"tabpanel\"\n            :hidden=\"!isActive\"\n            :aria-labelledby=\"`tab-${item.identifier}`\"\n            aria-roledescription=\"item\">\n            <!-- \n                @slot Override tab panel content\n                @binding {boolean} active - if item is shown \n            -->\n            <slot :active=\"isActive && visible\">\n                <!-- injected component -->\n                <component\n                    :is=\"component\"\n                    v-if=\"component\"\n                    v-bind=\"$props.props\"\n                    v-on=\"$props.events || {}\" />\n\n                <!-- default content prop -->\n                <template v-else>{{ content }}</template>\n            </slot>\n\n            <!--\n                Do not render these slots here.\n                These are only for documentation purposes.\n                Slots are defined in tabs component.\n            -->\n            <template v-if=\"false\">\n                <!--\n                    @slot Override tab header label\n                    @binding {boolean} active - if item is shown \n                -->\n                <slot name=\"header\" :active=\"isActive && visible\" />\n            </template>\n        </div>\n    </Transition>\n</template>\n","<script setup lang=\"ts\" generic=\"T\">\nimport {\n    computed,\n    ref,\n    watch,\n    watchEffect,\n    toValue,\n    nextTick,\n    onMounted,\n    useTemplateRef,\n} from \"vue\";\n\nimport OTabItem from \"../tabs/TabItem.vue\";\nimport OIcon from \"../icon/Icon.vue\";\nimport OSlotComponent from \"../utils/SlotComponent\";\n\nimport { getDefault } from \"@/utils/config\";\nimport { mod, isDefined } from \"@/utils/helpers\";\nimport {\n    defineClasses,\n    normalizeOptions,\n    useProviderParent,\n    useSequentialId,\n} from \"@/composables\";\n\nimport type { TabsComponent, TabItem, TabItemComponent } from \"./types\";\nimport type { TabsProps } from \"./props\";\n\n/**\n * Responsive horizontal navigation tabs, switch between contents with ease.\n * @displayName Tabs\n * @requires ./TabItem.vue\n * @style _tabs.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OTabs\",\n    configField: \"tabs\",\n});\n\ntype ModelValue = TabsProps<T>[\"modelValue\"];\n\nconst props = withDefaults(defineProps<TabsProps<T>>(), {\n    override: undefined,\n    modelValue: undefined,\n    options: undefined,\n    variant: () => getDefault(\"tabs.variant\"),\n    size: () => getDefault(\"tabs.size\"),\n    vertical: () => getDefault(\"tabs.vertical\", false),\n    position: undefined,\n    type: () => getDefault(\"tabs.type\", \"default\"),\n    tag: () => getDefault(\"tabs.tag\", \"div\"),\n    expanded: false,\n    activateOnFocus: false,\n    animated: () => getDefault(\"tabs.animated\", true),\n    animation: () =>\n        getDefault(\"tabs.animation\", [\n            \"slide-next\",\n            \"slide-prev\",\n            \"slide-down\",\n            \"slide-up\",\n        ]),\n    animateInitially: () => getDefault(\"tabs.animateInitially\", false),\n    multiline: false,\n    ariaLabel: () => getDefault(\"tabs.ariaLabel\"),\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {T} updated modelValue prop\n     */\n    \"update:model-value\": [value: ModelValue];\n    /**\n     * on tab change event\n     * @param value {T} new tab value\n     * @param value {T} old tab value\n     */\n    change: [newValue: ModelValue, oldValue: ModelValue];\n}>();\n\nconst rootRef = useTemplateRef(\"rootElement\");\n\n// provided data is a computed ref to ensure reactivity\nconst provideData = computed<TabsComponent>(() => ({\n    activeIndex: activeItem.value?.index ?? 0,\n    type: props.type,\n    vertical: props.vertical,\n    animated: props.animated,\n    animation: props.animation,\n    animateInitially: props.animateInitially,\n}));\n\n/** provide functionalities and data to child item components */\nconst { childItems } = useProviderParent<TabItemComponent<T>>({\n    rootRef,\n    data: provideData,\n});\n\nconst items = computed<TabItem<T>[]>(() => {\n    if (!childItems.value) return [];\n    return childItems.value.map((column) => ({\n        index: column.index,\n        identifier: column.identifier,\n        ...toValue(column.data!),\n    }));\n});\n\n// create a unique id sequence\nconst { nextSequence } = useSequentialId();\n\n/** normalized programamtic options */\nconst normalizedOptions = computed(() =>\n    normalizeOptions<T>(props.options, nextSequence),\n);\n\n/** The selected item value, use v-model to make it two-way binding */\nconst vmodel = defineModel<ModelValue>({ default: undefined });\n\n/**  When v-model is changed set the new active tab. */\nwatch(\n    () => props.modelValue,\n    (value) => {\n        if (vmodel.value !== value) performAction(value as T);\n    },\n);\n\n/** the active item */\nconst activeItem = ref<TabItem<T>>();\n\n// set the active item immediate and every time the vmodel changes\nwatchEffect(() => {\n    activeItem.value = isDefined(vmodel.value)\n        ? items.value.find((item) => item.value === vmodel.value) ||\n          items.value[0]\n        : items.value[0];\n});\n\nconst isTransitioning = computed(() =>\n    items.value.some((item) => item.isTransitioning),\n);\n\nonMounted(() => {\n    // set first tab as default if not defined\n    if (!vmodel.value) vmodel.value = items.value[0]?.value;\n});\n\n// --- EVENT HANDLER ---\n\n/** Tab item click listener, emit input event and change active child. */\nfunction itemClick(item: TabItem<T>): void {\n    if (vmodel.value !== item.value) performAction(item.value);\n}\n\n/** Focus the next item or wrap around. */\nfunction onNext(event: KeyboardEvent, index: number): void {\n    if (\n        (props.vertical && event.key == \"ArrowDown\") ||\n        (!props.vertical && event.key == \"ArrowRight\")\n    ) {\n        const newIndex = mod(index + 1, items.value.length);\n        const item = getFirstViableItem(newIndex, true);\n        moveFocus(item);\n    }\n}\n\n/** Focus the previous item or wrap around. */\nfunction onPrev(event: KeyboardEvent, index: number): void {\n    if (\n        (props.vertical && event.key == \"ArrowUp\") ||\n        (!props.vertical && event.key == \"ArrowLeft\")\n    ) {\n        const newIndex = mod(index - 1, items.value.length);\n        const item = getFirstViableItem(newIndex, false);\n        moveFocus(item);\n    }\n}\n\n/** Focus to the first viable item. */\nfunction onHomePressed(): void {\n    if (items.value.length < 1) return;\n    const item = getFirstViableItem(0, true);\n    moveFocus(item);\n}\n\n/** Focus to the last viable item. */\nfunction onEndPressed(): void {\n    if (items.value.length < 1) return;\n    const item = getFirstViableItem(items.value.length - 1, false);\n    moveFocus(item);\n}\n\n/** Set focus on a tab item or click it if `activateOnFocus`. */\nfunction moveFocus(item: TabItem<T>): void {\n    if (props.activateOnFocus) {\n        itemClick(item);\n    } else {\n        const el = rootRef.value?.querySelector<HTMLElement>(\n            `#tab-${item.identifier}`,\n        );\n        el?.focus();\n    }\n}\n\n/**\n * Get the first 'viable' child, starting at startingIndex and in the direction specified\n * by the boolean parameter forward. In other words, first try to select the child at index\n * startingIndex, and if it is not visible or it is disabled, then go to the index in the\n * specified direction until either returning to startIndex or finding a viable child item.\n */\nfunction getFirstViableItem(\n    startingIndex: number,\n    forward: boolean,\n): TabItem<T> {\n    const direction = forward ? 1 : -1;\n    let newIndex = startingIndex;\n    for (\n        ;\n        newIndex !== activeItem.value?.index;\n        newIndex = mod(newIndex + direction, items.value.length)\n    ) {\n        // Break if the item at this index is viable (not disabled and is visible)\n        if (items.value[newIndex].visible && !items.value[newIndex].disabled)\n            break;\n    }\n\n    return items.value[newIndex];\n}\n\n/** Activate next child and deactivate prev child. */\nfunction performAction(newValue: ModelValue): void {\n    const oldValue = vmodel.value;\n    const oldItem = activeItem.value;\n    const newItem =\n        items.value.find((item) => item.value === newValue) || items.value[0];\n\n    if (oldItem && newItem) {\n        oldItem.deactivate(newItem.index);\n        newItem.activate(oldItem.index);\n    }\n\n    nextTick(() => {\n        vmodel.value = newValue;\n        emits(\"change\", newValue, oldValue);\n    });\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-tabs\"],\n    [\n        \"positionClass\",\n        \"o-tabs--\",\n        computed(() => props.position),\n        computed(() => !!props.position),\n    ],\n    [\n        \"sizeClass\",\n        \"o-tabs--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\n        \"typeClass\",\n        \"o-tabs--\",\n        computed(() => props.type),\n        computed(() => !!props.type),\n    ],\n    [\"expandedClass\", \"o-tabs--expanded\", null, computed(() => props.expanded)],\n    [\"verticalClass\", \"o-tabs--vertical\", null, computed(() => props.vertical)],\n    [\n        \"multilineClass\",\n        \"o-tabs--multiline\",\n        null,\n        computed(() => props.multiline),\n    ],\n);\n\nconst tablistClasses = defineClasses([\"listClass\", \"o-tabs__list\"]);\n\nconst contentClasses = defineClasses(\n    [\"contentClass\", \"o-tabs__content\"],\n    [\n        \"transitioningClass\",\n        \"o-tabs__content--transitioning\",\n        null,\n        isTransitioning,\n    ],\n);\n</script>\n\n<template>\n    <div ref=\"rootElement\" data-oruga=\"tabs\" :class=\"rootClasses\">\n        <component\n            :is=\"props.tag\"\n            :class=\"tablistClasses\"\n            role=\"tablist\"\n            :aria-label=\"ariaLabel\"\n            :aria-orientation=\"vertical ? 'vertical' : 'horizontal'\">\n            <!--\n                @slot Additional slot before tabs\n            -->\n            <slot name=\"before\" />\n\n            <o-slot-component\n                v-for=\"childItem in items\"\n                v-show=\"childItem.visible\"\n                :id=\"`tab-${childItem.identifier}`\"\n                :key=\"childItem.identifier\"\n                :component=\"childItem\"\n                :tag=\"childItem.tag\"\n                name=\"header\"\n                :class=\"childItem.tabClasses\"\n                role=\"tab\"\n                :tabindex=\"childItem.value === activeItem?.value ? 0 : -1\"\n                :aria-current=\"\n                    childItem.value === activeItem?.value ? 'true' : undefined\n                \"\n                :aria-controls=\"`tabpanel-${childItem.identifier}`\"\n                :aria-selected=\"childItem.value === activeItem?.value\"\n                @click=\"itemClick(childItem)\"\n                @keydown.enter.prevent=\"itemClick(childItem)\"\n                @keydown.space.prevent=\"itemClick(childItem)\"\n                @keydown.left.prevent=\"onPrev($event, childItem.index)\"\n                @keydown.right.prevent=\"onNext($event, childItem.index)\"\n                @keydown.up.prevent=\"onPrev($event, childItem.index)\"\n                @keydown.down.prevent=\"onNext($event, childItem.index)\"\n                @keydown.home.prevent=\"onHomePressed\"\n                @keydown.end.prevent=\"onEndPressed\">\n                <o-icon\n                    v-if=\"childItem.icon\"\n                    :class=\"childItem.iconClasses\"\n                    :icon=\"childItem.icon\"\n                    :pack=\"childItem.iconPack\"\n                    :size=\"size\" />\n                <span :class=\"childItem.labelClasses\">\n                    {{ childItem.label }}\n                </span>\n            </o-slot-component>\n\n            <!--\n                @slot Additional slot after tabs\n            -->\n            <slot name=\"after\" />\n        </component>\n\n        <section :class=\"contentClasses\">\n            <!--\n                @slot Place tab items here\n            -->\n            <slot>\n                <o-tab-item\n                    v-for=\"option in normalizedOptions\"\n                    v-show=\"!option.hidden\"\n                    v-bind=\"option.attrs\"\n                    :key=\"option.key\"\n                    :value=\"option.value\"\n                    :label=\"option.label\" />\n            </slot>\n        </section>\n    </div>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Tabs from \"./Tabs.vue\";\nimport TabItem from \"./TabItem.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export tabs specific types */\nexport type * from \"./types\";\n\n/** export tabs plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Tabs);\n        registerComponent(app, TabItem);\n    },\n} as Plugin;\n\n/** export tabs components */\nexport { Tabs as OTabs, TabItem as OTabItem };\n","<script setup lang=\"ts\" generic=\"T = string\">\nimport {\n    computed,\n    useAttrs,\n    useTemplateRef,\n    useId,\n    watchEffect,\n    ref,\n    type Component,\n} from \"vue\";\n\nimport OIcon from \"../icon/Icon.vue\";\nimport OAutocomplete from \"../autocomplete/Autocomplete.vue\";\n\nimport { getDefault } from \"@/utils/config\";\nimport {\n    defineClasses,\n    getActiveClasses,\n    normalizeOptions,\n    findOption,\n    useInputHandler,\n    useSequentialId,\n    toOptionsGroup,\n    type OptionsGroupItem,\n} from \"@/composables\";\n\nimport type { TaginputProps } from \"./props\";\n\n/**\n * A simple tag input field that can have autocomplete functionality.\n * @displayName Taginput\n * @style _taginput.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OTaginput\",\n    configField: \"taginput\",\n    inheritAttrs: false,\n});\n\ntype ModelValue = TaginputProps<T>[\"modelValue\"];\n\nconst props = withDefaults(defineProps<TaginputProps<T>>(), {\n    override: undefined,\n    modelValue: undefined,\n    input: \"\",\n    options: undefined,\n    filter: undefined,\n    size: () => getDefault(\"taginput.size\"),\n    variant: () => getDefault(\"taginput.variant\"),\n    maxitems: undefined,\n    maxlength: undefined,\n    counter: () => getDefault(\"taginput.counter\", true),\n    openOnFocus: () => getDefault(\"taginput.openOnFocus\", true),\n    keepOpen: () => getDefault(\"taginput.keepOpen\", false),\n    placeholder: undefined,\n    expanded: false,\n    disabled: false,\n    keepFirst: () => getDefault(\"taginput.keepFirst\", false),\n    allowNew: () => getDefault(\"taginput.allowNew\", false),\n    allowDuplicates: () => getDefault(\"taginput.allowDuplicates\", false),\n    validateItem: () => true,\n    createItem: (item: T | string) => item as T,\n    checkScroll: () => getDefault(\"taginput.checkScroll\", false),\n    closable: () => getDefault(\"taginput.closable\", true),\n    iconPack: () => getDefault(\"taginput.iconPack\"),\n    icon: () => getDefault(\"taginput.icon\"),\n    closeIcon: () => getDefault(\"taginput.closeIcon\", \"close\"),\n    ariaCloseLabel: () => getDefault(\"taginput.ariaCloseLabel\", \"Remove\"),\n    autocomplete: () => getDefault(\"taginput.autocomplete\", \"off\"),\n    useHtml5Validation: () => getDefault(\"useHtml5Validation\", true),\n    customValidity: undefined,\n    teleport: () => getDefault(\"taginput.teleport\", false),\n    autocompleteClasses: () => getDefault(\"taginput.autocompleteClasses\", {}),\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {string[] | number[] | object[]} updated modelValue prop\n     */\n    \"update:model-value\": [value: ModelValue[]];\n    /**\n     * input prop two-way binding\n     * @param value {string} updated input prop\n     */\n    \"update:input\": [value: string];\n    /**\n     * on input change event\n     * @param value {string} input value\n     * @param event {Event} native event\n     */\n    input: [value: string, event: Event];\n    /**\n     * new item got added\n     * @param value {string | number | object} added item\n     */\n    add: [value: T];\n    /**\n     * item got removed\n     * @param value {string | number | object} removed item\n     */\n    remove: [value: T];\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    focus: [event: Event];\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    blur: [event: Event];\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    invalid: [event: Event];\n    /**\n     * on icon click event\n     * @param event {Event} native event\n     */\n    \"icon-click\": [event: Event];\n    /**\n     * on icon right click event\n     * @param event {Event} native event\n     */\n    \"icon-right-click\": [event: Event];\n    /** the list inside the dropdown reached the start */\n    \"scroll-start\": [];\n    /** the list inside the dropdown reached it's end */\n    \"scroll-end\": [];\n}>();\n\n// define as Component to prevent docs memmory overload\nconst autocompleteRef = useTemplateRef<Component>(\"autocompleteComponent\");\n\n// use form input functionalities\nconst { setFocus, onFocus, onBlur, onInvalid } = useInputHandler(\n    autocompleteRef,\n    emits,\n    props,\n);\n\nconst isDropdownActive = ref(false);\n\n// the selected items, use v-model to make it two-way binding\nconst selectedItems = defineModel<ModelValue>({ default: undefined });\n\n// the value of the inner input, use v-model:input to make it two-way binding\nconst inputValue = defineModel<string>(\"input\", { default: \"\" });\n\nconst inputLength = computed(() => inputValue.value.trim().length);\nconst itemsLength = computed(() => selectedItems.value?.length || 0);\n\n// create a unique id sequence\nconst { nextSequence } = useSequentialId();\n\n/** normalized programamtic options */\nconst groupedOptions = computed<OptionsGroupItem<T>[]>(() => {\n    const normalizedOptions = normalizeOptions<T>(props.options, nextSequence);\n    const groupedOptions = toOptionsGroup<T>(normalizedOptions, nextSequence());\n    return groupedOptions;\n});\n\n/** map the selected items into option items */\nconst selectedOptions = computed(() => {\n    if (!selectedItems.value) return [];\n    return selectedItems.value.map((value) => {\n        const option = findOption<T>(groupedOptions, value);\n        // return the found option or create a new option object\n        if (option) return option;\n        else return { label: value, value, key: useId() };\n    });\n});\n\n/** show the input field if a maxitems hasn't been set or reached */\nconst hasInput = computed(\n    () => props.maxitems == null || itemsLength.value < Number(props.maxitems),\n);\n\nwatchEffect(() => {\n    // blur if input is empty\n    if (!hasInput.value) onBlur(new Event(\"blur\"));\n});\n\nfunction addItem(item?: T | string): void {\n    item = item || inputValue.value.trim();\n\n    if (item) {\n        const itemToAdd = props.createItem(item);\n\n        if (!selectedItems.value?.length) {\n            // Add the item input if not items are set yet\n            if (props.validateItem(item)) {\n                selectedItems.value = [itemToAdd];\n                emits(\"add\", itemToAdd);\n            }\n        } else {\n            // Add the item input if it is not blank\n            // or previously added (if not allowDuplicates).\n            const add = !props.allowDuplicates\n                ? !selectedItems.value.includes(itemToAdd)\n                : true;\n\n            if (add && props.validateItem(item)) {\n                selectedItems.value = [...selectedItems.value, itemToAdd];\n                emits(\"add\", itemToAdd);\n            }\n        }\n    }\n\n    // after autocomplete events\n    requestAnimationFrame(() => {\n        inputValue.value = \"\";\n        emits(\"input\", \"\", new Event(\"input\"));\n    });\n}\n\nfunction removeItem(index: number, event?: Event): void {\n    if (!selectedItems.value?.length) return;\n    const item = selectedItems.value.at(index);\n    if (!item) return;\n    selectedItems.value = selectedItems.value.toSpliced(index, 1);\n    emits(\"remove\", item);\n    if (event) event.stopPropagation();\n    if (props.openOnFocus && autocompleteRef.value) setFocus();\n}\n\n// --- Event Handler ---\n\nfunction onSelect(option: T | undefined): void {\n    if (!option) return;\n    addItem(option);\n}\n\nfunction onInput(value: string, event: Event): void {\n    emits(\"input\", value?.trim(), event);\n}\n\nfunction onBackspace(): void {\n    if (!inputValue.value?.length && itemsLength.value > 0)\n        // remove last item\n        removeItem(itemsLength.value - 1);\n}\n\nfunction onEnter(): void {\n    // Add item if not select only and dropdown selection is closed\n    if (props.allowNew && !isDropdownActive.value) addItem();\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-taginput\"],\n    [\n        \"sizeClass\",\n        \"o-taginput--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\n        \"variantClass\",\n        \"o-taginput--\",\n        computed(() => props.variant),\n        computed(() => !!props.variant),\n    ],\n    [\n        \"expandedClass\",\n        \"o-taginput--expanded\",\n        null,\n        computed(() => props.expanded),\n    ],\n);\n\nconst containerClasses = defineClasses([\n    \"containerClass\",\n    \"o-taginput__container\",\n]);\n\nconst itemClasses = defineClasses(\n    [\"itemClass\", \"o-taginput__item\"],\n    [\n        \"variantClass\",\n        \"o-taginput__item--\",\n        computed(() => props.variant),\n        computed(() => !!props.variant),\n    ],\n);\n\nconst closeClasses = defineClasses([\"closeClass\", \"o-taginput__item__close\"]);\n\nconst counterClasses = defineClasses([\"counterClass\", \"o-taginput__counter\"]);\n\nconst autocompleteRootClasses = defineClasses([\n    \"autocompleteClasses.rootClass\",\n    \"o-taginput__autocomplete\",\n]);\n\nconst autocompleteInputClasses = defineClasses([\n    \"autocompleteClasses.inputClasses.inputClass\",\n    \"o-taginput__input\",\n]);\n\nconst attrs = useAttrs();\n\nconst autocompleteBind = computed(() => ({\n    ...attrs,\n    \"root-class\": getActiveClasses(autocompleteRootClasses),\n    \"input-classes\": {\n        \"input-class\": getActiveClasses(autocompleteInputClasses),\n    },\n    ...props.autocompleteClasses,\n}));\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: setFocus, value: selectedItems });\n</script>\n\n<template>\n    <div data-oruga=\"taginput\" :class=\"rootClasses\">\n        <div :class=\"containerClasses\" @focus=\"onFocus\" @blur=\"onBlur\">\n            <!--\n                @slot Override selected items\n                @binding {(string, object)[]} items - selected items\n                @binding {object[]} options - selected options\n            -->\n            <slot\n                name=\"selected\"\n                :items=\"selectedItems\"\n                :options=\"selectedOptions\"\n                :remove-item=\"removeItem\">\n                <span\n                    v-for=\"(option, index) in selectedOptions\"\n                    :key=\"option.key\"\n                    :class=\"itemClasses\">\n                    <span> {{ option.label }}</span>\n\n                    <o-icon\n                        v-if=\"closable && !disabled\"\n                        :class=\"closeClasses\"\n                        :pack=\"iconPack\"\n                        :icon=\"closeIcon\"\n                        clickable\n                        tabindex=\"0\"\n                        role=\"button\"\n                        :aria-label=\"ariaCloseLabel\"\n                        both\n                        @keydown.enter=\"removeItem(index, $event)\"\n                        @click=\"removeItem(index, $event)\" />\n                </span>\n            </slot>\n\n            <o-autocomplete\n                v-show=\"hasInput\"\n                ref=\"autocompleteComponent\"\n                v-model:active=\"isDropdownActive\"\n                v-model:input=\"inputValue\"\n                v-bind=\"autocompleteBind\"\n                :options=\"options\"\n                :filter=\"filter\"\n                :placeholder=\"placeholder\"\n                :icon=\"icon\"\n                :icon-pack=\"iconPack\"\n                :maxlength=\"maxlength\"\n                :size=\"size\"\n                :disabled=\"disabled\"\n                :autocomplete=\"autocomplete\"\n                :open-on-focus=\"openOnFocus\"\n                :keep-first=\"keepFirst\"\n                :keep-open=\"keepOpen\"\n                :check-scroll=\"checkScroll\"\n                :teleport=\"teleport\"\n                :has-counter=\"false\"\n                :use-html5-validation=\"false\"\n                expanded\n                @input=\"onInput\"\n                @focus=\"onFocus\"\n                @blur=\"onBlur\"\n                @invalid=\"onInvalid\"\n                @keydown.enter=\"onEnter\"\n                @keydown.tab=\"onEnter\"\n                @keydown.backspace=\"onBackspace\"\n                @select=\"onSelect\"\n                @scroll-start=\"$emit('scroll-start')\"\n                @scroll-end=\"$emit('scroll-end')\"\n                @icon-click=\"$emit('icon-click', $event)\"\n                @icon-right-click=\"$emit('icon-right-click', $event)\">\n                <template v-if=\"$slots.header\" #header>\n                    <!--\n                        @slot Define an additional header\n                    -->\n                    <slot name=\"header\" />\n                </template>\n\n                <template\n                    v-if=\"$slots.default\"\n                    #default=\"{ option, index, value }\">\n                    <!--\n                        @slot Override the select option\n                        @binding {object} option - option object\n                        @binding {number} index - option index\n                        @binding {unknown} value - option value\n                    -->\n                    <slot :option=\"option\" :index=\"index\" :value=\"value\" />\n                </template>\n\n                <template v-if=\"$slots.empty\" #empty>\n                    <!--\n                        @slot Define content for empty state \n                    -->\n                    <slot name=\"empty\" />\n                </template>\n\n                <template v-if=\"$slots.footer\" #footer>\n                    <!--\n                        @slot Define an additional footer\n                    -->\n                    <slot name=\"footer\" />\n                </template>\n            </o-autocomplete>\n        </div>\n\n        <small\n            v-if=\"counter && (maxitems || maxlength)\"\n            :class=\"counterClasses\">\n            <template v-if=\"maxlength && inputLength > 0\">\n                <!--\n                    @slot Override the counter\n                    @binding {number} items - items count\n                    @binding {number} total - total count\n                -->\n                <slot name=\"counter\" :items=\"inputLength\" :total=\"maxlength\">\n                    {{ inputLength }} / {{ maxlength }}\n                </slot>\n            </template>\n\n            <template v-else-if=\"maxitems\">\n                <!--\n                    @slot Override the counter\n                    @binding {number} items - items count\n                    @binding {number} total - total count\n                -->\n                <slot name=\"counter\" :items=\"itemsLength\" :total=\"maxitems\">\n                    {{ itemsLength }} / {{ maxitems }}\n                </slot>\n            </template>\n        </small>\n    </div>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Taginput from \"./Taginput.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export taginput plugin */\nexport default {\n    install(Vue: App) {\n        registerComponent(Vue, Taginput);\n    },\n} as Plugin;\n\n/** export taginput components */\nexport { Taginput as OTaginput };\n","import type { App, Plugin } from \"vue\";\n\nimport Timepicker from \"./Timepicker.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export timepicker plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Timepicker);\n    },\n} as Plugin;\n\n/** export timepicker components */\nexport { Timepicker as OTimepicker };\n","import type { App, Plugin } from \"vue\";\n\nimport Tooltip from \"./Tooltip.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export tooltip plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Tooltip);\n    },\n} as Plugin;\n\n/** export tooltip components */\nexport { Tooltip as OTooltip };\n","<script\n    setup\n    lang=\"ts\"\n    generic=\"\n        T extends object | typeof File,\n        IsMultiple extends boolean = false\n    \">\nimport { computed, ref, useAttrs, useTemplateRef, watch } from \"vue\";\n\nimport { getDefault } from \"@/utils/config\";\nimport { File } from \"@/utils/ssr\";\nimport { isTrueish } from \"@/utils/helpers\";\nimport { defineClasses, useInputHandler } from \"@/composables\";\n\nimport { injectField } from \"../field/fieldInjection\";\n\nimport type { UploadProps } from \"./props\";\n\n/**\n * Upload one or more files.\n * @displayName Upload\n * @style _upload.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OUpload\",\n    configField: \"upload\",\n    inheritAttrs: false,\n});\n\ntype ModelValue = UploadProps<T, IsMultiple>[\"modelValue\"];\n\nconst props = withDefaults(defineProps<UploadProps<T, IsMultiple>>(), {\n    override: undefined,\n    modelValue: undefined,\n    // multiple: false,\n    variant: () => getDefault(\"upload.variant\"),\n    disabled: false,\n    accept: undefined,\n    dragDrop: false,\n    expanded: false,\n    native: true,\n    useHtml5Validation: () => getDefault(\"useHtml5Validation\", true),\n    customValidity: \"\",\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {object | object[] | File | File[]} updated modelValue prop\n     */\n    \"update:model-value\": [value: ModelValue];\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    focus: [event: Event];\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    blur: [event: Event];\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    invalid: [event: Event];\n}>();\n\nconst inputRef = useTemplateRef(\"inputElement\");\n\n// use form input functionality\nconst { checkHtml5Validity, onFocus, onBlur, onInvalid, isValid, setFocus } =\n    useInputHandler(inputRef, emits, props);\n\n// inject parent field component if used inside one\nconst { parentField } = injectField();\n\nconst vmodel = defineModel<ModelValue>({ default: undefined });\n\nconst dragDropFocus = ref(false);\n\n/**\n * When v-model is changed:\n * 1. Reset interna input file value\n * 2. If it's invalid, validate again.\n */\nwatch(vmodel, (value) => {\n    if (!value || (Array.isArray(value) && value.length === 0))\n        if (inputRef.value) inputRef.value.value = \"\";\n    if (!isValid.value && !props.dragDrop) checkHtml5Validity();\n});\n\n/**\n * Listen change event on input type 'file',\n * emit 'input' event and validate\n */\nfunction onFileChange(event: Event | DragEvent): void {\n    if (props.disabled) return;\n    if (props.dragDrop) updateDragDropFocus(false);\n    const value =\n        (event.target as HTMLInputElement).files ||\n        (event as DragEvent).dataTransfer?.files ||\n        [];\n    // no file selected\n    if (value.length === 0) {\n        if (!vmodel.value) return;\n        if (props.native) vmodel.value = undefined;\n    }\n\n    // multiple upload\n    if (isTrueish(props.multiple)) {\n        // always new values if native or undefined local\n        const values =\n            props.native || !vmodel.value || !Array.isArray(vmodel.value)\n                ? []\n                : [...vmodel.value];\n\n        for (let i = 0; i < value.length; i++) {\n            const file = value[i];\n            // add file when type is valid\n            if (checkType(file)) values.push(file);\n        }\n        vmodel.value = values as ModelValue;\n    }\n    // single uplaod\n    else {\n        // only one element in case drag drop mode and isn't multiple\n        if (props.dragDrop && value.length !== 1) return;\n        else {\n            const file = value[0];\n            // add file when type is valid\n            if (checkType(file)) vmodel.value = file as ModelValue;\n            // else clear input\n            else if (vmodel.value) {\n                vmodel.value = undefined;\n                clearInput();\n            } else {\n                // Force input back to empty state and recheck validity\n                clearInput();\n                checkHtml5Validity();\n                return;\n            }\n        }\n    }\n\n    if (!props.dragDrop) checkHtml5Validity();\n}\n\n/** Reset file input value */\nfunction clearInput(): void {\n    if (inputRef.value) inputRef.value.value = \"\";\n}\n\n/** Listen drag-drop to update internal variable */\nfunction updateDragDropFocus(focus: boolean): void {\n    if (!props.disabled) dragDropFocus.value = focus;\n}\n\n/** Check mime type of file s*/\nfunction checkType(file: File): boolean {\n    if (!props.accept) return true;\n    const types = props.accept.split(\",\");\n    if (types.length === 0) return true;\n    for (let i = 0; i < types.length; i++) {\n        const type = types[i].trim();\n        if (type) {\n            if (type.substring(0, 1) === \".\") {\n                const extension = file.name.toLowerCase().slice(-type.length);\n                if (extension === type.toLowerCase()) return true;\n            } else {\n                // check mime type\n                if (file.type.match(type)) return true;\n            }\n        }\n    }\n    return false;\n}\n\nfunction onClick(event: Event): void {\n    if (props.disabled) return;\n\n    // click input if not drag and drop is used\n    if (!props.dragDrop) {\n        event.preventDefault();\n        if (inputRef.value) inputRef.value.click();\n    }\n}\n\n// --- Computed Component Classes ---\n\nconst attrs = useAttrs();\n\nconst inputBind = computed(() => ({\n    ...parentField?.value?.inputAttrs,\n    ...attrs,\n}));\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-upload\"],\n    [\n        \"expandedClass\",\n        \"o-upload--expanded\",\n        null,\n        computed(() => props.expanded),\n    ],\n    [\n        \"disabledClass\",\n        \"o-upload--disabled\",\n        null,\n        computed(() => props.disabled),\n    ],\n);\n\nconst draggableClasses = defineClasses(\n    [\"draggableClass\", \"o-upload__draggable\"],\n    [\n        \"hoveredClass\",\n        \"o-upload__draggable--hovered\",\n        null,\n        computed(() => !props.variant && dragDropFocus.value),\n    ],\n    [\n        \"variantClass\",\n        \"o-upload__draggable--hovered-\",\n        computed(() => props.variant),\n        computed(() => !!props.variant && dragDropFocus.value),\n    ],\n);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: setFocus, value: vmodel });\n</script>\n\n<template>\n    <label data-oruga=\"upload\" :class=\"rootClasses\">\n        <template v-if=\"!dragDrop\">\n            <!--\n                @slot Default content\n                @binding {(event:Event): void} onclick - click handler, only needed if a button is used\n            -->\n            <slot :onclick=\"onClick\" />\n        </template>\n\n        <div\n            v-else\n            :class=\"draggableClasses\"\n            role=\"button\"\n            tabindex=\"0\"\n            @mouseenter=\"updateDragDropFocus(true)\"\n            @mouseleave=\"updateDragDropFocus(false)\"\n            @dragover.prevent=\"updateDragDropFocus(true)\"\n            @dragleave.prevent=\"updateDragDropFocus(false)\"\n            @dragenter.prevent=\"updateDragDropFocus(true)\"\n            @drop.prevent=\"onFileChange\">\n            <!--\n                @slot Default content     \n                @binding {(event:Event): void} onclick - click handler, only needed if a button is used\n            -->\n            <slot :onclick=\"onClick\" />\n        </div>\n\n        <input\n            v-bind=\"inputBind\"\n            ref=\"inputElement\"\n            type=\"file\"\n            data-oruga-input=\"file\"\n            :multiple=\"props.multiple\"\n            :accept=\"accept\"\n            :disabled=\"disabled\"\n            @change=\"onFileChange\"\n            @focus=\"onFocus\"\n            @blur=\"onBlur\"\n            @invalid=\"onInvalid\" />\n    </label>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Upload from \"./Upload.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export upload plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Upload);\n    },\n} as Plugin;\n\n/** export upload components */\nexport { Upload as OUpload };\n","import type { App, Plugin } from \"vue\";\nimport type { OrugaOptions } from \"./types\";\n\nimport * as plugins from \"./components/plugins\";\n\nimport { ConfigProgrammatic, OrugaConfig } from \"./utils/config\";\nimport { registerPlugin, registerComponentProgrammatic } from \"./utils/plugins\";\n\n// export all types\nexport * from \"./types\";\nexport * from \"./components/types\";\n\n// export all helper functions\nexport * from \"./utils/helpers\";\n\n// export all vue components\nexport * from \"./components\";\n// export all components as vue plugin\nexport * from \"./components/plugins\";\n\n// export programmatic config\nexport { OrugaConfig, ConfigProgrammatic };\n\n// export programmatic composable\nexport { useOruga, type OrugaProgrammatic } from \"./utils/programmatic\";\n\n// main oruga vue plugin\nconst plugin: Plugin = {\n    install(app: App, options: OrugaOptions = {}) {\n        // initialise config with options\n        app.use(OrugaConfig, options);\n\n        // add all components\n        for (const componentKey in plugins) {\n            registerPlugin(app, plugins[componentKey]);\n        }\n\n        // add programmatic config component\n        registerComponentProgrammatic(app, \"config\", ConfigProgrammatic);\n    },\n};\n\n// export default oruga vue plugin\nexport { plugin as Oruga };\nexport default plugin;\n"],"names":["signPoly","value","sign","mod","n","pad","bound","val","min","max","isObject","isDate","isDefined","isTrueish","blankIfUndefined","defaultIfUndefined","defaultValue","toCssDimension","width","dimension","sortBy","array","key","fn","isAsc","mutate","a","b","newA","getValueByPath","newB","isEqual","valueA","valueB","keys1","keys2","val1","val2","areObjects","index","isElement","el","getPropertyValue","obj","field","formatter","property","label","merge","target","source","deep","mergeDeep","targetValue","sourceValue","path","o","i","setValueByPath","p","removeElement","escapeRegExpChars","removeDiacriticsFromString","isVNodeEmpty","vnode","Comment","Text","Fragment","isMobileAgent","oruga","ref","addProgrammatic","component","useOruga","VueInstance","setVueInstance","Vue","registerPlugin","app","plugin","registerComponent","registerComponentProgrammatic","isClient","isSSR","globalOptions","setOptions","options","getOptions","toRaw","getOption","getDefault","ConfigProgrammatic","OrugaConfig","mdiIcons","faIcons","faIconPrefix","getIcons","icons","customIconPacks","unrefElement","elRef","plain","toValue","resolveElement","targetQuery","getActiveClasses","classes","values","bind","v","defineClasses","args","classDefinitions","vm","getCurrentInstance","getCurrentScope","scope","effectScope","onScopeDispose","defintion","className","defaultClass","suffix","apply","getClassBind","computedClass","computeClass","applied","watch","_a","classBind","isRef","oldValue","props","getProps","componentKey","config","globalClass","localClass","suffixProcessor","globalOverride","localOverride","appliedClasses","globalTransformClasses","localTransformClasses","input","cls","useEventListener","element","event","handler","cleanup","register","optionsClone","stopWatch","onMounted","stop","useMatchMedia","mobileBreakpoint","isMobile","mediaQuery","configField","defaultWidth","onMatchMedia","$FieldKey","provideField","data","provide","injectField","parentField","inject","computed","statusMessage","statusVariant","statusVariantIconConfig","statusVariantIcon","validatableFormElementTypes","asValidatableFormElement","t","constraintValidationAttributes","useInputHandler","inputRef","emits","maybeElement","inputs","isFocused","setFocus","nextTick","doClick","onBlur","checkHtml5Validity","onFocus","isValid","setFieldValidity","variant","message","setInvalid","onInvalid","validatable","isFirstInvalid","formElements","fieldElement","invalidHandler","canScrollToField","forceValidationUpdate","watchEffect","validity","newItems","oldItems","newElement","newUseValidation","oldElement","oldUseValidation","onAttributeChange","triggerRef","validationAttributeObserver","newData","oldData","valid","useValidation","functionalValidation","oldEl","needWatcher","ancestor","useDebounce","func","wait","immediate","timeout","later","useSequentialId","start","sequence","nextSequence","useProviderParent","childItems","sortHandler","items","parent","ids","item","children","sortedIds","registerItem","identifier","unregisterItem","useProviderChild","_b","onUnmounted","useClickOutside","elements","listenerOptions","ignores","shouldIgnore","listener","getScrollingParent","isScrollingParent","nextParent","overflow","overflowY","scrollHeight","clientHeight","normalizeOptions","uuid","option","isGroupOption","toOptionsGroup","toOptionsList","list","group","filterOptionsItems","filter","idx","checkOptionsEmpty","isOptionViable","findOption","found","usePreventScrolling","clipScroll","scrollClipClasses","scrollKeepClasses","scrollClass","savedScrollTop","onBeforeUnmount","toggleScroll","active","useTeleportDefault","findFocusable","useTrapFocus","onKeyDown","applyHandler","focusable","firstFocusable","lastFocusable","__props","rootStyle","style","iconConfig","iconPrefix","customSizeByPack","computedIcon","getEquivalentIconOf","computedSize","computedVariant","newVariant","rootClasses","__emit","useTemplateRef","vmodel","_useModel","valueLength","resize","height","computedStyles","debouncedInput","debounce","onInput","placeholderVisible","hasIconRight","computedIconRight","passwordVisibleIcon","computedIconRightVariant","iconClick","rightIconClick","togglePasswordVisibility","isPasswordVisible","inputType","attrs","useAttrs","inputBind","inputClasses","iconLeftClasses","iconRightClasses","counterClasses","__expose","itemValue","useId","rootRef","providedData","selectItem","isClickable","isSelected","selected","focusItem","opposites","_teleport","contentRef","setContent","updatePositioning","addHandler","initialPosition","scrollingParent","resizeObserver","removeHandler","position","getAutoPosition","content","trigger","rect","top","left","bestPosition","viewRect","contentRect","triggerRect","triggerAnchors","anchors","contentAnchors","contentRectAtAnchor","pos","triggerAnchor","contentAnchor","defaultOpposite","crossPosition","crossOpposite","positions","maxOverlap","overlap","intersectionArea","right","bottom","maintainScrollVisibility","activeElement","scrollParent","offsetHeight","offsetTop","parentOffsetHeight","scrollTop","isAbove","isBelow","useInfiniteScroll","elementRef","onEnd","onStart","checkScroll","trashhold","menuRef","provideData","focusedItem","groupedOptions","normalizedOptions","isNotEmpty","isItemViable","isActive","labelId","autoPosition","isMobileNative","isModal","menuStyle","hoverable","onClickedOutside","onPageScroll","moveFocus","close","onTriggerClick","toggle","onTriggerContextMenu","open","onTriggerFocus","onTriggerHover","onTriggerHoverLeave","method","timer","delta","getFirstViableItem","dropdownMenu","onUpPressed","onDownPressed","onEnter","onHomePressed","onEndPressed","onEscape","startingIndex","newIndex","_c","triggerClasses","teleportClasses","overlayClasses","menuClasses","slots","useSlots","selectedValue","inputValue","menuId","filterItems","isEmpty","empty","dropdownValue","currentOption","setSelected","handleFocus","handleBlur","computedIconRightClickable","itemClasses","itemEmptyClasses","itemGroupClasses","itemHeaderClasses","itemFooterClasses","index$t","Autocomplete","computedTag","computedNativeType","wrapperClasses","labelClasses","iconClasses","index$s","Button","activeIndex","total","itemWidth","onDragStart","switchTo","indicatorItems","settings","onRefresh","windowWidth","hasReducedMotion","startTimer","onDragEnd","pauseTimer","breakpoint","readonly","hasArrows","isHovered","hasPrev","onPrev","hasNext","onNext","onChange","isAutoplayPaused","onMouseEnter","onMouseLeave","status","onToggleAutoplay","dragX","isDragging","translation","onDragOver","dragEndX","signCheck","results","itemsClasses","prevIconClasses","nextIconClasses","autoplayIconClasses","indicatorsClasses","indicatorClasses","indicatorItemClasses","indicatorItemActiveClasses","indicatorItemAppliedClasses","activeClasses","itemStyle","onClick","index$r","Carousel","CarouselItem","isChecked","index$q","Checkbox","isOpen","contentClasses","index$p","Collapse","selectRef","rightIcon","rightIconVariant","emit","leftIconClick","selectClasses","dropdownRef","nativeInputRef","initialNativeType","setValue","date","checkMinMaxDate","onActiveChange","triggers","onKeyPress","togglePicker","onInputClick","onNativeClick","onNativeFocus","onNativeBlur","onNativeChange","dropdownBind","getMonthNames","locale","format","dates","dtf","d","getWeekdayNames","firstDayOfWeek","j","matchWithGroups","pattern","str","matches","groupMatches","match","acc","curr","weekBuilder","startingDate","month","year","thisMonth","thisWeek","dayOfWeek","end","daysAgo","daysForward","firstWeekOffset","dow","doy","fwd","daysInYear","weeksInYear","weekOffset","weekOffsetNext","useDatepickerMixins","isDateSelectable","enabledDate","disabledDate","isTypeMonth","localeOptions","dtfMonth","sampleTime","dateCreator","dateFormatter","targetDates","dateParser","isArray","formatRegex","part","dateGroups","s","hasEvents","dayRefs","setDayRef","refKey","day","clickWeekNumber","week","getDayOfYear","getWeekNumber","mom","resWeek","resYear","eventsDateMatch","onKeydown","weekDay","preventDefault","selectDate","changeFocus","inc","nextDay","setRangeHoverEndDate","dateMatch","dateOne","dateTwo","multiple","dateWithin","cellClasses","tableCellClasses","cellEventsClass","eventClasses","tableRowClasses","tableEventsClasses","focusedDateModel","selectedBeginDate","selectedEndDate","hoveredEndDate","visibleDayNames","currentDayName","eventsInThisMonth","weeksInThisMonth","validateFocusedDay","startingDay","newWeek","eventsInThisWeek","stripped","timed","weekDate","hoveredDateRange","currentDate","monthDays","onSelectedDate","handleSelectMultipleDates","handleSelectRangeDate","multipleSelectedDates","selectedDate","onRangeHoverEndDate","onChangeFocus","tableClasses","tableHeadClasses","tableHeadCellClasses","tableBodyClasses","monthRefs","setMonthRef","eventsInThisYear","monthDates","months","focused","dateMultipleSelected","monthClasses","monthTableClasses","monthCellClasses","monthEventsClasses","pickerRef","focusedDateData","_initialDate","computedMonthNames","listOfMonths","minMonth","maxMonth","name","computedDayNames","listOfYears","latestYear","earliestYear","showPrev","dateToCheck","prev","showNext","next","isNative","formatNative","parse","parseNative","prevDate","nextDate","boxClasses","boxClassBind","headerClasses","prevButtonClasses","nextButtonClasses","listsClasses","footerClasses","pickerDropdownClasses","index$o","Datepicker","AM","PM","HOUR_FORMAT_24","HOUR_FORMAT_12","useTimepickerMixins","isHourFormat24","timeCreator","amString","dayPeriod","pmString","meridiens","hourLiteral","parts","literal","minuteLiteral","secondLiteral","timeFormatter","time","timeParser","timeGroups","am","dateString12","timeSplit","hours","minutes","seconds","hoursSelected","minutesSelected","secondsSelected","meridienSelected","updateValue","step","formatNumber","prependZero","numberOfHours","isHourDisabled","hour","disabled","minHours","noMinutesAvailable","minute","isMinuteDisabledForHour","maxHours","minMinutes","maxMinutes","isMinuteDisabled","isSecondDisabled","second","minSeconds","maxSeconds","isMeridienDisabled","meridienString","offset","updateDateSelected","onMeridienChange","onHoursChange","onMinutesChange","onSecondsChange","separatorClasses","selectSelectClasses","selectPlaceholderClasses","selectBind","useDateimepickerMixins","datetimeCreator","datetimeFormatter","datetimeParser","dayPeriods","datetimeGroups","datepickerRef","timepickerProps","datepickerProps","updateVModel","minDate","maxDate","minTime","maxTime","datepickerSize","timepickerSize","timepickerDisabled","onChangeNativePicker","datepickerWrapperClasses","timepickerWrapperClasses","index$n","Datetimepicker","index$m","Dropdown","DropdownItem","inputId","fieldVariant","fieldMessage","isFilled","hasInnerField","hasLabel","hasMessage","hasBody","hasAddons","getInnerContent","slot","addInnerField","setFilled","setVariant","setMessage","setInputId","inputAttrs","horizontalLabelClasses","horizontalBodyClasses","bodyClasses","innerBodyClasses","messageClasses","index$l","Field","index$k","Icon","index$j","Input","isFullPage","cancel","InstanceRegistry","__publicField","entry","callback","e","ProgrammaticComponent","defineComponent","expose","resolve","promise","p1","createVNode","registry","ComponentProgrammatic","container","onDestroy","createApp","index$i","LoadingProgrammatic","_options","componentProps","Loading","index$h","isExpanded","setExpand","triggerReset","menuItem","hasChildren","reset","childs","state","buttonClasses","submenuClasses","resetMenu","excludedItems","selectedItem","onCollapse","onExpend","_d","onFocusLeave","listClasses","index$g","Menu","MenuItem","vTrapFocus","showX","customStyle","isAnimating","afterEnter","beforeLeave","closeClasses","ModalProgrammatic","Modal","index$f","notificationRef","parentTop","parentBottom","onBeforeMount","noticeClasses","positionBottomClasses","positionTopClasses","topClasses","bottomClasses","noticeContainerClasses","c","showNotice","setAutoClose","correctParent","shouldQueue","isAlert","NotificationProgrammatic","NotificationNotice","index$e","Notification","currentPage","pageCount","firstItem","perPage","isFirst","hasFirst","hasFirstEllipsis","isLast","hasLast","hasLastEllipsis","pagesInRange","pages","getPage","num","ariaLabel","changePage","getAriaPageLabel","pageNumber","isCurrent","first","last","page","infoClasses","ellipsisClasses","listItemClasses","buttonCurrentClasses","buttonPrevClasses","buttonNextClasses","index$d","Pagination","index$c","Radio","index$b","Select","index$a","Skeleton","transitionName","vertical","hideOnMobile","clickedOutside","SidebarProgrammatic","Sidebar","index$9","tooltipId","cancelOptions","onContextMenu","onHover","onClose","arrowClasses","dragging","startX","startPosition","newPosition","tooltip","tooltipAlways","indicator","precision","precisions","decimal","computedTooltipVariant","currentPosition","wrapperStyle","formattedValue","onButtonDown","onDragging","onLeftKeyDown","setPosition","onRightKeyDown","onHomeKeyDown","onEndKeyDown","diff","percent","stepLength","hidden","tickStyle","tickLabelClasses","sliderRef","thumbStartRef","thumbEndRef","valueStart","valueEnd","isThumbReversed","isTrackClickDisabled","minValue","maxValue","isRange","setValues","newValue","smallValue","largeValue","tickValues","result","barSize","barStart","barStyle","getSliderSize","onSliderClick","sliderOffsetLeft","diffFirst","diffSecond","trackClasses","fillClasses","thumbWrapperClasses","thumbClasses","index$8","Slider","SliderTick","stepClasses","stepIconClasses","stepLabelClasses","isTransitioning","activate","deactivate","nextAnimation","prevAnimation","oldIndex","panelClasses","activeItem","column","performAction","activateItem","fowardIndex","itemClick","getFirstViableIndex","viableIndex","forward","direction","oldItem","newItem","tablistClasses","dividerClasses","markerClasses","navigationClasses","index$7","Steps","StepItem","index$6","Switch","OSlotComponent","_props","mobileSort","showPlaceholder","sortableColumns","isCurrentSort","sort","isHeaderUnselectable","thClasses","tdClasses","pageChanged","newPage","isMobileActive","slotsRef","isColumnSorted","tableColumns","columnItem","thAttrsData","tdAttrsData","tdAttrs","columnCount","showDetailRowIcon","ariaColIndexStart","hasSubheadings","isScrollable","tableCurrentPage","filterTableRows","tableRows","availableRows","pageStart","pageEnd","row","isRowFiltered","tableTotal","rowCount","ariaRowIndexStart","hasSearchableColumns","hasCustomFooterSlot","footer","tag","getColumnValue","isRowEqual","sourceRow","targetRow","el1","el2","tableSelectedRow","onArrowPressed","selectRow","filters","debouncedFilter","handleFiltersChange","onFiltersEvent","re","currentSortColumn","hasSortableColumns","initSort","sortField","sortDirection","sortByField","sortColumn","updateDirection","sortByColumn","rows","asc","tableCheckedRows","isAllChecked","validVisibleData","currentVisibleRow","isAllUncheckable","r","addCheckedRow","removeCheckedRow","checkAll","checkRow","visibleDetailedRows","toggleDetails","isDetailRowVisible","closeDetailRow","openDetailRow","isDraggingRow","isDraggingColumn","canDragRow","canDragColumn","handleDragStart","handleDragEnd","handleDrop","handleDragOver","handleDragLeave","handleColumnDragStart","handleColumnDragEnd","handleColumnDrop","handleColumnDragOver","handleColumnDragLeave","tableWrapperClasses","tableWrapperStyle","thBaseClasses","thCheckboxClasses","thDetailedClasses","thSubheadingClasses","thSortIconClasses","trSelectedClasses","trCheckedClasses","trEmptyClasses","trDetailedClasses","tdBaseClasses","tdCheckboxClasses","tdDetailedChevronClasses","mobileSortClasses","paginationWrapperClasses","paginationWrapperRootClasses","rowClasses","selectedClasses","checkedClasses","rowClass","index$5","Table","TableColumn","tabClasses","tabIconClasses","tabLabelClasses","index$4","Tabs","TabItem","autocompleteRef","isDropdownActive","selectedItems","inputLength","itemsLength","selectedOptions","hasInput","addItem","itemToAdd","removeItem","onSelect","onBackspace","containerClasses","autocompleteRootClasses","autocompleteInputClasses","autocompleteBind","index$3","Taginput","index$2","Timepicker","index$1","Tooltip","dragDropFocus","onFileChange","updateDragDropFocus","file","checkType","clearInput","focus","types","type","draggableClasses","Upload","plugins"],"mappings":"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"}